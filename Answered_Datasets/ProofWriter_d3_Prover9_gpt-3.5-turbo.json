[
  {
    "id": "ProofWriter_AttNeg-OWA-D3-551",
    "context": "Charlie is blue. Erin is rough. Harry is not rough. If Harry is young and Harry is big then Harry is not green. Blue people are young. All red people are big. Blue people are red. If Erin is green and Erin is cold then Erin is not young. If someone is red then they are rough. If someone is blue and not big then they are rough. Big, rough people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nRough(x) ::: x is rough.\nNotRough(x) ::: x is not rough.\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nNotGreen(x) ::: x is not green.\nRed(x) ::: x is red.\nCold(x) ::: x is cold.\nPremises:\nBlue(Charlie) ::: Charlie is blue.\nRough(Erin) ::: Erin is rough.\nNotRough(Harry) ::: Harry is not rough.\n∀x ((Young(x) ∧ Big(x)) → NotGreen(x)) ::: If Harry is young and big then Harry is not green.\n∀x (Blue(x) → Young(x)) ::: Blue people are young.\n∀x (Red(x) → Big(x)) ::: All red people are big.\n∀x (Blue(x) → Red(x)) ::: Blue people are red.\n∀x ((Green(Erin) ∧ Cold(Erin)) → NotYoung(Erin)) ::: If Erin is green and cold then Erin is not young.\n∀x (Red(x) → Rough(x)) ::: If someone is red then they are rough.\n∀x ((Blue(x) ∧ NotBig(x)) → Rough(x)) ::: If someone is blue and not big then they are rough.\n∀x ((Big(x) ∧ Rough(x)) → Cold(x)) ::: Big, rough people are cold.\nConclusion:\nBlue(Charlie) ::: Charlie is blue."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1168",
    "context": "The bear is kind. The bear is young. The mouse is red. If the mouse likes the bear then the bear likes the mouse. If something likes the bear then the bear visits the mouse. If something is young then it likes the bear. If something is red then it sees the bear. If something visits the mouse then the mouse visits the bear. If something is kind and it visits the bear then the bear is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind(x) ::: x is kind.\nYoung(x) ::: x is young.\nRed(x) ::: x is red.\nLikes(x, y) ::: x likes y.\nVisits(x, y) ::: x visits y.\nSees(x, y) ::: x sees y.\nPremises:\nKind(bear) ::: The bear is kind.\nYoung(bear) ::: The bear is young.\nRed(mouse) ::: The mouse is red.\n∀x (Likes(mouse, bear) → Likes(bear, mouse)) ::: If the mouse likes the bear then the bear likes the mouse.\n∀x (Likes(x, bear) → Visits(x, mouse)) ::: If something likes the bear then it visits the mouse.\n∀x (Young(x) → Likes(x, bear)) ::: If something is young then it likes the bear.\n∀x (Red(x) → Sees(x, bear)) ::: If something is red then it sees the bear.\n∀x (Visits(x, mouse) → Visits(mouse, bear)) ::: If something visits the mouse then the mouse visits the bear.\n∀x ((Kind(x) ∧ Visits(x, bear)) → Young(bear)) ::: If something is kind and it visits the bear then the bear is young.\nConclusion:\n¬Kind(bear) ::: The bear is not kind."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-675",
    "context": "The bear chases the squirrel. The bear is blue. The bear is not kind. The bear is young. The bear sees the squirrel. The squirrel chases the bear. The squirrel visits the bear. If someone is young and they visit the squirrel then the squirrel sees the bear. If someone visits the bear and they are blue then the bear visits the squirrel. If someone chases the squirrel then they visit the bear. If someone sees the bear and the bear is round then they visit the bear. If the squirrel is blue and the squirrel sees the bear then the squirrel visits the bear. If someone visits the bear then they are round. If the bear does not visit the squirrel then the squirrel is not nice. If someone chases the bear and they do not see the bear then they do not see the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not see the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nBlue(x) ::: x is blue.\nKind(x) ::: x is kind.\nYoung(x) ::: x is young.\nSees(x, y) ::: x sees y.\nVisits(x, y) ::: x visits y.\nRound(x) ::: x is round.\nNice(x) ::: x is nice.\nPremises:\nChases(bear, squirrel) ::: The bear chases the squirrel.\nBlue(bear) ::: The bear is blue.\n¬Kind(bear) ::: The bear is not kind.\nYoung(bear) ::: The bear is young.\nSees(bear, squirrel) ::: The bear sees the squirrel.\nChases(squirrel, bear) ::: The squirrel chases the bear.\nVisits(squirrel, bear) ::: The squirrel visits the bear.\n∀x ((Young(x) ∧ Visits(x, squirrel)) → Sees(squirrel, bear)) ::: If someone is young and they visit the squirrel then the squirrel sees the bear.\n∀x ((Visits(x, bear) ∧ Blue(x)) → Visits(bear, squirrel)) ::: If someone visits the bear and they are blue then the bear visits the squirrel.\n∀x (Chases(x, squirrel) → Visits(x, bear)) ::: If someone chases the squirrel then they visit the bear.\n∀x ((Sees(x, bear) ∧ Round(bear)) → Visits(x, bear)) ::: If someone sees the bear and the bear is round then they visit the bear.\n∀x ((Blue(x) ∧ Sees(x, bear)) → Visits(x, bear)) ::: If the squirrel is blue and the squirrel sees the bear then the squirrel visits the bear.\n∀x (Visits(x, bear) → Round(x)) ::: If someone visits the bear then they are round.\n∀x (¬Visits(bear, squirrel) → ¬Nice(squirrel)) ::: If the bear does not visit the squirrel then the squirrel is not nice.\n∀x ((Chases(x, bear) ∧ ¬Sees(x, bear)) → ¬Sees(x, squirrel)) ::: If someone chases the bear and they do not see the bear then they do not see the squirrel.\nConclusion:\n¬Sees(bear, bear) ::: The bear does not see the bear."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1258",
    "context": "The bald eagle eats the squirrel. The bear sees the bald eagle. The cow likes the bald eagle. The squirrel is round. If someone likes the bald eagle then they see the squirrel. If someone eats the cow then the cow is blue. If someone is blue and they see the bear then the bear is rough. If someone eats the bald eagle then the bald eagle eats the bear. If someone likes the squirrel and the squirrel eats the bear then the bear eats the bald eagle. If someone sees the squirrel then the squirrel is young. If someone is young then they eat the squirrel. If someone likes the bear and they like the bald eagle then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle eats the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nSees(x, y) ::: x sees y.\nLikes(x, y) ::: x likes y.\nRound(x) ::: x is round.\nBlue(x) ::: x is blue.\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nPremises:\nEats(bald eagle, squirrel) ::: The bald eagle eats the squirrel.\nSees(bear, bald eagle) ::: The bear sees the bald eagle.\nLikes(cow, bald eagle) ::: The cow likes the bald eagle.\nRound(squirrel) ::: The squirrel is round.\n∀x ((Likes(x, bald eagle)) → (Sees(x, squirrel))) ::: If someone likes the bald eagle then they see the squirrel.\n∀x ((Eats(x, cow)) → (Blue(cow))) ::: If someone eats the cow then the cow is blue.\n∀x ((Blue(x) ∧ Sees(x, bear)) → Rough(bear)) ::: If someone is blue and they see the bear then the bear is rough.\n∀x ((Eats(x, bald eagle)) → (Eats(bald eagle, bear))) ::: If someone eats the bald eagle then the bald eagle eats the bear.\n∀x ((Likes(x, squirrel) ∧ Eats(squirrel, bear)) → (Eats(bear, bald eagle))) ::: If someone likes the squirrel and the squirrel eats the bear then the bear eats the bald eagle.\n∀x (Sees(x, squirrel) → Young(squirrel)) ::: If someone sees the squirrel then the squirrel is young.\n∀x (Young(x) → Eats(x, squirrel)) ::: If someone is young then they eat the squirrel.\n∀x ((Likes(x, bear) ∧ Likes(x, bald eagle)) → Young(x)) ::: If someone likes the bear and they like the bald eagle then they are young.\nConclusion:\nEats(bald eagle, squirrel) ::: The bald eagle eats the squirrel."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-507",
    "context": "Erin is big. Erin is blue. Erin is red. Erin is white. Fiona is big. Fiona is blue. Fiona is quiet. Fiona is red. Fiona is smart. Fiona is white. Young, quiet people are red. All young, blue people are white. If Erin is big and Erin is smart then Erin is white. If someone is smart then they are quiet. All white people are smart. All red, blue people are smart. If someone is big and quiet then they are young. All blue people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nRed(x) ::: x is red.\nWhite(x) ::: x is white.\nQuiet(x) ::: x is quiet.\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nPremises:\nBig(Erin) ::: Erin is big.\nBlue(Erin) ::: Erin is blue.\nRed(Erin) ::: Erin is red.\nWhite(Erin) ::: Erin is white.\nBig(Fiona) ::: Fiona is big.\nBlue(Fiona) ::: Fiona is blue.\nQuiet(Fiona) ::: Fiona is quiet.\nRed(Fiona) ::: Fiona is red.\nSmart(Fiona) ::: Fiona is smart.\nWhite(Fiona) ::: Fiona is white.\n∀x ((Young(x) ∧ Quiet(x)) → Red(x)) ::: Young, quiet people are red.\n∀x ((Young(x) ∧ Blue(x)) → White(x)) ::: All young, blue people are white.\n∀x ((Big(x) ∧ Smart(x)) → White(x)) ::: If Erin is big and Erin is smart then Erin is white.\n∀x (Smart(x) → Quiet(x)) ::: If someone is smart then they are quiet.\n∀x (White(x) → Smart(x)) ::: All white people are smart.\n∀x ((Red(x) ∧ Blue(x)) → Smart(x)) ::: All red, blue people are smart.\n∀x ((Big(x) ∧ Quiet(x)) → Young(x)) ::: If someone is big and quiet then they are young.\n∀x (Blue(x) → Smart(x)) ::: All blue people are smart.\nConclusion:\n¬Quiet(Fiona) ::: Fiona is not quiet."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-172",
    "context": "Anne is red. Bob is rough. Fiona is not blue. Gary is not young. Kind things are furry. Rough things are cold. If something is furry and rough then it is young. If something is cold and not blue then it is young. If something is cold then it is kind. If Gary is not blue then Gary is not red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is red.\nRough(x) ::: x is rough.\nBlue(x) ::: x is blue.\nYoung(x) ::: x is young.\nFurry(x) ::: x is furry.\nCold(x) ::: x is cold.\nKind(x) ::: x is kind.\nPremises:\nRed(Anne) ::: Anne is red.\nRough(Bob) ::: Bob is rough.\n¬Blue(Fiona) ::: Fiona is not blue.\n¬Young(Gary) ::: Gary is not young.\n∀x (Kind(x) → Furry(x)) ::: Kind things are furry.\n∀x (Rough(x) → Cold(x)) ::: Rough things are cold.\n∀x ((Furry(x) ∧ Rough(x)) → Young(x)) ::: If something is furry and rough then it is young.\n∀x ((Cold(x) ∧ ¬Blue(x)) → Young(x)) ::: If something is cold and not blue then it is young.\n∀x (Cold(x) → Kind(x)) ::: If something is cold then it is kind.\n¬Blue(Gary) → ¬Red(Gary) ::: If Gary is not blue then Gary is not red.\nConclusion:\n¬Cold(Gary) ::: Gary is not cold."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-236",
    "context": "Charlie is big. Charlie is cold. Charlie is red. Charlie is smart. Erin is nice. Erin is quiet. Erin is red. Erin is smart. Fiona is big. Fiona is white. Harry is cold. Harry is red. Cold things are quiet. Quiet things are nice. If Harry is white and Harry is smart then Harry is quiet. If something is red then it is white. If Fiona is red then Fiona is cold. Nice things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nRed(x) ::: x is red.\nSmart(x) ::: x is smart.\nNice(x) ::: x is nice.\nQuiet(x) ::: x is quiet.\nWhite(x) ::: x is white.\nPremises:\nBig(Charlie) ::: Charlie is big.\nCold(Charlie) ::: Charlie is cold.\nRed(Charlie) ::: Charlie is red.\nSmart(Charlie) ::: Charlie is smart.\nNice(Erin) ::: Erin is nice.\nQuiet(Erin) ::: Erin is quiet.\nRed(Erin) ::: Erin is red.\nSmart(Erin) ::: Erin is smart.\nBig(Fiona) ::: Fiona is big.\nWhite(Fiona) ::: Fiona is white.\nCold(Harry) ::: Harry is cold.\nRed(Harry) ::: Harry is red.\n∀x ((Cold(x) → Quiet(x)) ::: Cold things are quiet.\n∀x ((Quiet(x) → Nice(x)) ::: Quiet things are nice.\n∀x ((White(Harry) ∧ Smart(Harry)) → Quiet(Harry)) ::: If Harry is white and Harry is smart then Harry is quiet.\n∀x (Red(x) → White(x)) ::: If something is red then it is white.\n∀x (Red(Fiona) → Cold(Fiona)) ::: If Fiona is red then Fiona is cold.\n∀x (Nice(x) → Big(x)) ::: Nice things are big.\nConclusion:\nBig(Charlie) ::: Charlie is big."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1706",
    "context": "Anne is not big. Anne is kind. Anne is smart. Anne is young. Charlie is kind. Dave is not blue. Fiona is blue. All young people are smart. If someone is big then they are not kind. If someone is furry and kind then they are round. If Anne is furry then Anne is smart. If someone is blue and round then they are furry. If someone is young then they are furry. If Dave is young and Dave is not kind then Dave is round. All round people are not blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nKind(x) ::: x is kind.\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nBlue(x) ::: x is blue.\nFurry(x) ::: x is furry.\nRound(x) ::: x is round.\nPremises:\n¬Big(Anne) ::: Anne is not big.\nKind(Anne) ::: Anne is kind.\nSmart(Anne) ::: Anne is smart.\nYoung(Anne) ::: Anne is young.\nKind(Charlie) ::: Charlie is kind.\n¬Blue(Dave) ::: Dave is not blue.\nBlue(Fiona) ::: Fiona is blue.\n∀x (Young(x) → Smart(x)) ::: All young people are smart.\n∀x ((Big(x) → ¬Kind(x))) ::: If someone is big then they are not kind.\n∀x ((Furry(x) ∧ Kind(x)) → Round(x)) ::: If someone is furry and kind then they are round.\n∀x (Furry(Anne) → Smart(Anne)) ::: If Anne is furry then Anne is smart.\n∀x ((Blue(x) ∧ Round(x)) → Furry(x)) ::: If someone is blue and round then they are furry.\n∀x (Young(x) → Furry(x)) ::: If someone is young then they are furry.\n∀x ((Young(Dave) ∧ ¬Kind(Dave)) → Round(Dave)) ::: If Dave is young and Dave is not kind then Dave is round.\n∀x (Round(x) → ¬Blue(x)) ::: All round people are not blue.\nConclusion:\n¬Young(Anne) ::: Anne is not young."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-158",
    "context": "The bald eagle is red. The bald eagle needs the tiger. The tiger likes the bald eagle. If something chases the tiger and it chases the bald eagle then the bald eagle is nice. If something likes the bald eagle then it needs the bald eagle. If something is red then it chases the bald eagle. If something needs the bald eagle then the bald eagle likes the tiger. If something chases the tiger and it chases the bald eagle then the bald eagle is cold. If something likes the tiger then it chases the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not chase the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is red.\nNeeds(x, y) ::: x needs y.\nLikes(x, y) ::: x likes y.\nChases(x, y) ::: x chases y.\nNice(x) ::: x is nice.\nCold(x) ::: x is cold.\nPremises:\nRed(bald_eagle) ::: The bald eagle is red.\nNeeds(bald_eagle, tiger) ::: The bald eagle needs the tiger.\nLikes(tiger, bald_eagle) ::: The tiger likes the bald eagle.\n∀x, y ((Chases(x, tiger) ∧ Chases(y, bald_eagle)) → Nice(bald_eagle)) ::: If something chases the tiger and it chases the bald eagle then the bald eagle is nice.\n∀x (Likes(x, bald_eagle) → Needs(x, bald_eagle)) ::: If something likes the bald eagle then it needs the bald eagle.\n∀x (Red(x) → Chases(x, bald_eagle)) ::: If something is red then it chases the bald eagle.\n∀x (Needs(x, bald_eagle) → Likes(bald_eagle, tiger)) ::: If something needs the bald eagle then the bald eagle likes the tiger.\n∀x, y ((Chases(x, tiger) ∧ Chases(y, bald_eagle)) → Cold(bald_eagle)) ::: If something chases the tiger and it chases the bald eagle then the bald eagle is cold.\n∀x (Likes(x, tiger) → Chases(x, tiger)) ::: If something likes the tiger then it chases the tiger.\nConclusion:\n¬Chases(tiger, bald_eagle) ::: The tiger does not chase the bald eagle."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1335",
    "context": "The bald eagle is kind. The bear chases the squirrel. The dog visits the bald eagle. The squirrel likes the dog. If something chases the bear and the bear is big then it likes the dog. If something likes the bald eagle and it is nice then it visits the bear. If something chases the bald eagle then it is red. If something is young then it likes the dog. If something visits the dog then it is young. If something is red and it likes the squirrel then it chases the bear. If something visits the bald eagle then it visits the dog. If something likes the bald eagle then the bald eagle likes the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel likes the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind(x) ::: x is kind.\nChases(x, y) ::: x chases y.\nVisits(x, y) ::: x visits y.\nLikes(x, y) ::: x likes y.\nBig(x) ::: x is big.\nRed(x) ::: x is red.\nYoung(x) ::: x is young.\nNice(x) ::: x is nice.\nBaldEagle(x) ::: x is a bald eagle.\nBear(x) ::: x is a bear.\nSquirrel(x) ::: x is a squirrel.\nDog(x) ::: x is a dog.\nPremises:\nKind(BaldEagle) ::: The bald eagle is kind.\nChases(Bear, Squirrel) ::: The bear chases the squirrel.\nVisits(Dog, BaldEagle) ::: The dog visits the bald eagle.\nLikes(Squirrel, Dog) ::: The squirrel likes the dog.\n∀x ((Chases(x, Bear) ∧ Big(Bear)) → Likes(x, Dog)) ::: If something chases the bear and the bear is big then it likes the dog.\n∀x ((Likes(x, BaldEagle) ∧ Nice(x)) → Visits(x, Bear)) ::: If something likes the bald eagle and it is nice then it visits the bear.\n∀x (Chases(x, BaldEagle) → Red(x)) ::: If something chases the bald eagle then it is red.\n∀x (Young(x) → Likes(x, Dog)) ::: If something is young then it likes the dog.\n∀x (Visits(x, Dog) → Young(x)) ::: If something visits the dog then it is young.\n∀x ((Red(x) ∧ Likes(x, Squirrel)) → Chases(x, Bear)) ::: If something is red and it likes the squirrel then it chases the bear.\n∀x (Visits(x, BaldEagle) → Visits(x, Dog)) ::: If something visits the bald eagle then it visits the dog.\n∀x (Likes(x, BaldEagle) → Likes(BaldEagle, Squirrel)) ::: If something likes the bald eagle then the bald eagle likes the squirrel.\nConclusion:\nLikes(Squirrel, Dog) ::: The squirrel likes the dog."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-516",
    "context": "The bear is green. If someone is young then they are kind. If someone is young and nice then they are green. All green people are round. Kind people are nice. Young people are nice. If someone is round then they are young. All young, green people are kind. If someone is green and young then they are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nYoung(x) ::: x is young.\nKind(x) ::: x is kind.\nNice(x) ::: x is nice.\nRound(x) ::: x is round.\nPremises:\nGreen(bear) ::: The bear is green.\n∀x (Young(x) → Kind(x)) ::: If someone is young then they are kind.\n∀x ((Young(x) ∧ Nice(x)) → Green(x)) ::: If someone is young and nice then they are green.\n∀x (Green(x) → Round(x)) ::: All green people are round.\n∀x (Kind(x) → Nice(x)) ::: Kind people are nice.\n∀x (Young(x) → Nice(x)) ::: Young people are nice.\n∀x (Round(x) → Young(x)) ::: If someone is round then they are young.\n∀x ((Young(x) ∧ Green(x)) → Kind(x)) ::: All young, green people are kind.\n∀x ((Green(x) ∧ Young(x)) → Nice(x)) ::: If someone is green and young then they are nice.\nConclusion:\n¬Green(bear) ::: The bear is not green."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-428",
    "context": "The bear chases the rabbit. The bear is big. The bear needs the rabbit. The rabbit chases the bear. The rabbit is round. The rabbit needs the bear. The rabbit sees the bear. If the rabbit sees the bear then the bear is big. If something is rough then it is big. If something needs the rabbit then the rabbit is rough. If something sees the rabbit then it chases the rabbit. If the bear chases the rabbit then the rabbit is round. If the rabbit is big and the rabbit chases the bear then the rabbit is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit does not chase the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nBig(x) ::: x is big.\nNeeds(x, y) ::: x needs y.\nRound(x) ::: x is round.\nRough(x) ::: x is rough.\nSees(x, y) ::: x sees y.\nYoung(x) ::: x is young.\nPremises:\nChases(bear, rabbit) ::: The bear chases the rabbit.\nBig(bear) ::: The bear is big.\nNeeds(bear, rabbit) ::: The bear needs the rabbit.\nChases(rabbit, bear) ::: The rabbit chases the bear.\nRound(rabbit) ::: The rabbit is round.\nNeeds(rabbit, bear) ::: The rabbit needs the bear.\nSees(rabbit, bear) ::: The rabbit sees the bear.\n∀x ((Sees(rabbit, bear)) → Big(bear)) ::: If the rabbit sees the bear then the bear is big.\n∀x (Rough(x) → Big(x)) ::: If something is rough then it is big.\n∀x (Needs(x, rabbit) → Rough(rabbit)) ::: If something needs the rabbit then the rabbit is rough.\n∀x (Sees(x, rabbit) → Chases(x, rabbit)) ::: If something sees the rabbit then it chases the rabbit.\n∀x ((Chases(bear, rabbit)) → Round(rabbit)) ::: If the bear chases the rabbit then the rabbit is round.\n∀x ((Big(x) ∧ Chases(x, bear)) → Young(x)) ::: If the rabbit is big and the rabbit chases the bear then the rabbit is young.\nConclusion:\n¬Chases(rabbit, rabbit) ::: The rabbit does not chase the rabbit."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-710",
    "context": "The cat is green. The cat is nice. The cat needs the squirrel. The cat visits the dog. The dog is cold. The dog likes the cat. The dog needs the cat. The dog needs the squirrel. The dog visits the cat. The dog visits the squirrel. The squirrel is cold. The squirrel likes the dog. If something is nice then it likes the squirrel. If something likes the squirrel then it visits the squirrel. If something visits the squirrel then it visits the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel likes the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nNice(x) ::: x is nice.\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\nCold(x) ::: x is cold.\nLikes(x, y) ::: x likes y.\nPremises:\nGreen(cat) ::: The cat is green.\nNice(cat) ::: The cat is nice.\nNeeds(cat, squirrel) ::: The cat needs the squirrel.\nVisits(cat, dog) ::: The cat visits the dog.\nCold(dog) ::: The dog is cold.\nLikes(dog, cat) ::: The dog likes the cat.\nNeeds(dog, cat) ::: The dog needs the cat.\nNeeds(dog, squirrel) ::: The dog needs the squirrel.\nVisits(dog, cat) ::: The dog visits the cat.\nVisits(dog, squirrel) ::: The dog visits the squirrel.\nCold(squirrel) ::: The squirrel is cold.\nLikes(squirrel, dog) ::: The squirrel likes the dog.\n∀x (Nice(x) → Likes(x, squirrel)) ::: If something is nice then it likes the squirrel.\n∀x (Likes(x, squirrel) → Visits(x, squirrel)) ::: If something likes the squirrel then it visits the squirrel.\n∀x (Visits(x, squirrel) → Visits(x, cat)) ::: If something visits the squirrel then it visits the cat.\nConclusion:\nLikes(squirrel, dog) ::: The squirrel likes the dog."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-863",
    "context": "Anne is rough. Bob is cold. Erin is kind. Fiona is smart. All white people are nice. If someone is cold then they are nice. If someone is quiet then they are smart. If someone is smart then they are nice. All cold people are white. All rough people are cold. If Bob is white and Bob is nice then Bob is rough. All white people are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough(x) ::: x is rough.\nCold(x) ::: x is cold.\nKind(x) ::: x is kind.\nSmart(x) ::: x is smart.\nWhite(x) ::: x is white.\nNice(x) ::: x is nice.\nQuiet(x) ::: x is quiet.\nPremises:\nRough(Anne) ::: Anne is rough.\nCold(Bob) ::: Bob is cold.\nKind(Erin) ::: Erin is kind.\nSmart(Fiona) ::: Fiona is smart.\n∀x (White(x) → Nice(x)) ::: All white people are nice.\n∀x (Cold(x) → Nice(x)) ::: If someone is cold then they are nice.\n∀x (Quiet(x) → Smart(x)) ::: If someone is quiet then they are smart.\n∀x (Smart(x) → Nice(x)) ::: If someone is smart then they are nice.\n∀x (Cold(x) → White(x)) ::: All cold people are white.\n∀x (Rough(x) → Cold(x)) ::: All rough people are cold.\n∀x ((White(Bob) ∧ Nice(Bob)) → Rough(Bob)) ::: If Bob is white and Bob is nice then Bob is rough.\n∀x (White(x) → Kind(x)) ::: All white people are kind.\nConclusion:\n¬Rough(Anne) ::: Anne is not rough."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1081",
    "context": "The mouse likes the tiger. The mouse needs the squirrel. The mouse needs the tiger. The mouse visits the squirrel. The mouse visits the tiger. The squirrel is cold. The squirrel is young. The squirrel likes the mouse. The squirrel likes the tiger. The squirrel needs the tiger. The squirrel does not visit the tiger. The tiger visits the squirrel. If something needs the tiger then it is round. If something is young then it does not visit the tiger. If something needs the squirrel and the squirrel does not need the tiger then the squirrel is cold. If something is round then it visits the squirrel. If something visits the squirrel then it is not red. If the mouse is young then the mouse needs the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes(x, y) ::: x likes y.\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\nCold(x) ::: x is cold.\nYoung(x) ::: x is young.\nRound(x) ::: x is round.\nRed(x) ::: x is red.\nMouse(x) ::: x is a mouse.\nTiger(x) ::: x is a tiger.\nSquirrel(x) ::: x is a squirrel.\nPremises:\nLikes(Mouse, Tiger) ::: The mouse likes the tiger.\nNeeds(Mouse, Squirrel) ::: The mouse needs the squirrel.\nNeeds(Mouse, Tiger) ::: The mouse needs the tiger.\nVisits(Mouse, Squirrel) ::: The mouse visits the squirrel.\nVisits(Mouse, Tiger) ::: The mouse visits the tiger.\nCold(Squirrel) ::: The squirrel is cold.\nYoung(Squirrel) ::: The squirrel is young.\nLikes(Squirrel, Mouse) ::: The squirrel likes the mouse.\nLikes(Squirrel, Tiger) ::: The squirrel likes the tiger.\nNeeds(Squirrel, Tiger) ::: The squirrel needs the tiger.\n¬Visits(Squirrel, Tiger) ::: The squirrel does not visit the tiger.\nVisits(Tiger, Squirrel) ::: The tiger visits the squirrel.\n∀x (Needs(x, Tiger) → Round(x)) ::: If something needs the tiger then it is round.\n∀x (Young(x) → ¬Visits(x, Tiger)) ::: If something is young then it does not visit the tiger.\n∀x ((Needs(x, Squirrel) ∧ ¬Needs(x, Tiger)) → Cold(Squirrel)) ::: If something needs the squirrel and the squirrel does not need the tiger then the squirrel is cold.\n∀x (Round(x) → Visits(x, Squirrel)) ::: If something is round then it visits the squirrel.\n∀x (Visits(x, Squirrel) → ¬Red(x)) ::: If something visits the squirrel then it is not red.\n∀x (Young(x) → Needs(x, Tiger)) ::: If the mouse is young then the mouse needs the tiger.\nConclusion:\n¬Round(Tiger) ::: The tiger is not round."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1251",
    "context": "The bald eagle chases the cat. The cat likes the squirrel. The squirrel chases the cat. If the bald eagle chases the cat then the cat chases the squirrel. If the bald eagle is big and the bald eagle chases the cat then the cat is rough. If someone is cold then they are rough. If someone sees the bald eagle and they chase the bald eagle then the bald eagle chases the squirrel. If someone is red and round then they chase the cat. If someone likes the bald eagle and they see the squirrel then the bald eagle is rough. If someone chases the squirrel then the squirrel is rough. If someone is rough then they like the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle chases the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nLikes(x, y) ::: x likes y.\nBig(x) ::: x is big.\nRough(x) ::: x is rough.\nCold(x) ::: x is cold.\nSees(x, y) ::: x sees y.\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nPremises:\nChases(BaldEagle, Cat) ::: The bald eagle chases the cat.\nLikes(Cat, Squirrel) ::: The cat likes the squirrel.\nChases(Squirrel, Cat) ::: The squirrel chases the cat.\n∀x ((Chases(BaldEagle, Cat)) → (Chases(Cat, Squirrel))) ::: If the bald eagle chases the cat then the cat chases the squirrel.\n∀x ((Big(BaldEagle) ∧ Chases(BaldEagle, Cat)) → Rough(Cat)) ::: If the bald eagle is big and the bald eagle chases the cat then the cat is rough.\n∀x (Cold(x) → Rough(x)) ::: If someone is cold then they are rough.\n∀x ((Sees(x, BaldEagle) ∧ Chases(x, BaldEagle)) → Chases(BaldEagle, Squirrel)) ::: If someone sees the bald eagle and they chase the bald eagle then the bald eagle chases the squirrel.\n∀x ((Red(x) ∧ Round(x)) → Chases(x, Cat)) ::: If someone is red and round then they chase the cat.\n∀x ((Likes(x, BaldEagle) ∧ Sees(x, Squirrel)) → Rough(BaldEagle)) ::: If someone likes the bald eagle and they see the squirrel then the bald eagle is rough.\n∀x (Chases(x, Squirrel) → Rough(Squirrel)) ::: If someone chases the squirrel then the squirrel is rough.\n∀x (Rough(x) → Likes(x, Cat)) ::: If someone is rough then they like the cat.\nConclusion:\nChases(BaldEagle, Cat) ::: The bald eagle chases the cat."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-80",
    "context": "The cat is blue. The cat is young. The cat likes the cow. The cat visits the rabbit. The cow is blue. The cow is kind. The cow is young. The cow likes the cat. The cow needs the cat. The cow needs the rabbit. The cow visits the cat. The cow visits the rabbit. The rabbit is big. The rabbit is blue. The rabbit is kind. The rabbit likes the cat. If someone visits the rabbit then the rabbit needs the cow. If someone is blue and big then they visit the cat. If someone visits the cow then they like the cow. If someone needs the cow then they visit the cow. If someone is green and blue then they like the rabbit. If the cow is blue and the cow needs the cat then the cow likes the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not like the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nYoung(x) ::: x is young.\nLikes(x, y) ::: x likes y.\nVisits(x, y) ::: x visits y.\nKind(x) ::: x is kind.\nNeeds(x, y) ::: x needs y.\nBig(x) ::: x is big.\nGreen(x) ::: x is green.\nPremises:\nBlue(Cat) ::: The cat is blue.\nYoung(Cat) ::: The cat is young.\nLikes(Cat, Cow) ::: The cat likes the cow.\nVisits(Cat, Rabbit) ::: The cat visits the rabbit.\nBlue(Cow) ::: The cow is blue.\nKind(Cow) ::: The cow is kind.\nYoung(Cow) ::: The cow is young.\nLikes(Cow, Cat) ::: The cow likes the cat.\nNeeds(Cow, Cat) ::: The cow needs the cat.\nNeeds(Cow, Rabbit) ::: The cow needs the rabbit.\nVisits(Cow, Cat) ::: The cow visits the cat.\nVisits(Cow, Rabbit) ::: The cow visits the rabbit.\nBig(Rabbit) ::: The rabbit is big.\nBlue(Rabbit) ::: The rabbit is blue.\nKind(Rabbit) ::: The rabbit is kind.\nLikes(Rabbit, Cat) ::: The rabbit likes the cat.\n∀x ((Visits(x, Rabbit)) → Needs(Rabbit, x)) ::: If someone visits the rabbit then the rabbit needs the cow.\n∀x ((Blue(x) ∧ Big(x)) → Visits(x, Cat)) ::: If someone is blue and big then they visit the cat.\n∀x ((Visits(x, Cow)) → Likes(x, Cow)) ::: If someone visits the cow then they like the cow.\n∀x ((Needs(x, Cow)) → Visits(x, Cow)) ::: If someone needs the cow then they visit the cow.\n∀x ((Green(x) ∧ Blue(x)) → Likes(x, Rabbit)) ::: If someone is green and blue then they like the rabbit.\n∀x ((Blue(Cow) ∧ Needs(Cow, Cat)) → Likes(Cow, Cat)) ::: If the cow is blue and the cow needs the cat then the cow likes the cat.\nConclusion:\n¬Likes(Cat, Cow) ::: The cat does not like the cow."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-691",
    "context": "The bald eagle needs the dog. The dog needs the rabbit. The lion eats the dog. The rabbit needs the lion. If someone likes the dog and the dog is rough then they eat the rabbit. All cold people are red. If someone needs the lion then they eat the bald eagle. If someone is green and they like the dog then the dog likes the bald eagle. If someone eats the bald eagle then they are cold. Green people are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds(x, y) ::: x needs y.\nEats(x, y) ::: x eats y.\nLikes(x, y) ::: x likes y.\nRough(x) ::: x is rough.\nCold(x) ::: x is cold.\nRed(x) ::: x is red.\nGreen(x) ::: x is green.\nPremises:\nNeeds(BaldEagle, Dog) ::: The bald eagle needs the dog.\nNeeds(Dog, Rabbit) ::: The dog needs the rabbit.\nEats(Lion, Dog) ::: The lion eats the dog.\nNeeds(Rabbit, Lion) ::: The rabbit needs the lion.\n∀x ((Likes(x, Dog) ∧ Rough(Dog)) → Eats(x, Rabbit)) ::: If someone likes the dog and the dog is rough then they eat the rabbit.\n∀x (Cold(x) → Red(x)) ::: All cold people are red.\n∀x (Needs(x, Lion) → Eats(x, BaldEagle)) ::: If someone needs the lion then they eat the bald eagle.\n∀x ((Green(x) ∧ Likes(x, Dog)) → Likes(Dog, BaldEagle)) ::: If someone is green and they like the dog then the dog likes the bald eagle.\n∀x (Eats(x, BaldEagle) → Cold(x)) ::: If someone eats the bald eagle then they are cold.\n∀x (Green(x) → Red(x)) ::: Green people are red.\nConclusion:\n¬Red(BaldEagle) ::: The bald eagle is not red."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1602",
    "context": "The lion chases the mouse. The lion chases the rabbit. The lion is nice. The lion likes the rabbit. The lion needs the mouse. The lion needs the rabbit. The mouse chases the lion. The mouse chases the rabbit. The mouse likes the lion. The rabbit chases the lion. The rabbit is blue. The rabbit is round. The rabbit likes the lion. The rabbit likes the mouse. The rabbit needs the lion. The rabbit needs the mouse. If something is blue and it likes the mouse then the mouse is green. If something chases the lion then the lion is nice. If something chases the rabbit and it is round then it chases the lion. If something chases the lion and it likes the mouse then the mouse needs the rabbit. If something needs the mouse and the mouse needs the rabbit then it is round. If something is blue then it needs the rabbit. If something chases the lion and the lion likes the rabbit then it needs the lion. If the lion needs the mouse and the mouse is green then the mouse is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse chases the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nNice(x) ::: x is nice.\nLikes(x, y) ::: x likes y.\nNeeds(x, y) ::: x needs y.\nBlue(x) ::: x is blue.\nRound(x) ::: x is round.\nGreen(x) ::: x is green.\nPremises:\nChases(Lion, Mouse) ::: The lion chases the mouse.\nChases(Lion, Rabbit) ::: The lion chases the rabbit.\nNice(Lion) ::: The lion is nice.\nLikes(Lion, Rabbit) ::: The lion likes the rabbit.\nNeeds(Lion, Mouse) ::: The lion needs the mouse.\nNeeds(Lion, Rabbit) ::: The lion needs the rabbit.\nChases(Mouse, Lion) ::: The mouse chases the lion.\nChases(Mouse, Rabbit) ::: The mouse chases the rabbit.\nLikes(Mouse, Lion) ::: The mouse likes the lion.\nChases(Rabbit, Lion) ::: The rabbit chases the lion.\nBlue(Rabbit) ::: The rabbit is blue.\nRound(Rabbit) ::: The rabbit is round.\nLikes(Rabbit, Lion) ::: The rabbit likes the lion.\nLikes(Rabbit, Mouse) ::: The rabbit likes the mouse.\nNeeds(Rabbit, Lion) ::: The rabbit needs the lion.\nNeeds(Rabbit, Mouse) ::: The rabbit needs the mouse.\n∀x ((Blue(x) ∧ Likes(x, Mouse)) → Green(Mouse)) ::: If something is blue and it likes the mouse then the mouse is green.\n∀x (Chases(x, Lion) → Nice(Lion)) ::: If something chases the lion then the lion is nice.\n∀x ((Chases(x, Rabbit) ∧ Round(x)) → Chases(x, Lion)) ::: If something chases the rabbit and it is round then it chases the lion.\n∀x ((Chases(x, Lion) ∧ Likes(x, Mouse)) → Needs(Mouse, Rabbit)) ::: If something chases the lion and it likes the mouse then the mouse needs the rabbit.\n∀x ((Needs(x, Mouse) ∧ Needs(Mouse, Rabbit)) → Round(x)) ::: If something needs the mouse and the mouse needs the rabbit then it is round.\n∀x (Blue(x) → Needs(x, Rabbit)) ::: If something is blue then it needs the rabbit.\n∀x ((Chases(x, Lion) ∧ Likes(Lion, Rabbit)) → Needs(Lion, Rabbit)) ::: If something chases the lion and the lion likes the rabbit then it needs the lion.\n∀x ((Needs(Lion, Mouse) ∧ Green(Mouse)) → Nice(Mouse)) ::: If the lion needs the mouse and the mouse is green then the mouse is nice.\nConclusion:\nChases(Mouse, Rabbit) ::: The mouse chases the rabbit."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1610",
    "context": "The bald eagle needs the squirrel. The bald eagle visits the squirrel. The bear chases the bald eagle. The dog is green. The squirrel chases the dog. The squirrel needs the bald eagle. The squirrel visits the dog. If someone visits the bald eagle then they are big. If someone chases the bald eagle then they visit the dog. If someone visits the dog and they visit the squirrel then they need the dog. If someone is big then they chase the bear. All round, rough people are big. If someone chases the dog and they are kind then they are green. If someone chases the bald eagle and they visit the dog then the dog visits the bald eagle. If someone is green then they chase the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\nChases(x, y) ::: x chases y.\nGreen(x) ::: x is green.\nBig(x) ::: x is big.\nRound(x) ::: x is round.\nRough(x) ::: x is rough.\nKind(x) ::: x is kind.\nPremises:\nNeeds(BaldEagle, Squirrel) ::: The bald eagle needs the squirrel.\nVisits(BaldEagle, Squirrel) ::: The bald eagle visits the squirrel.\nChases(Bear, BaldEagle) ::: The bear chases the bald eagle.\nGreen(Dog) ::: The dog is green.\nChases(Squirrel, Dog) ::: The squirrel chases the dog.\nNeeds(Squirrel, BaldEagle) ::: The squirrel needs the bald eagle.\nVisits(Squirrel, Dog) ::: The squirrel visits the dog.\n∀x (Visits(x, BaldEagle) → Big(x)) ::: If someone visits the bald eagle then they are big.\n∀x (Chases(x, BaldEagle) → Visits(x, Dog)) ::: If someone chases the bald eagle then they visit the dog.\n∀x ((Visits(x, Dog) ∧ Visits(x, Squirrel)) → Needs(x, Dog)) ::: If someone visits the dog and they visit the squirrel then they need the dog.\n∀x (Big(x) → Chases(x, Bear)) ::: If someone is big then they chase the bear.\n∀x ((Round(x) ∧ Rough(x)) → Big(x)) ::: All round, rough people are big.\n∀x ((Chases(x, Dog) ∧ Kind(x)) → Green(x)) ::: If someone chases the dog and they are kind then they are green.\n∀x ((Chases(x, BaldEagle) ∧ Visits(x, Dog)) → Visits(Dog, BaldEagle)) ::: If someone chases the bald eagle and they visit the dog then the dog visits the bald eagle.\n∀x (Green(x) → Chases(x, Squirrel)) ::: If someone is green then they chase the squirrel.\nConclusion:\n¬Green(Dog) ::: The dog is not green."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1180",
    "context": "Bob is cold. Bob is not furry. Bob is kind. Bob is rough. Erin is quiet. Fiona is not cold. Fiona is furry. Harry is cold. Harry is not furry. Harry is kind. All round, kind things are rough. All furry things are not rough. Quiet, round things are cold. If something is rough and not kind then it is furry. If something is rough then it is quiet. Furry things are not green. If Erin is furry and Erin is green then Erin is cold. If something is kind then it is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not rough.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nFurry(x) ::: x is furry.\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nQuiet(x) ::: x is quiet.\nRound(x) ::: x is round.\nGreen(x) ::: x is green.\nPremises:\nCold(Bob) ::: Bob is cold.\n¬Furry(Bob) ::: Bob is not furry.\nKind(Bob) ::: Bob is kind.\nRough(Bob) ::: Bob is rough.\nQuiet(Erin) ::: Erin is quiet.\n¬Cold(Fiona) ::: Fiona is not cold.\nFurry(Fiona) ::: Fiona is furry.\nCold(Harry) ::: Harry is cold.\n¬Furry(Harry) ::: Harry is not furry.\nKind(Harry) ::: Harry is kind.\n∀x ((Round(x) ∧ Kind(x)) → Rough(x)) ::: All round, kind things are rough.\n∀x (Furry(x) → ¬Rough(x)) ::: All furry things are not rough.\n∀x ((Quiet(x) ∧ Round(x)) → Cold(x)) ::: Quiet, round things are cold.\n∀x ((Rough(x) ∧ ¬Kind(x)) → Furry(x)) ::: If something is rough and not kind then it is furry.\n∀x (Rough(x) → Quiet(x)) ::: If something is rough then it is quiet.\n∀x (Furry(x) → ¬Green(x)) ::: Furry things are not green.\n∀x ((Furry(Erin) ∧ Green(Erin)) → Cold(Erin)) ::: If Erin is furry and Erin is green then Erin is cold.\n∀x (Kind(x) → Round(x)) ::: If something is kind then it is round.\nConclusion:\n¬Rough(Erin) ::: Erin is not rough."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1309",
    "context": "The bald eagle is blue. The bald eagle likes the bear. The bald eagle likes the lion. The bald eagle likes the rabbit. The bear is big. The bear is red. The bear needs the bald eagle. The bear visits the rabbit. The lion needs the bald eagle. The lion needs the rabbit. The lion visits the bear. The rabbit is blue. The rabbit is red. The rabbit likes the bald eagle. The rabbit likes the lion. The rabbit visits the bald eagle. If someone needs the bear then they need the lion. If someone needs the bear and the bear is cold then the bear likes the rabbit. If the rabbit needs the bear then the rabbit likes the bear. If someone likes the bear then they are cold. Cold, blue people are round. If someone is cold and blue then they need the bear. If someone visits the bear then they need the lion. If someone visits the lion then they like the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit likes the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nLikes(x, y) ::: x likes y.\nBig(x) ::: x is big.\nRed(x) ::: x is red.\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\nCold(x) ::: x is cold.\nRound(x) ::: x is round.\nPremises:\nBlue(bald eagle) ::: The bald eagle is blue.\nLikes(bald eagle, bear) ::: The bald eagle likes the bear.\nLikes(bald eagle, lion) ::: The bald eagle likes the lion.\nLikes(bald eagle, rabbit) ::: The bald eagle likes the rabbit.\nBig(bear) ::: The bear is big.\nRed(bear) ::: The bear is red.\nNeeds(bear, bald eagle) ::: The bear needs the bald eagle.\nVisits(bear, rabbit) ::: The bear visits the rabbit.\nNeeds(lion, bald eagle) ::: The lion needs the bald eagle.\nNeeds(lion, rabbit) ::: The lion needs the rabbit.\nVisits(lion, bear) ::: The lion visits the bear.\nBlue(rabbit) ::: The rabbit is blue.\nRed(rabbit) ::: The rabbit is red.\nLikes(rabbit, bald eagle) ::: The rabbit likes the bald eagle.\nLikes(rabbit, lion) ::: The rabbit likes the lion.\nVisits(rabbit, bald eagle) ::: The rabbit visits the bald eagle.\n∀x (Needs(x, bear) → Needs(x, lion)) ::: If someone needs the bear then they need the lion.\n∀x ((Needs(x, bear) ∧ Cold(bear)) → Likes(x, rabbit)) ::: If someone needs the bear and the bear is cold then the bear likes the rabbit.\n∀x (Needs(rabbit, bear) → Likes(rabbit, bear)) ::: If the rabbit needs the bear then the rabbit likes the bear.\n∀x (Likes(x, bear) → Cold(x)) ::: If someone likes the bear then they are cold.\n∀x ((Cold(x) ∧ Blue(x)) → Round(x)) ::: Cold, blue people are round.\n∀x ((Cold(x) ∧ Blue(x)) → Needs(x, bear)) ::: If someone is cold and blue then they need the bear.\n∀x (Visits(x, bear) → Needs(x, lion)) ::: If someone visits the bear then they need the lion.\n∀x (Visits(x, lion) → Likes(x, bald eagle)) ::: If someone visits the lion then they like the bald eagle.\nConclusion:\nLikes(rabbit, bald eagle) ::: The rabbit likes the bald eagle."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1278",
    "context": "Anne is big. Anne is green. Anne is nice. Anne is rough. Anne is round. Anne is white. Bob is big. Bob is round. Bob is white. Dave is rough. Dave is white. Harry is big. Harry is nice. Harry is rough. Harry is white. If Bob is big and Bob is round then Bob is cold. If Bob is big and Bob is cold then Bob is green. Green, white people are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nGreen(x) ::: x is green.\nNice(x) ::: x is nice.\nRough(x) ::: x is rough.\nRound(x) ::: x is round.\nWhite(x) ::: x is white.\nCold(x) ::: x is cold.\nPremises:\nBig(Anne) ::: Anne is big.\nGreen(Anne) ::: Anne is green.\nNice(Anne) ::: Anne is nice.\nRough(Anne) ::: Anne is rough.\nRound(Anne) ::: Anne is round.\nWhite(Anne) ::: Anne is white.\nBig(Bob) ::: Bob is big.\nRound(Bob) ::: Bob is round.\nWhite(Bob) ::: Bob is white.\nRough(Dave) ::: Dave is rough.\nWhite(Dave) ::: Dave is white.\nBig(Harry) ::: Harry is big.\nNice(Harry) ::: Harry is nice.\nRough(Harry) ::: Harry is rough.\nWhite(Harry) ::: Harry is white.\n∀x ((Big(x) ∧ Round(x)) → Cold(x)) ::: If Bob is big and Bob is round then Bob is cold.\n∀x ((Big(x) ∧ Cold(x)) → Green(x)) ::: If Bob is big and Bob is cold then Bob is green.\n∀x ((Green(x) ∧ White(x)) → Rough(x)) ::: Green, white people are rough.\nConclusion:\n¬Nice(Anne) ::: Anne is not nice."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1373",
    "context": "The dog visits the tiger. The tiger visits the dog. If something chases the tiger then it visits the dog. If the tiger sees the dog then the dog is not young. If the dog visits the tiger then the dog chases the tiger. If something chases the tiger and it visits the dog then the tiger sees the dog. If something chases the tiger and it does not visit the tiger then the tiger visits the dog. If the tiger visits the dog and the tiger does not see the dog then the dog is round. If the dog chases the tiger then the dog is not round. If something chases the tiger and it is not round then it is not kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not chase the tiger.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits(x, y) ::: x visits y.\nChases(x, y) ::: x chases y.\nSees(x, y) ::: x sees y.\nYoung(x) ::: x is young.\nRound(x) ::: x is round.\nKind(x) ::: x is kind.\nTiger(x) ::: x is a tiger.\nDog(x) ::: x is a dog.\nPremises:\nVisits(Dog, Tiger) ::: The dog visits the tiger.\nVisits(Tiger, Dog) ::: The tiger visits the dog.\n∀x ((Chases(x, Tiger)) → Visits(x, Dog)) ::: If something chases the tiger then it visits the dog.\n∀x ((Sees(Tiger, Dog)) → ¬Young(Dog)) ::: If the tiger sees the dog then the dog is not young.\n∀x ((Visits(x, Tiger)) → Chases(x, Tiger)) ::: If the dog visits the tiger then the dog chases the tiger.\n∀x ((Chases(x, Tiger) ∧ Visits(x, Dog)) → Sees(Tiger, Dog)) ::: If something chases the tiger and it visits the dog then the tiger sees the dog.\n∀x ((Chases(x, Tiger) ∧ ¬Visits(x, Tiger)) → Visits(Tiger, Dog)) ::: If something chases the tiger and it does not visit the tiger then the tiger visits the dog.\n∀x ((Visits(Tiger, Dog) ∧ ¬Sees(Tiger, Dog)) → Round(Dog)) ::: If the tiger visits the dog and the tiger does not see the dog then the dog is round.\n∀x ((Chases(x, Tiger)) → ¬Round(x)) ::: If the dog chases the tiger then the dog is not round.\n∀x ((Chases(x, Tiger) ∧ ¬Round(x)) → ¬Kind(x)) ::: If something chases the tiger and it is not round then it is not kind.\nConclusion:\n¬Chases(Tiger, Tiger) ::: The tiger does not chase the tiger."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1406",
    "context": "The cat needs the mouse. The dog visits the cat. The mouse chases the dog. The rabbit chases the cat. If something chases the dog and it needs the dog then the dog is red. If something is red and it visits the cat then it is blue. If something needs the cat and it visits the mouse then the mouse is round. If the dog visits the mouse then the mouse needs the rabbit. If something needs the mouse then the mouse needs the dog. If something chases the mouse and it needs the dog then the mouse is round. If something is cold and it chases the mouse then it needs the rabbit. If something is red and it needs the dog then the dog visits the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog visits the cat.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\nChases(x, y) ::: x chases y.\nRed(x) ::: x is red.\nBlue(x) ::: x is blue.\nRound(x) ::: x is round.\nCold(x) ::: x is cold.\n\nPremises:\nNeeds(cat, mouse) ::: The cat needs the mouse.\nVisits(dog, cat) ::: The dog visits the cat.\nChases(mouse, dog) ::: The mouse chases the dog.\nChases(rabbit, cat) ::: The rabbit chases the cat.\n∀x ((Chases(x, dog) ∧ Needs(x, dog)) → Red(dog)) ::: If something chases the dog and it needs the dog then the dog is red.\n∀x ((Red(x) ∧ Visits(x, cat)) → Blue(x)) ::: If something is red and it visits the cat then it is blue.\n∀x ((Needs(x, cat) ∧ Visits(x, mouse)) → Round(mouse)) ::: If something needs the cat and it visits the mouse then the mouse is round.\n∀x (Visits(dog, mouse) → Needs(mouse, rabbit)) ::: If the dog visits the mouse then the mouse needs the rabbit.\n∀x (Needs(x, mouse) → Needs(mouse, dog)) ::: If something needs the mouse then the mouse needs the dog.\n∀x ((Chases(x, mouse) ∧ Needs(x, dog)) → Round(mouse)) ::: If something chases the mouse and it needs the dog then the mouse is round.\n∀x ((Cold(x) ∧ Chases(x, mouse)) → Needs(mouse, rabbit)) ::: If something is cold and it chases the mouse then it needs the rabbit.\n∀x ((Red(x) ∧ Needs(x, dog)) → Visits(dog, cat)) ::: If something is red and it needs the dog then the dog visits the cat.\n\nConclusion:\nVisits(dog, cat) ::: The dog visits the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1120",
    "context": "Anne is green. Anne is quiet. Anne is young. Charlie is big. Charlie is blue. Charlie is quiet. Dave is red. Dave is young. Harry is kind. Harry is young. If someone is green then they are quiet. Big people are green. If someone is kind and young then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nQuiet(x) ::: x is quiet.\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nRed(x) ::: x is red.\nKind(x) ::: x is kind.\nPremises:\nGreen(Anne) ::: Anne is green.\nQuiet(Anne) ::: Anne is quiet.\nYoung(Anne) ::: Anne is young.\nBig(Charlie) ::: Charlie is big.\nBlue(Charlie) ::: Charlie is blue.\nQuiet(Charlie) ::: Charlie is quiet.\nRed(Dave) ::: Dave is red.\nYoung(Dave) ::: Dave is young.\nKind(Harry) ::: Harry is kind.\nYoung(Harry) ::: Harry is young.\n∀x ((Green(x) → Quiet(x))) ::: If someone is green then they are quiet.\n∀x (Big(x) → Green(x)) ::: Big people are green.\n∀x ((Kind(x) ∧ Young(x)) → Big(x)) ::: If someone is kind and young then they are big.\nConclusion:\n¬Red(Dave) ::: Dave is not red."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1247",
    "context": "The cat is not nice. The squirrel eats the cat. The squirrel sees the cat. All round people are young. If the cat is blue then the cat sees the squirrel. If someone eats the cat then the cat sees the squirrel. If someone is blue and young then they need the squirrel. If the cat sees the squirrel then the cat needs the squirrel. If someone needs the squirrel then they need the cat. If someone eats the squirrel and they are young then they see the cat. If someone eats the squirrel and the squirrel needs the cat then they are not nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not need the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice(x) ::: x is nice.\nEats(x, y) ::: x eats y.\nSees(x, y) ::: x sees y.\nRound(x) ::: x is round.\nYoung(x) ::: x is young.\nBlue(x) ::: x is blue.\nNeeds(x, y) ::: x needs y.\nPremises:\n¬Nice(cat) ::: The cat is not nice.\nEats(squirrel, cat) ::: The squirrel eats the cat.\nSees(squirrel, cat) ::: The squirrel sees the cat.\n∀x (Round(x) → Young(x)) ::: All round people are young.\n∀x (Blue(cat) → Sees(cat, squirrel)) ::: If the cat is blue then the cat sees the squirrel.\n∀x (Eats(x, cat) → Sees(cat, squirrel)) ::: If someone eats the cat then the cat sees the squirrel.\n∀x ((Blue(x) ∧ Young(x)) → Needs(x, squirrel)) ::: If someone is blue and young then they need the squirrel.\n∀x (Sees(cat, squirrel) → Needs(cat, squirrel)) ::: If the cat sees the squirrel then the cat needs the squirrel.\n∀x (Needs(x, squirrel) → Needs(x, cat)) ::: If someone needs the squirrel then they need the cat.\n∀x ((Eats(x, squirrel) ∧ Young(x)) → Sees(x, cat)) ::: If someone eats the squirrel and they are young then they see the cat.\n∀x ((Eats(x, squirrel) ∧ Needs(squirrel, cat)) → ¬Nice(x)) ::: If someone eats the squirrel and the squirrel needs the cat then they are not nice.\nConclusion:\n¬Needs(squirrel, cat) ::: The squirrel does not need the cat."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1099",
    "context": "The dog eats the lion. The dog sees the lion. The lion sees the dog. If someone sees the lion and the lion eats the dog then the lion sees the dog. If someone visits the lion then they are nice. If the dog visits the lion then the lion eats the dog. If someone eats the lion and the lion visits the dog then the dog visits the lion. If someone sees the lion then the lion visits the dog. If someone sees the dog then they eat the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion sees the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nSees(x, y) ::: x sees y.\nVisits(x, y) ::: x visits y.\nNice(x) ::: x is nice.\nPremises:\nEats(Dog, Lion) ::: The dog eats the lion.\nSees(Dog, Lion) ::: The dog sees the lion.\nSees(Lion, Dog) ::: The lion sees the dog.\n∀x ((Sees(x, Lion) ∧ Eats(Lion, Dog)) → Sees(Lion, Dog)) ::: If someone sees the lion and the lion eats the dog then the lion sees the dog.\n∀x (Visits(x, Lion) → Nice(x)) ::: If someone visits the lion then they are nice.\n∀x (Visits(Dog, Lion) → Eats(Lion, Dog)) ::: If the dog visits the lion then the lion eats the dog.\n∀x ((Eats(x, Lion) ∧ Visits(Lion, Dog)) → Visits(Dog, Lion)) ::: If someone eats the lion and the lion visits the dog then the dog visits the lion.\n∀x (Sees(x, Lion) → Visits(Lion, Dog)) ::: If someone sees the lion then the lion visits the dog.\n∀x (Sees(x, Dog) → Eats(x, Dog)) ::: If someone sees the dog then they eat the dog.\nConclusion:\nSees(Lion, Dog) ::: The lion sees the dog."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-225",
    "context": "Bob is big. Bob is quiet. Bob is rough. Bob is smart. Bob is white. Charlie is big. Charlie is blue. Charlie is nice. Charlie is quiet. Charlie is rough. Charlie is smart. Charlie is white. Dave is big. Dave is nice. Dave is rough. Erin is quiet. If something is quiet then it is smart. If something is smart then it is big. All big things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nQuiet(x) ::: x is quiet.\nRough(x) ::: x is rough.\nSmart(x) ::: x is smart.\nWhite(x) ::: x is white.\nBlue(x) ::: x is blue.\nNice(x) ::: x is nice.\nPremises:\nBig(Bob) ::: Bob is big.\nQuiet(Bob) ::: Bob is quiet.\nRough(Bob) ::: Bob is rough.\nSmart(Bob) ::: Bob is smart.\nWhite(Bob) ::: Bob is white.\nBig(Charlie) ::: Charlie is big.\nBlue(Charlie) ::: Charlie is blue.\nNice(Charlie) ::: Charlie is nice.\nQuiet(Charlie) ::: Charlie is quiet.\nRough(Charlie) ::: Charlie is rough.\nSmart(Charlie) ::: Charlie is smart.\nWhite(Charlie) ::: Charlie is white.\nBig(Dave) ::: Dave is big.\nNice(Dave) ::: Dave is nice.\nRough(Dave) ::: Dave is rough.\nQuiet(Erin) ::: Erin is quiet.\n∀x (Quiet(x) → Smart(x)) ::: If something is quiet then it is smart.\n∀x (Smart(x) → Big(x)) ::: If something is smart then it is big.\n∀x (Big(x) → Nice(x)) ::: All big things are nice.\nConclusion:\n¬Big(Dave) ::: Dave is not big."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1164",
    "context": "Bob is green. Bob is kind. Bob is quiet. Bob is white. Dave is quiet. Dave is red. Harry is furry. Harry is kind. Harry is quiet. Harry is not white. If Dave is kind then Dave is white. If something is blue then it is quiet. Red things are quiet. If something is red and kind then it is quiet. All red things are kind. If something is red then it is kind. Green things are kind. White things are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nQuiet(x) ::: x is quiet.\nWhite(x) ::: x is white.\nRed(x) ::: x is red.\nFurry(x) ::: x is furry.\nBlue(x) ::: x is blue.\nPremises:\nGreen(Bob) ::: Bob is green.\nKind(Bob) ::: Bob is kind.\nQuiet(Bob) ::: Bob is quiet.\nWhite(Bob) ::: Bob is white.\nQuiet(Dave) ::: Dave is quiet.\nRed(Dave) ::: Dave is red.\nFurry(Harry) ::: Harry is furry.\nKind(Harry) ::: Harry is kind.\nQuiet(Harry) ::: Harry is quiet.\n¬White(Harry) ::: Harry is not white.\n∀x ((Kind(x) → White(x))) ::: If Dave is kind then Dave is white.\n∀x ((Blue(x) → Quiet(x))) ::: If something is blue then it is quiet.\n∀x (Red(x) → Quiet(x)) ::: Red things are quiet.\n∀x ((Red(x) ∧ Kind(x)) → Quiet(x)) ::: If something is red and kind then it is quiet.\n∀x (Red(x) → Kind(x)) ::: All red things are kind.\n∀x (Red(x) → Kind(x)) ::: If something is red then it is kind.\n∀x (Green(x) → Kind(x)) ::: Green things are kind.\n∀x (White(x) → Blue(x)) ::: White things are blue.\nConclusion:\n¬Blue(Harry) ::: Harry is not blue."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-505",
    "context": "Erin is young. Fiona is big. Fiona is white. If someone is rough and white then they are big. Green, young people are red. Young, rough people are big. If someone is green then they are white. White, green people are big. If someone is white then they are red. Big, red people are rough. If someone is red and rough then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nWhite(x) ::: x is white.\nRough(x) ::: x is rough.\nGreen(x) ::: x is green.\nRed(x) ::: x is red.\nPremises:\nYoung(Erin) ::: Erin is young.\nBig(Fiona) ::: Fiona is big.\nWhite(Fiona) ::: Fiona is white.\n∀x ((Rough(x) ∧ White(x)) → Big(x)) ::: If someone is rough and white then they are big.\n∀x ((Green(x) ∧ Young(x)) → Red(x)) ::: Green, young people are red.\n∀x ((Young(x) ∧ Rough(x)) → Big(x)) ::: Young, rough people are big.\n∀x (Green(x) → White(x)) ::: If someone is green then they are white.\n∀x ((White(x) ∧ Green(x)) → Big(x)) ::: White, green people are big.\n∀x (White(x) → Red(x)) ::: If someone is white then they are red.\n∀x ((Big(x) ∧ Red(x)) → Rough(x)) ::: Big, red people are rough.\n∀x ((Red(x) ∧ Rough(x)) → Young(x)) ::: If someone is red and rough then they are young.\nConclusion:\nYoung(Erin) ::: Erin is young."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-187",
    "context": "The lion is cold. The lion sees the mouse. The lion visits the mouse. The mouse eats the lion. The mouse is nice. The mouse sees the lion. The mouse visits the lion. If something sees the lion and the lion sees the mouse then the lion visits the mouse. If something sees the lion then the lion eats the mouse. If the lion eats the mouse then the lion is blue. If the lion eats the mouse and the lion sees the mouse then the mouse sees the lion. If something visits the lion and it eats the mouse then it eats the lion. If something is blue and it eats the mouse then the mouse is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not visit the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nSees(x, y) ::: x sees y.\nVisits(x, y) ::: x visits y.\nEats(x, y) ::: x eats y.\nNice(x) ::: x is nice.\nBlue(x) ::: x is blue.\nPremises:\nCold(lion) ::: The lion is cold.\nSees(lion, mouse) ::: The lion sees the mouse.\nVisits(lion, mouse) ::: The lion visits the mouse.\nEats(mouse, lion) ::: The mouse eats the lion.\nNice(mouse) ::: The mouse is nice.\nSees(mouse, lion) ::: The mouse sees the lion.\nVisits(mouse, lion) ::: The mouse visits the lion.\n∀x, y ((Sees(x, lion) ∧ Sees(lion, y)) → Visits(lion, y)) ::: If something sees the lion and the lion sees the mouse then the lion visits the mouse.\n∀x (Sees(x, lion) → Eats(lion, mouse)) ::: If something sees the lion then the lion eats the mouse.\n∀x (Eats(lion, mouse) → Blue(lion)) ::: If the lion eats the mouse then the lion is blue.\n∀x, y ((Eats(lion, mouse) ∧ Sees(lion, mouse)) → Sees(mouse, lion)) ::: If the lion eats the mouse and the lion sees the mouse then the mouse sees the lion.\n∀x, y ((Visits(x, lion) ∧ Eats(x, mouse)) → Eats(x, lion)) ::: If something visits the lion and it eats the mouse then it eats the lion.\n∀x (Blue(x) ∧ Eats(x, mouse) → Blue(mouse)) ::: If something is blue and it eats the mouse then the mouse is blue.\nConclusion:\n¬Visits(mouse, lion) ::: The mouse does not visit the lion."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1124",
    "context": "The bald eagle chases the dog. The bald eagle is rough. The bald eagle needs the cow. The cow chases the bald eagle. The cow is rough. The cow sees the dog. The cow sees the mouse. The dog chases the cow. The dog is rough. The mouse chases the cow. The mouse chases the dog. The mouse is round. If someone chases the cow then they are young. If someone is rough and they do not chase the mouse then the mouse does not see the bald eagle. If someone is young and they do not chase the mouse then the mouse chases the cow. If the bald eagle needs the dog then the bald eagle sees the mouse. If someone needs the dog and they do not chase the dog then they need the mouse. If someone needs the dog and they chase the dog then the dog is round. If someone is young then they need the dog. If someone is young and they do not need the dog then they do not see the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not need the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nRough(x) ::: x is rough.\nNeeds(x, y) ::: x needs y.\nSees(x, y) ::: x sees y.\nRound(x) ::: x is round.\nYoung(x) ::: x is young.\nPremises:\nChases(BaldEagle, Dog) ::: The bald eagle chases the dog.\nRough(BaldEagle) ::: The bald eagle is rough.\nNeeds(BaldEagle, Cow) ::: The bald eagle needs the cow.\nChases(Cow, BaldEagle) ::: The cow chases the bald eagle.\nRough(Cow) ::: The cow is rough.\nSees(Cow, Dog) ::: The cow sees the dog.\nSees(Cow, Mouse) ::: The cow sees the mouse.\nChases(Dog, Cow) ::: The dog chases the cow.\nRough(Dog) ::: The dog is rough.\nChases(Mouse, Cow) ::: The mouse chases the cow.\nChases(Mouse, Dog) ::: The mouse chases the dog.\nRound(Mouse) ::: The mouse is round.\n∀x (Chases(x, Cow) → Young(x)) ::: If someone chases the cow then they are young.\n∀x ((Rough(x) ∧ ¬Chases(x, Mouse)) → ¬Sees(Mouse, BaldEagle)) ::: If someone is rough and they do not chase the mouse then the mouse does not see the bald eagle.\n∀x ((Young(x) ∧ ¬Chases(x, Mouse)) → Chases(Mouse, Cow)) ::: If someone is young and they do not chase the mouse then the mouse chases the cow.\n∀x (Needs(BaldEagle, Dog) → Sees(BaldEagle, Mouse)) ::: If the bald eagle needs the dog then the bald eagle sees the mouse.\n∀x ((Needs(x, Dog) ∧ ¬Chases(x, Dog)) → Needs(x, Mouse)) ::: If someone needs the dog and they do not chase the dog then they need the mouse.\n∀x ((Needs(x, Dog) ∧ Chases(x, Dog)) → Round(Dog)) ::: If someone needs the dog and they chase the dog then the dog is round.\n∀x (Young(x) → Needs(x, Dog)) ::: If someone is young then they need the dog.\n∀x ((Young(x) ∧ ¬Needs(x, Dog)) → ¬Sees(x, Dog)) ::: If someone is young and they do not need the dog then they do not see the dog.\nConclusion:\n¬Needs(Mouse, Mouse) ::: The mouse does not need the mouse."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1009",
    "context": "The bald eagle is blue. The bald eagle is green. The bald eagle sees the rabbit. The rabbit eats the bald eagle. The rabbit is big. The rabbit is round. The tiger is round. If something eats the tiger and the tiger eats the rabbit then the rabbit needs the tiger. If something is round then it eats the rabbit. If something needs the bald eagle and the bald eagle is blue then it needs the tiger. If something eats the bald eagle then it eats the tiger. If something sees the bald eagle then it needs the rabbit. If something needs the tiger then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle sees the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nGreen(x) ::: x is green.\nSees(x, y) ::: x sees y.\nEats(x, y) ::: x eats y.\nBig(x) ::: x is big.\nRound(x) ::: x is round.\nNeeds(x, y) ::: x needs y.\nPremises:\nBlue(bald eagle) ::: The bald eagle is blue.\nGreen(bald eagle) ::: The bald eagle is green.\nSees(bald eagle, rabbit) ::: The bald eagle sees the rabbit.\nEats(rabbit, bald eagle) ::: The rabbit eats the bald eagle.\nBig(rabbit) ::: The rabbit is big.\nRound(rabbit) ::: The rabbit is round.\nRound(tiger) ::: The tiger is round.\n∀x ((Eats(x, tiger) ∧ Eats(tiger, rabbit)) → Needs(rabbit, tiger)) ::: If something eats the tiger and the tiger eats the rabbit then the rabbit needs the tiger.\n∀x (Round(x) → Eats(x, rabbit)) ::: If something is round then it eats the rabbit.\n∀x ((Needs(x, bald eagle) ∧ Blue(bald eagle)) → Needs(x, tiger)) ::: If something needs the bald eagle and the bald eagle is blue then it needs the tiger.\n∀x (Eats(x, bald eagle) → Eats(x, tiger)) ::: If something eats the bald eagle then it eats the tiger.\n∀x (Sees(x, bald eagle) → Needs(x, rabbit)) ::: If something sees the bald eagle then it needs the rabbit.\n∀x (Needs(x, tiger) → Blue(x)) ::: If something needs the tiger then it is blue.\nConclusion:\nSees(bald eagle, rabbit) ::: The bald eagle sees the rabbit."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1264",
    "context": "The bald eagle eats the rabbit. The bald eagle eats the squirrel. The bald eagle is red. The bald eagle needs the rabbit. The bald eagle sees the rabbit. The rabbit is cold. The rabbit is kind. The rabbit needs the bald eagle. The rabbit sees the bald eagle. The rabbit sees the squirrel. The squirrel eats the bald eagle. The squirrel is cold. The squirrel is kind. The squirrel is red. The squirrel needs the bald eagle. If someone sees the rabbit then they eat the bald eagle. If someone is kind and they see the rabbit then they eat the squirrel. If someone needs the rabbit and the rabbit eats the bald eagle then the rabbit needs the squirrel. If someone needs the bald eagle and the bald eagle is kind then the bald eagle sees the squirrel. If someone eats the bald eagle then they need the bald eagle. If someone sees the rabbit and they need the bald eagle then they see the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not eat the squirrel.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nIsRed(x) ::: x is red.\nNeeds(x, y) ::: x needs y.\nSees(x, y) ::: x sees y.\nIsCold(x) ::: x is cold.\nIsKind(x) ::: x is kind.\nPremises:\nEats(bald eagle, rabbit) ::: The bald eagle eats the rabbit.\nEats(bald eagle, squirrel) ::: The bald eagle eats the squirrel.\nIsRed(bald eagle) ::: The bald eagle is red.\nNeeds(bald eagle, rabbit) ::: The bald eagle needs the rabbit.\nSees(bald eagle, rabbit) ::: The bald eagle sees the rabbit.\nIsCold(rabbit) ::: The rabbit is cold.\nIsKind(rabbit) ::: The rabbit is kind.\nNeeds(rabbit, bald eagle) ::: The rabbit needs the bald eagle.\nSees(rabbit, bald eagle) ::: The rabbit sees the bald eagle.\nSees(rabbit, squirrel) ::: The rabbit sees the squirrel.\nEats(squirrel, bald eagle) ::: The squirrel eats the bald eagle.\nIsCold(squirrel) ::: The squirrel is cold.\nIsKind(squirrel) ::: The squirrel is kind.\nIsRed(squirrel) ::: The squirrel is red.\nNeeds(squirrel, bald eagle) ::: The squirrel needs the bald eagle.\n∀x (Sees(x, rabbit) → Eats(x, bald eagle)) ::: If someone sees the rabbit then they eat the bald eagle.\n∀x ((IsKind(x) ∧ Sees(x, rabbit)) → Eats(x, squirrel)) ::: If someone is kind and they see the rabbit then they eat the squirrel.\n∀x ((Needs(x, rabbit) ∧ Eats(rabbit, bald eagle)) → Needs(x, squirrel)) ::: If someone needs the rabbit and the rabbit eats the bald eagle then the rabbit needs the squirrel.\n∀x ((Needs(x, bald eagle) ∧ IsKind(bald eagle)) → Sees(x, squirrel)) ::: If someone needs the bald eagle and the bald eagle is kind then the bald eagle sees the squirrel.\n∀x (Eats(x, bald eagle) → Needs(x, bald eagle)) ::: If someone eats the bald eagle then they need the bald eagle.\n∀x ((Sees(x, rabbit) ∧ Needs(x, bald eagle)) → Sees(x, squirrel)) ::: If someone sees the rabbit and they need the bald eagle then they see the squirrel.\nConclusion:\n¬Eats(bald eagle, squirrel) ::: The bald eagle does not eat the squirrel."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-755",
    "context": "The bald eagle sees the bear. The bear is young. The lion visits the squirrel. The squirrel is not young. If something sees the bald eagle and it visits the bald eagle then the bald eagle is young. If something sees the bear then the bear is not big. If something is big and it visits the bald eagle then the bald eagle visits the lion. If the squirrel chases the bald eagle and the squirrel does not see the bald eagle then the bald eagle visits the bear. If something sees the squirrel then the squirrel visits the bear. If something is young and not big then it sees the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not visit the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees(x, y) ::: x sees y.\nVisits(x, y) ::: x visits y.\nYoung(x) ::: x is young.\nNotYoung(x) ::: x is not young.\nBig(x) ::: x is big.\nNotBig(x) ::: x is not big.\nChases(x, y) ::: x chases y.\n\nPremises:\nSees(BaldEagle, Bear) ::: The bald eagle sees the bear.\nYoung(Bear) ::: The bear is young.\nVisits(Lion, Squirrel) ::: The lion visits the squirrel.\nNotYoung(Squirrel) ::: The squirrel is not young.\n∀x ((Sees(x, BaldEagle) ∧ Visits(x, BaldEagle)) → Young(BaldEagle)) ::: If something sees the bald eagle and it visits the bald eagle then the bald eagle is young.\n∀x (Sees(x, Bear) → NotBig(Bear)) ::: If something sees the bear then the bear is not big.\n∀x ((Big(x) ∧ Visits(x, BaldEagle)) → Visits(BaldEagle, Lion)) ::: If something is big and it visits the bald eagle then the bald eagle visits the lion.\n∀x ((Chases(x, BaldEagle) ∧ ¬Sees(x, BaldEagle)) → Visits(BaldEagle, Bear)) ::: If the squirrel chases the bald eagle and the squirrel does not see the bald eagle then the bald eagle visits the bear.\n∀x (Sees(x, Squirrel) → Visits(Squirrel, Bear)) ::: If something sees the squirrel then the squirrel visits the bear.\n∀x ((Young(x) ∧ NotBig(x)) → Sees(x, Squirrel)) ::: If something is young and not big then it sees the squirrel.\n\nConclusion:\n¬Visits(BaldEagle, Lion) ::: The bald eagle does not visit the lion."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-123",
    "context": "The bald eagle is nice. If someone is young then they are kind. Young people are kind. If the bald eagle is kind and the bald eagle is nice then the bald eagle is young. If someone is nice then they are big. Blue people are big. If someone is blue and nice then they are big. All big people are young. If the bald eagle is big and the bald eagle is kind then the bald eagle is not blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice(x) ::: x is nice.\nYoung(x) ::: x is young.\nKind(x) ::: x is kind.\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nPremises:\nNice(bald eagle) ::: The bald eagle is nice.\n∀x (Young(x) → Kind(x)) ::: If someone is young then they are kind.\n∀x (Young(x) → Kind(x)) ::: Young people are kind.\n∀x ((Nice(bald eagle) ∧ Nice(bald eagle)) → Young(bald eagle)) ::: If the bald eagle is kind and the bald eagle is nice then the bald eagle is young.\n∀x (Nice(x) → Big(x)) ::: If someone is nice then they are big.\nBig(blue people) ::: Blue people are big.\n∀x ((Blue(x) ∧ Nice(x)) → Big(x)) ::: If someone is blue and nice then they are big.\n∀x (Big(x) → Young(x)) ::: All big people are young.\n∀x ((Big(bald eagle) ∧ Kind(bald eagle)) → ¬Blue(bald eagle)) ::: If the bald eagle is big and the bald eagle is kind then the bald eagle is not blue.\nConclusion:\nNice(bald eagle) ::: The bald eagle is nice."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-748",
    "context": "Charlie is not quiet. Dave is green. Fiona is quiet. Harry is not furry. If Fiona is smart then Fiona is white. All quiet people are furry. Cold people are green. White people are green. Furry people are cold. If someone is blue and white then they are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet(x) ::: x is quiet.\nGreen(x) ::: x is green.\nSmart(x) ::: x is smart.\nWhite(x) ::: x is white.\nFurry(x) ::: x is furry.\nCold(x) ::: x is cold.\nBlue(x) ::: x is blue.\nPremises:\n¬Quiet(Charlie) ::: Charlie is not quiet.\nGreen(Dave) ::: Dave is green.\nQuiet(Fiona) ::: Fiona is quiet.\n¬Furry(Harry) ::: Harry is not furry.\n∀x ((Smart(x) → White(x))) ::: If Fiona is smart then Fiona is white.\n∀x ((Quiet(x) → Furry(x))) ::: All quiet people are furry.\n∀x ((Cold(x) → Green(x))) ::: Cold people are green.\n∀x ((White(x) → Green(x))) ::: White people are green.\n∀x ((Furry(x) → Cold(x))) ::: Furry people are cold.\n∀x ((Blue(x) ∧ White(x)) → Smart(x)) ::: If someone is blue and white then they are smart.\nConclusion:\n¬Quiet(Fiona) ::: Fiona is not quiet."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-473",
    "context": "Erin is white. Gary is furry. Harry is kind. Smart things are cold. If something is kind then it is smart. All cold things are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nWhite(x) ::: x is white.\nFurry(x) ::: x is furry.\nKind(x) ::: x is kind.\nSmart(x) ::: x is smart.\nCold(x) ::: x is cold.\nPremises:\nWhite(Erin) ::: Erin is white.\nFurry(Gary) ::: Gary is furry.\nKind(Harry) ::: Harry is kind.\n∀x (Smart(x) → Cold(x)) ::: Smart things are cold.\n∀x (Kind(x) → Smart(x)) ::: If something is kind then it is smart.\n∀x (Cold(x) → Furry(x)) ::: All cold things are furry.\nConclusion:\n¬Cold(Erin) ::: Erin is not cold."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1096",
    "context": "The bald eagle is big. The cow is big. If someone is big then they eat the bald eagle. If someone chases the bald eagle then they do not eat the bald eagle. If someone is big and they do not eat the cow then they need the bald eagle. If someone eats the cow and the cow chases the bald eagle then they do not need the cow. If someone is green then they do not chase the cow. If the bald eagle is big then the bald eagle needs the cow. If someone is kind and they eat the bald eagle then the bald eagle does not chase the cow. If someone needs the cow then the cow is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nEats(x, y) ::: x eats y.\nChases(x, y) ::: x chases y.\nNeeds(x, y) ::: x needs y.\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nPremises:\nBig(bald eagle) ::: The bald eagle is big.\nBig(cow) ::: The cow is big.\n∀x (Big(x) → Eats(x, bald eagle)) ::: If someone is big then they eat the bald eagle.\n∀x (Chases(x, bald eagle) → ¬Eats(x, bald eagle)) ::: If someone chases the bald eagle then they do not eat the bald eagle.\n∀x ((Big(x) ∧ ¬Eats(x, cow)) → Needs(x, bald eagle)) ::: If someone is big and they do not eat the cow then they need the bald eagle.\n∀x ((Eats(x, cow) ∧ Chases(cow, bald eagle)) → ¬Needs(x, cow)) ::: If someone eats the cow and the cow chases the bald eagle then they do not need the cow.\n∀x (Green(x) → ¬Chases(x, cow)) ::: If someone is green then they do not chase the cow.\n∀x (Big(bald eagle) → Needs(bald eagle, cow)) ::: If the bald eagle is big then the bald eagle needs the cow.\n∀x ((Kind(x) ∧ Eats(x, bald eagle)) → ¬Chases(bald eagle, cow)) ::: If someone is kind and they eat the bald eagle then the bald eagle does not chase the cow.\n∀x (Needs(x, cow) → Green(cow)) ::: If someone needs the cow then the cow is green.\nConclusion:\nBig(bald eagle) ::: The bald eagle is big."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-793",
    "context": "Dave is big. Dave is blue. Dave is green. Dave is kind. Dave is nice. Dave is red. Dave is young. Fiona is big. Fiona is blue. Fiona is green. Fiona is kind. Fiona is nice. Fiona is red. Fiona is young. Gary is green. Gary is kind. If someone is red and blue then they are kind. If someone is red then they are young. All red, nice people are green. Young people are kind. Kind people are red. All young, red people are blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nYoung(x) ::: x is young.\nPremises:\nBig(Dave) ::: Dave is big.\nBlue(Dave) ::: Dave is blue.\nGreen(Dave) ::: Dave is green.\nKind(Dave) ::: Dave is kind.\nNice(Dave) ::: Dave is nice.\nRed(Dave) ::: Dave is red.\nYoung(Dave) ::: Dave is young.\nBig(Fiona) ::: Fiona is big.\nBlue(Fiona) ::: Fiona is blue.\nGreen(Fiona) ::: Fiona is green.\nKind(Fiona) ::: Fiona is kind.\nNice(Fiona) ::: Fiona is nice.\nRed(Fiona) ::: Fiona is red.\nYoung(Fiona) ::: Fiona is young.\nGreen(Gary) ::: Gary is green.\nKind(Gary) ::: Gary is kind.\n∀x ((Red(x) ∧ Blue(x)) → Kind(x)) ::: If someone is red and blue then they are kind.\n∀x (Red(x) → Young(x)) ::: If someone is red then they are young.\n∀x ((Red(x) ∧ Nice(x)) → Green(x)) ::: All red, nice people are green.\n∀x (Young(x) → Kind(x)) ::: Young people are kind.\n∀x (Kind(x) → Red(x)) ::: Kind people are red.\n∀x ((Young(x) ∧ Red(x)) → Blue(x)) ::: All young, red people are blue.\nConclusion:\n¬Blue(Fiona) ::: Fiona is not blue."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1063",
    "context": "Bob is quiet. Bob is rough. Bob is white. Harry is blue. Harry is nice. Harry is quiet. Harry is white. If something is young then it is round. If something is young and quiet then it is white. Round things are nice. If Bob is round and Bob is blue then Bob is white. If something is rough then it is young. If Harry is round then Harry is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet(x) ::: x is quiet.\nRough(x) ::: x is rough.\nWhite(x) ::: x is white.\nBlue(x) ::: x is blue.\nNice(x) ::: x is nice.\nYoung(x) ::: x is young.\nRound(x) ::: x is round.\nPremises:\nQuiet(Bob) ::: Bob is quiet.\nRough(Bob) ::: Bob is rough.\nWhite(Bob) ::: Bob is white.\nBlue(Harry) ::: Harry is blue.\nNice(Harry) ::: Harry is nice.\nQuiet(Harry) ::: Harry is quiet.\nWhite(Harry) ::: Harry is white.\n∀x (Young(x) → Round(x)) ::: If something is young then it is round.\n∀x ((Young(x) ∧ Quiet(x)) → White(x)) ::: If something is young and quiet then it is white.\n∀x (Round(x) → Nice(x)) ::: Round things are nice.\n∀x ((Round(Bob) ∧ Blue(Bob)) → White(Bob)) ::: If Bob is round and Bob is blue then Bob is white.\n∀x (Rough(x) → Young(x)) ::: If something is rough then it is young.\n∀x (Round(Harry) → Nice(Harry)) ::: If Harry is round then Harry is nice.\nConclusion:\n¬Round(Harry) ::: Harry is not round."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-100",
    "context": "Bob is round. Dave is young. Erin is blue. All blue, cold things are rough. All quiet things are blue. Young, rough things are cold. All white things are quiet. If something is cold and young then it is blue. Young things are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound(x) ::: x is round.\nYoung(x) ::: x is young.\nBlue(x) ::: x is blue.\nRough(x) ::: x is rough.\nQuiet(x) ::: x is quiet.\nCold(x) ::: x is cold.\nWhite(x) ::: x is white.\nPremises:\nRound(Bob) ::: Bob is round.\nYoung(Dave) ::: Dave is young.\nBlue(Erin) ::: Erin is blue.\n∀x ((Blue(x) ∧ Cold(x)) → Rough(x)) ::: All blue, cold things are rough.\n∀x (Quiet(x) → Blue(x)) ::: All quiet things are blue.\n∀x ((Young(x) ∧ Rough(x)) → Cold(x)) ::: Young, rough things are cold.\n∀x (White(x) → Quiet(x)) ::: All white things are quiet.\n∀x ((Cold(x) ∧ Young(x)) → Blue(x)) ::: If something is cold and young then it is blue.\n∀x (Young(x) → White(x)) ::: Young things are white.\nConclusion:\nYoung(Dave) ::: Dave is young."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1529",
    "context": "The lion is not big. The lion is blue. The lion is cold. The lion is not green. The lion is rough. The lion likes the tiger. The lion needs the tiger. The lion visits the tiger. The tiger is big. The tiger is blue. The tiger is cold. The tiger is green. The tiger likes the lion. The tiger does not need the lion. The tiger visits the lion. If someone needs the tiger and the tiger needs the lion then the lion does not visit the tiger. If someone likes the lion and they visit the tiger then they need the tiger. If someone visits the lion then they visit the tiger. If someone is cold and they need the tiger then they like the tiger. If the tiger is green then the tiger likes the lion. If someone likes the lion and they do not need the tiger then the lion does not like the tiger. If the lion does not like the tiger and the lion does not need the tiger then the tiger is big. If someone is big and they do not like the lion then they are not blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not need the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nCold(x) ::: x is cold.\nGreen(x) ::: x is green.\nRough(x) ::: x is rough.\nLikes(x, y) ::: x likes y.\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\n\nPremises:\n¬Big(Lion) ::: The lion is not big.\nBlue(Lion) ::: The lion is blue.\nCold(Lion) ::: The lion is cold.\n¬Green(Lion) ::: The lion is not green.\nRough(Lion) ::: The lion is rough.\nLikes(Lion, Tiger) ::: The lion likes the tiger.\nNeeds(Lion, Tiger) ::: The lion needs the tiger.\nVisits(Lion, Tiger) ::: The lion visits the tiger.\nBig(Tiger) ::: The tiger is big.\nBlue(Tiger) ::: The tiger is blue.\nCold(Tiger) ::: The tiger is cold.\nGreen(Tiger) ::: The tiger is green.\nLikes(Tiger, Lion) ::: The tiger likes the lion.\n¬Needs(Tiger, Lion) ::: The tiger does not need the lion.\nVisits(Tiger, Lion) ::: The tiger visits the lion.\n∀x ((Needs(x, Tiger) ∧ Needs(Tiger, Lion)) → ¬Visits(x, Tiger)) ::: If someone needs the tiger and the tiger needs the lion then the lion does not visit the tiger.\n∀x ((Likes(x, Lion) ∧ Visits(x, Tiger)) → Needs(x, Tiger)) ::: If someone likes the lion and they visit the tiger then they need the tiger.\n∀x (Visits(x, Lion) → Visits(x, Tiger)) ::: If someone visits the lion then they visit the tiger.\n∀x ((Cold(x) ∧ Needs(x, Tiger)) → Likes(x, Tiger)) ::: If someone is cold and they need the tiger then they like the tiger.\n∀x (Green(Tiger) → Likes(Tiger, Lion)) ::: If the tiger is green then the tiger likes the lion.\n∀x ((Likes(x, Lion) ∧ ¬Needs(x, Tiger)) → ¬Likes(Lion, Tiger)) ::: If someone likes the lion and they do not need the tiger then the lion does not like the tiger.\n∀x ((¬Likes(Lion, Tiger) ∧ ¬Needs(Lion, Tiger)) → Big(Tiger)) ::: If the lion does not like the tiger and the lion does not need the tiger then the tiger is big.\n∀x ((Big(x) ∧ ¬Likes(x, Lion)) → ¬Blue(x)) ::: If someone is big and they do not like the lion then they are not blue.\n\nConclusion:\n¬Needs(Lion, Tiger) ::: The lion does not need the tiger."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-833",
    "context": "Bob is green. Bob is nice. Bob is not red. Dave is not red. Dave is white. Erin is big. Erin is nice. Harry is quiet. Harry is red. Harry is not white. Nice, big people are white. If Dave is big then Dave is quiet. White people are quiet. If Harry is not nice then Harry is quiet. If someone is nice and quiet then they are young. If someone is green and not white then they are not young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nWhite(x) ::: x is white.\nBig(x) ::: x is big.\nQuiet(x) ::: x is quiet.\nYoung(x) ::: x is young.\nPremises:\nGreen(Bob) ::: Bob is green.\nNice(Bob) ::: Bob is nice.\n¬Red(Bob) ::: Bob is not red.\n¬Red(Dave) ::: Dave is not red.\nWhite(Dave) ::: Dave is white.\nBig(Erin) ::: Erin is big.\nNice(Erin) ::: Erin is nice.\nQuiet(Harry) ::: Harry is quiet.\nRed(Harry) ::: Harry is red.\n¬White(Harry) ::: Harry is not white.\n∀x ((Nice(x) ∧ Big(x)) → White(x)) ::: Nice, big people are white.\n∀x ((Big(Dave)) → Quiet(Dave)) ::: If Dave is big then Dave is quiet.\n∀x (White(x) → Quiet(x)) ::: White people are quiet.\n∀x ((¬Nice(x)) → Quiet(x)) ::: If someone is not nice then they are quiet.\n∀x ((Nice(x) ∧ Quiet(x)) → Young(x)) ::: If someone is nice and quiet then they are young.\n∀x ((Green(x) ∧ ¬White(x)) → ¬Young(x)) ::: If someone is green and not white then they are not young.\nConclusion:\n¬White(Bob) ::: Bob is not white."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-125",
    "context": "The bald eagle needs the cow. The cow is round. The cow needs the bald eagle. The cow needs the mouse. The cow sees the bald eagle. The cow sees the mouse. The cow visits the mouse. The mouse is cold. The mouse sees the bald eagle. The mouse visits the bald eagle. If something visits the bald eagle then the bald eagle visits the mouse. If something sees the bald eagle and the bald eagle visits the mouse then the bald eagle visits the cow. If the cow needs the bald eagle and the bald eagle sees the cow then the bald eagle needs the mouse. If the bald eagle sees the mouse then the bald eagle is cold. If something visits the cow then the cow visits the bald eagle. If something is round and green then it sees the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle needs the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds(x, y) ::: x needs y.\nRound(x) ::: x is round.\nSees(x, y) ::: x sees y.\nVisits(x, y) ::: x visits y.\nCold(x) ::: x is cold.\nGreen(x) ::: x is green.\nPremises:\nNeeds(bald eagle, cow) ::: The bald eagle needs the cow.\nRound(cow) ::: The cow is round.\nNeeds(cow, bald eagle) ::: The cow needs the bald eagle.\nNeeds(cow, mouse) ::: The cow needs the mouse.\nSees(cow, bald eagle) ::: The cow sees the bald eagle.\nSees(cow, mouse) ::: The cow sees the mouse.\nVisits(cow, mouse) ::: The cow visits the mouse.\nCold(mouse) ::: The mouse is cold.\nSees(mouse, bald eagle) ::: The mouse sees the bald eagle.\nVisits(mouse, bald eagle) ::: The mouse visits the bald eagle.\n∀x ((Visits(x, bald eagle)) → Visits(bald eagle, x)) ::: If something visits the bald eagle then the bald eagle visits the mouse.\n∀x ((Sees(x, bald eagle) ∧ Visits(bald eagle, x)) → Visits(bald eagle, cow)) ::: If something sees the bald eagle and the bald eagle visits the mouse then the bald eagle visits the cow.\n∀x ((Needs(cow, bald eagle) ∧ Sees(bald eagle, cow)) → Needs(bald eagle, mouse)) ::: If the cow needs the bald eagle and the bald eagle sees the cow then the bald eagle needs the mouse.\n∀x (Sees(bald eagle, mouse) → Cold(bald eagle)) ::: If the bald eagle sees the mouse then the bald eagle is cold.\n∀x (Visits(x, cow) → Visits(cow, bald eagle)) ::: If something visits the cow then the cow visits the bald eagle.\n∀x ((Round(x) ∧ Green(x)) → Sees(x, cow)) ::: If something is round and green then it sees the cow.\nConclusion:\nNeeds(bald eagle, cow) ::: The bald eagle needs the cow."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-52",
    "context": "The bald eagle eats the mouse. The dog chases the bald eagle. The mouse is red. If something visits the bald eagle then it eats the dog. If something eats the mouse then the mouse chases the dog. If something chases the dog and the dog chases the bald eagle then it visits the bald eagle. If something is green and it eats the mouse then it visits the dog. If the bald eagle chases the mouse and the bald eagle is young then the mouse eats the dog. If something eats the mouse then it is nice. If something eats the dog and it chases the mouse then the dog chases the bald eagle. If something chases the dog then the dog is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle does not eat the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nChases(x, y) ::: x chases y.\nVisits(x, y) ::: x visits y.\nRed(x) ::: x is red.\nGreen(x) ::: x is green.\nYoung(x) ::: x is young.\nNice(x) ::: x is nice.\nPremises:\nEats(bald eagle, mouse) ::: The bald eagle eats the mouse.\nChases(dog, bald eagle) ::: The dog chases the bald eagle.\nRed(mouse) ::: The mouse is red.\n∀x ((Visits(x, bald eagle)) → Eats(x, dog)) ::: If something visits the bald eagle then it eats the dog.\n∀x ((Eats(x, mouse)) → Chases(mouse, dog)) ::: If something eats the mouse then the mouse chases the dog.\n∀x ((Chases(x, dog) ∧ Chases(dog, bald eagle)) → Visits(x, bald eagle)) ::: If something chases the dog and the dog chases the bald eagle then it visits the bald eagle.\n∀x ((Green(x) ∧ Eats(x, mouse)) → Visits(x, dog)) ::: If something is green and it eats the mouse then it visits the dog.\n∀x ((Chases(bald eagle, mouse) ∧ Young(bald eagle)) → Eats(mouse, dog)) ::: If the bald eagle chases the mouse and the bald eagle is young then the mouse eats the dog.\n∀x (Eats(x, mouse) → Nice(x)) ::: If something eats the mouse then it is nice.\n∀x ((Eats(x, dog) ∧ Chases(x, mouse)) → Chases(dog, bald eagle)) ::: If something eats the dog and it chases the mouse then the dog chases the bald eagle.\n∀x (Chases(x, dog) → Green(dog)) ::: If something chases the dog then the dog is green.\nConclusion:\n¬Eats(bald eagle, mouse) ::: The bald eagle does not eat the mouse."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-697",
    "context": "The bald eagle needs the dog. The dog visits the tiger. The tiger needs the dog. Round people are kind. If the bald eagle needs the dog then the bald eagle needs the tiger. If someone eats the bald eagle then the bald eagle visits the tiger. If someone visits the tiger then they eat the bald eagle. All young people are blue. If someone visits the dog and the dog does not need the bald eagle then the bald eagle needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is not kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\nKind(x) ::: x is kind.\nRound(x) ::: x is round.\nEats(x, y) ::: x eats y.\nBlue(x) ::: x is blue.\nYoung(x) ::: x is young.\nBaldEagle(x) ::: x is a bald eagle.\nDog(x) ::: x is a dog.\nTiger(x) ::: x is a tiger.\nPremises:\nNeeds(BaldEagle, Dog) ::: The bald eagle needs the dog.\nVisits(Dog, Tiger) ::: The dog visits the tiger.\nNeeds(Tiger, Dog) ::: The tiger needs the dog.\n∀x (Round(x) → Kind(x)) ::: Round people are kind.\n∀x ((Needs(BaldEagle, Dog)) → Needs(BaldEagle, Tiger)) ::: If the bald eagle needs the dog then the bald eagle needs the tiger.\n∀x ((Eats(x, BaldEagle)) → (Visits(x, Tiger))) ::: If someone eats the bald eagle then the bald eagle visits the tiger.\n∀x ((Visits(x, Tiger)) → (Eats(x, BaldEagle))) ::: If someone visits the tiger then they eat the bald eagle.\n∀x (Young(x) → Blue(x)) ::: All young people are blue.\n∀x ((Visits(x, Dog) ∧ ¬Needs(Dog, BaldEagle)) → Needs(BaldEagle, Dog)) ::: If someone visits the dog and the dog does not need the bald eagle then the bald eagle needs the dog.\nConclusion:\n¬Kind(BaldEagle) ::: The bald eagle is not kind."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1730",
    "context": "Harry is round. All big, nice things are not round. If something is round then it is nice. If something is nice and blue then it is big. If something is white then it is not rough. All nice things are white. If something is round and not big then it is not white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound(x) ::: x is round.\nBig(x) ::: x is big.\nNice(x) ::: x is nice.\nBlue(x) ::: x is blue.\nWhite(x) ::: x is white.\nRough(x) ::: x is rough.\nPremises:\nRound(Harry) ::: Harry is round.\n∀x ((Big(x) ∧ Nice(x)) → ¬Round(x)) ::: All big, nice things are not round.\n∀x (Round(x) → Nice(x)) ::: If something is round then it is nice.\n∀x ((Nice(x) ∧ Blue(x)) → Big(x)) ::: If something is nice and blue then it is big.\n∀x (White(x) → ¬Rough(x)) ::: If something is white then it is not rough.\n∀x (Nice(x) → White(x)) ::: All nice things are white.\n∀x ((Round(x) ∧ ¬Big(x)) → ¬White(x)) ::: If something is round and not big then it is not white.\nConclusion:\nRound(Harry) ::: Harry is round."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-673",
    "context": "The cow eats the squirrel. The cow eats the tiger. The cow is rough. The cow is round. The cow needs the squirrel. The squirrel eats the tiger. The squirrel is cold. The squirrel is round. The squirrel needs the cow. The tiger chases the cow. The tiger chases the squirrel. The tiger eats the cow. The tiger eats the squirrel. The tiger is cold. The tiger needs the cow. The tiger needs the squirrel. If the squirrel chases the cow and the cow eats the tiger then the squirrel is green. If something eats the cow then it needs the cow. If something needs the tiger then it eats the cow. If the cow eats the tiger and the tiger needs the squirrel then the cow needs the squirrel. If something chases the tiger and the tiger chases the squirrel then the tiger is green. If something needs the tiger then it chases the cow. If something chases the cow then the cow needs the tiger. If the tiger eats the squirrel and the tiger is green then the tiger needs the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not need the cow.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nRough(x) ::: x is rough.\nRound(x) ::: x is round.\nNeeds(x, y) ::: x needs y.\nChases(x, y) ::: x chases y.\nCold(x) ::: x is cold.\nGreen(x) ::: x is green.\nPremises:\nEats(Cow, Squirrel) ::: The cow eats the squirrel.\nEats(Cow, Tiger) ::: The cow eats the tiger.\nRough(Cow) ::: The cow is rough.\nRound(Cow) ::: The cow is round.\nNeeds(Cow, Squirrel) ::: The cow needs the squirrel.\nEats(Squirrel, Tiger) ::: The squirrel eats the tiger.\nCold(Squirrel) ::: The squirrel is cold.\nRound(Squirrel) ::: The squirrel is round.\nNeeds(Squirrel, Cow) ::: The squirrel needs the cow.\nChases(Tiger, Cow) ::: The tiger chases the cow.\nChases(Tiger, Squirrel) ::: The tiger chases the squirrel.\nEats(Tiger, Cow) ::: The tiger eats the cow.\nEats(Tiger, Squirrel) ::: The tiger eats the squirrel.\nCold(Tiger) ::: The tiger is cold.\nNeeds(Tiger, Cow) ::: The tiger needs the cow.\nNeeds(Tiger, Squirrel) ::: The tiger needs the squirrel.\n∀x ((Chases(Squirrel, Cow) ∧ Eats(Cow, Tiger)) → Green(Squirrel)) ::: If the squirrel chases the cow and the cow eats the tiger then the squirrel is green.\n∀x ((Eats(x, Cow)) → Needs(x, Cow)) ::: If something eats the cow then it needs the cow.\n∀x ((Needs(x, Tiger)) → Eats(x, Cow)) ::: If something needs the tiger then it eats the cow.\n∀x ((Eats(Cow, Tiger) ∧ Needs(Tiger, Squirrel)) → Needs(Cow, Squirrel)) ::: If the cow eats the tiger and the tiger needs the squirrel then the cow needs the squirrel.\n∀x ((Chases(x, Tiger) ∧ Chases(Tiger, Squirrel)) → Green(Tiger)) ::: If something chases the tiger and the tiger chases the squirrel then the tiger is green.\n∀x ((Needs(x, Tiger)) → Chases(x, Cow)) ::: If something needs the tiger then it chases the cow.\n∀x ((Chases(x, Cow)) → Needs(x, Tiger)) ::: If something chases the cow then the cow needs the tiger.\n∀x ((Eats(Tiger, Squirrel) ∧ Green(Tiger)) → Needs(Tiger, Squirrel)) ::: If the tiger eats the squirrel and the tiger is green then the tiger needs the squirrel.\nConclusion:\n¬Needs(Tiger, Cow) ::: The tiger does not need the cow."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1199",
    "context": "Anne is blue. Anne is kind. Dave is green. Dave is kind. Dave is rough. Fiona is rough. Harry is furry. If something is smart and kind then it is furry. All blue things are smart. If Anne is furry then Anne is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nKind(x) ::: x is kind.\nGreen(x) ::: x is green.\nRough(x) ::: x is rough.\nFurry(x) ::: x is furry.\nSmart(x) ::: x is smart.\nBig(x) ::: x is big.\nPremises:\nBlue(Anne) ::: Anne is blue.\nKind(Anne) ::: Anne is kind.\nGreen(Dave) ::: Dave is green.\nKind(Dave) ::: Dave is kind.\nRough(Dave) ::: Dave is rough.\nRough(Fiona) ::: Fiona is rough.\nFurry(Harry) ::: Harry is furry.\n∀x ((Smart(x) ∧ Kind(x)) → Furry(x)) ::: If something is smart and kind then it is furry.\n∀x (Blue(x) → Smart(x)) ::: All blue things are smart.\n∀x (Furry(Anne) → Big(Anne)) ::: If Anne is furry then Anne is big.\nConclusion:\n¬Smart(Dave) ::: Dave is not smart."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-882",
    "context": "Anne is kind. Dave is kind. Fiona is smart. Gary is furry. All smart, red things are kind. All green things are quiet. All red things are quiet. All furry things are green. Smart, furry things are green. Green, quiet things are smart. If Fiona is green and Fiona is red then Fiona is quiet. If something is red and smart then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind(x) ::: x is kind.\nSmart(x) ::: x is smart.\nFurry(x) ::: x is furry.\nRed(x) ::: x is red.\nGreen(x) ::: x is green.\nQuiet(x) ::: x is quiet.\nPremises:\nKind(Anne) ::: Anne is kind.\nKind(Dave) ::: Dave is kind.\nSmart(Fiona) ::: Fiona is smart.\nFurry(Gary) ::: Gary is furry.\n∀x ((Smart(x) ∧ Red(x)) → Kind(x)) ::: All smart, red things are kind.\n∀x (Green(x) → Quiet(x)) ::: All green things are quiet.\n∀x (Red(x) → Quiet(x)) ::: All red things are quiet.\n∀x (Furry(x) → Green(x)) ::: All furry things are green.\n∀x ((Smart(x) ∧ Furry(x)) → Green(x)) ::: Smart, furry things are green.\n∀x ((Green(x) ∧ Quiet(x)) → Smart(x)) ::: Green, quiet things are smart.\n∀x ((Green(Fiona) ∧ Red(Fiona)) → Quiet(Fiona)) ::: If Fiona is green and Fiona is red then Fiona is quiet.\n∀x ((Red(x) ∧ Smart(x)) → Furry(x)) ::: If something is red and smart then it is furry.\nConclusion:\nFurry(Gary) ::: Gary is furry."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-713",
    "context": "Bob is blue. Bob is red. Bob is white. Nice, white things are green. Red, round things are nice. Round, nice things are rough. If something is green then it is nice. All white, nice things are round. If Bob is round then Bob is red. All green, red things are round. If Bob is white then Bob is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not blue.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nRed(x) ::: x is red.\nWhite(x) ::: x is white.\nGreen(x) ::: x is green.\nNice(x) ::: x is nice.\nRound(x) ::: x is round.\nRough(x) ::: x is rough.\nPremises:\nBlue(Bob) ::: Bob is blue.\nRed(Bob) ::: Bob is red.\nWhite(Bob) ::: Bob is white.\n∀x ((Nice(x) ∧ White(x)) → Green(x)) ::: Nice, white things are green.\n∀x ((Red(x) ∧ Round(x)) → Nice(x)) ::: Red, round things are nice.\n∀x ((Round(x) ∧ Nice(x)) → Rough(x)) ::: Round, nice things are rough.\n∀x (Green(x) → Nice(x)) ::: If something is green then it is nice.\n∀x ((White(x) ∧ Nice(x)) → Round(x)) ::: All white, nice things are round.\n∀x ((Bob(x) ∧ Round(x)) → Red(x)) ::: If Bob is round then Bob is red.\n∀x ((Green(x) ∧ Red(x)) → Round(x)) ::: All green, red things are round.\n∀x ((Bob(x) ∧ White(x)) → Green(x)) ::: If Bob is white then Bob is green.\nConclusion:\n¬Blue(Bob) ::: Bob is not blue."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-331",
    "context": "The bald eagle chases the bear. The bald eagle needs the cat. The bear chases the bald eagle. The bear chases the cat. The bear chases the lion. The cat chases the bald eagle. The cat needs the lion. The lion is big. The lion is cold. The lion needs the cat. If the bear eats the cat then the bear is red. If someone is young then they need the bear. If someone chases the cat then they eat the cat. If someone is young then they need the bear. If someone eats the bald eagle then they are young. If the bear chases the bald eagle then the bear eats the lion. If someone needs the lion and they chase the cat then the cat needs the lion. If someone is red then they need the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not eat the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nNeeds(x, y) ::: x needs y.\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nRed(x) ::: x is red.\nYoung(x) ::: x is young.\nEats(x, y) ::: x eats y.\nPremises:\nChases(BaldEagle, Bear) ::: The bald eagle chases the bear.\nNeeds(BaldEagle, Cat) ::: The bald eagle needs the cat.\nChases(Bear, BaldEagle) ::: The bear chases the bald eagle.\nChases(Bear, Cat) ::: The bear chases the cat.\nChases(Bear, Lion) ::: The bear chases the lion.\nChases(Cat, BaldEagle) ::: The cat chases the bald eagle.\nNeeds(Cat, Lion) ::: The cat needs the lion.\nBig(Lion) ::: The lion is big.\nCold(Lion) ::: The lion is cold.\nNeeds(Lion, Cat) ::: The lion needs the cat.\n∀x ((Bear(x) ∧ Eats(x, Cat)) → Red(x)) ::: If the bear eats the cat then the bear is red.\n∀x (Young(x) → Needs(x, Bear)) ::: If someone is young then they need the bear.\n∀x ((Chases(x, Cat)) → Eats(x, Cat)) ::: If someone chases the cat then they eat the cat.\n∀x (Eats(BaldEagle, x) → Young(x)) ::: If someone eats the bald eagle then they are young.\n∀x ((Bear(x) ∧ Chases(x, BaldEagle)) → Eats(x, Lion)) ::: If the bear chases the bald eagle then the bear eats the lion.\n∀x ((Needs(x, Lion) ∧ Chases(x, Cat)) → Needs(Cat, Lion)) ::: If someone needs the lion and they chase the cat then the cat needs the lion.\n∀x (Red(x) → Needs(x, Lion)) ::: If someone is red then they need the lion.\nConclusion:\n¬Eats(Cat, Cat) ::: The cat does not eat the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1358",
    "context": "Anne is white. Erin is blue. Fiona is cold. All blue things are green. All big things are cold. If something is green and blue then it is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nWhite(x) ::: x is white.\nBlue(x) ::: x is blue.\nCold(x) ::: x is cold.\nGreen(x) ::: x is green.\nBig(x) ::: x is big.\nPremises:\nWhite(Anne) ::: Anne is white.\nBlue(Erin) ::: Erin is blue.\nCold(Fiona) ::: Fiona is cold.\n∀x (Blue(x) → Green(x)) ::: All blue things are green.\n∀x (Big(x) → Cold(x)) ::: All big things are cold.\n∀x ((Green(x) ∧ Blue(x)) → Big(x)) ::: If something is green and blue then it is big.\nConclusion:\nWhite(Anne) ::: Anne is white."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-886",
    "context": "The bear chases the cow. The bear is cold. The bear is round. The bear visits the cow. The bear visits the mouse. The cow chases the mouse. The cow is big. The cow likes the bear. The cow visits the bear. The mouse is big. The mouse is cold. The mouse likes the bear. The mouse likes the cow. The mouse visits the bear. The mouse visits the cow. If something visits the bear then it likes the cow. If something is round and it likes the bear then it is young. If something is young and it visits the cow then it chases the cow. If something chases the bear and the bear is round then it is round. If something is cold and round then it likes the mouse. If something is big and it visits the cow then it chases the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not like the bear.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nCold(x) ::: x is cold.\nRound(x) ::: x is round.\nVisits(x, y) ::: x visits y.\nBig(x) ::: x is big.\nLikes(x, y) ::: x likes y.\nYoung(x) ::: x is young.\nPremises:\nChases(bear, cow) ::: The bear chases the cow.\nCold(bear) ::: The bear is cold.\nRound(bear) ::: The bear is round.\nVisits(bear, cow) ::: The bear visits the cow.\nVisits(bear, mouse) ::: The bear visits the mouse.\nChases(cow, mouse) ::: The cow chases the mouse.\nBig(cow) ::: The cow is big.\nLikes(cow, bear) ::: The cow likes the bear.\nVisits(cow, bear) ::: The cow visits the bear.\nBig(mouse) ::: The mouse is big.\nCold(mouse) ::: The mouse is cold.\nLikes(mouse, bear) ::: The mouse likes the bear.\nLikes(mouse, cow) ::: The mouse likes the cow.\nVisits(mouse, bear) ::: The mouse visits the bear.\nVisits(mouse, cow) ::: The mouse visits the cow.\n∀x ((Visits(x, bear)) → Likes(x, cow)) ::: If something visits the bear then it likes the cow.\n∀x ((Round(x) ∧ Likes(x, bear)) → Young(x)) ::: If something is round and it likes the bear then it is young.\n∀x ((Young(x) ∧ Visits(x, cow)) → Chases(x, cow)) ::: If something is young and it visits the cow then it chases the cow.\n∀x ((Chases(x, bear) ∧ Round(bear)) → Round(x)) ::: If something chases the bear and the bear is round then it is round.\n∀x ((Cold(x) ∧ Round(x)) → Likes(x, mouse)) ::: If something is cold and round then it likes the mouse.\n∀x ((Big(x) ∧ Visits(x, cow)) → Chases(bear, x)) ::: If something is big and it visits the cow then it chases the bear.\nConclusion:\n¬Likes(cow, bear) ::: The cow does not like the bear."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1330",
    "context": "The bald eagle is not rough. The bald eagle visits the tiger. The bear visits the bald eagle. The lion is round. The lion likes the bear. The lion visits the bald eagle. The lion visits the tiger. The tiger chases the bear. The tiger chases the lion. The tiger is green. If something is blue then it chases the bald eagle. If something visits the bald eagle then the bald eagle is blue. If something chases the bald eagle then the bald eagle does not visit the bear. If something visits the bear then it is blue. If something is round and it visits the bear then it likes the bald eagle. If something is blue and it does not chase the lion then it chases the tiger. If something visits the tiger and it likes the bald eagle then it does not like the lion. If something is blue and it does not like the bald eagle then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not like the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough(x) ::: x is rough.\nVisits(x, y) ::: x visits y.\nLikes(x, y) ::: x likes y.\nRound(x) ::: x is round.\nChases(x, y) ::: x chases y.\nGreen(x) ::: x is green.\nBlue(x) ::: x is blue.\nYoung(x) ::: x is young.\nPremises:\n¬Rough(bald eagle) ::: The bald eagle is not rough.\nVisits(bald eagle, tiger) ::: The bald eagle visits the tiger.\nVisits(bear, bald eagle) ::: The bear visits the bald eagle.\nRound(lion) ::: The lion is round.\nLikes(lion, bear) ::: The lion likes the bear.\nVisits(lion, bald eagle) ::: The lion visits the bald eagle.\nVisits(lion, tiger) ::: The lion visits the tiger.\nChases(tiger, bear) ::: The tiger chases the bear.\nChases(tiger, lion) ::: The tiger chases the lion.\nGreen(tiger) ::: The tiger is green.\n∀x (Blue(x) → Chases(x, bald eagle)) ::: If something is blue then it chases the bald eagle.\n∀x (Visits(x, bald eagle) → Blue(bald eagle)) ::: If something visits the bald eagle then the bald eagle is blue.\n∀x (Chases(x, bald eagle) → ¬Visits(bald eagle, bear)) ::: If something chases the bald eagle then the bald eagle does not visit the bear.\n∀x (Visits(x, bear) → Blue(x)) ::: If something visits the bear then it is blue.\n∀x ((Round(x) ∧ Visits(x, bear)) → Likes(x, bald eagle)) ::: If something is round and it visits the bear then it likes the bald eagle.\n∀x ((Blue(x) ∧ ¬Chases(x, lion)) → Chases(x, tiger)) ::: If something is blue and it does not chase the lion then it chases the tiger.\n∀x ((Visits(x, tiger) ∧ Likes(x, bald eagle)) → ¬Likes(x, lion)) ::: If something visits the tiger and it likes the bald eagle then it does not like the lion.\n∀x ((Blue(x) ∧ ¬Likes(x, bald eagle)) → Young(x)) ::: If something is blue and it does not like the bald eagle then it is young.\nConclusion:\n¬Likes(lion, bald eagle) ::: The lion does not like the bald eagle."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-657",
    "context": "The dog does not see the lion. The dog does not see the tiger. The dog visits the squirrel. The lion sees the squirrel. The lion visits the tiger. The squirrel is big. The squirrel is cold. The squirrel likes the tiger. The squirrel visits the dog. The squirrel visits the lion. The tiger is cold. The tiger likes the dog. The tiger sees the dog. The tiger sees the lion. The tiger visits the squirrel. If something is nice then it does not like the dog. If something likes the tiger and it sees the dog then it is nice. If something likes the tiger and the tiger visits the squirrel then it sees the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion visits the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSee(x, y) ::: x sees y.\nVisit(x, y) ::: x visits y.\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nLike(x, y) ::: x likes y.\nNice(x) ::: x is nice.\nPremises:\n¬See(dog, lion) ::: The dog does not see the lion.\n¬See(dog, tiger) ::: The dog does not see the tiger.\nVisit(dog, squirrel) ::: The dog visits the squirrel.\nSee(lion, squirrel) ::: The lion sees the squirrel.\nVisit(lion, tiger) ::: The lion visits the tiger.\nBig(squirrel) ::: The squirrel is big.\nCold(squirrel) ::: The squirrel is cold.\nLike(squirrel, tiger) ::: The squirrel likes the tiger.\nVisit(squirrel, dog) ::: The squirrel visits the dog.\nVisit(squirrel, lion) ::: The squirrel visits the lion.\nCold(tiger) ::: The tiger is cold.\nLike(tiger, dog) ::: The tiger likes the dog.\nSee(tiger, dog) ::: The tiger sees the dog.\nSee(tiger, lion) ::: The tiger sees the lion.\nVisit(tiger, squirrel) ::: The tiger visits the squirrel.\n∀x (Nice(x) → ¬Like(x, dog)) ::: If something is nice then it does not like the dog.\n∀x ((Like(x, tiger) ∧ See(x, dog)) → Nice(x)) ::: If something likes the tiger and it sees the dog then it is nice.\n∀x ((Like(x, tiger) ∧ Visit(tiger, squirrel)) → See(x, dog)) ::: If something likes the tiger and the tiger visits the squirrel then it sees the dog.\nConclusion:\nVisit(lion, tiger) ::: The lion visits the tiger."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-499",
    "context": "The bear is kind. All kind people are rough. If the bear is young and the bear is nice then the bear is kind. All nice people are blue. Young, nice people are blue. If someone is rough then they are blue. All blue, young people are kind. If the bear is nice and the bear is kind then the bear is not blue. All rough, blue people are not nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nNice(x) ::: x is nice.\nBlue(x) ::: x is blue.\nPremises:\nKind(bear) ::: The bear is kind.\n∀x (Kind(x) → Rough(x)) ::: All kind people are rough.\n∀x ((Young(bear) ∧ Nice(bear)) → Kind(bear)) ::: If the bear is young and nice then the bear is kind.\n∀x (Nice(x) → Blue(x)) ::: All nice people are blue.\n∀x ((Young(x) ∧ Nice(x)) → Blue(x)) ::: Young, nice people are blue.\n∀x (Rough(x) → Blue(x)) ::: If someone is rough then they are blue.\n∀x ((Blue(x) ∧ Young(x)) → Kind(x)) ::: All blue, young people are kind.\n∀x ((Nice(bear) ∧ Kind(bear)) → ¬Blue(bear)) ::: If the bear is nice and kind then the bear is not blue.\n∀x ((Rough(x) ∧ Blue(x)) → ¬Nice(x)) ::: All rough, blue people are not nice.\nConclusion:\n¬Kind(bear) ::: The bear is not kind."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-76",
    "context": "Anne is rough. Bob is not green. Dave is quiet. Fiona is green. If something is smart then it is not furry. All young, blue things are not furry. All blue, smart things are not furry. If Fiona is smart and Fiona is furry then Fiona is young. If something is young then it is smart. If Anne is not green and Anne is not quiet then Anne is not furry. All furry, quiet things are not rough. If something is green then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough(x) ::: x is rough.\nGreen(x) ::: x is green.\nQuiet(x) ::: x is quiet.\nSmart(x) ::: x is smart.\nFurry(x) ::: x is furry.\nYoung(x) ::: x is young.\nBlue(x) ::: x is blue.\nPremises:\nRough(Anne) ::: Anne is rough.\n¬Green(Bob) ::: Bob is not green.\nQuiet(Dave) ::: Dave is quiet.\nGreen(Fiona) ::: Fiona is green.\n∀x (Smart(x) → ¬Furry(x)) ::: If something is smart then it is not furry.\n∀x ((Young(x) ∧ Blue(x)) → ¬Furry(x)) ::: All young, blue things are not furry.\n∀x ((Blue(x) ∧ Smart(x)) → ¬Furry(x)) ::: All blue, smart things are not furry.\n∀x ((Smart(Fiona) ∧ Furry(Fiona)) → Young(Fiona)) ::: If Fiona is smart and Fiona is furry then Fiona is young.\n∀x (Young(x) → Smart(x)) ::: If something is young then it is smart.\n∀x (¬Green(Anne) ∧ ¬Quiet(Anne) → ¬Furry(Anne)) ::: If Anne is not green and Anne is not quiet then Anne is not furry.\n∀x (Furry(x) ∧ Quiet(x) → ¬Rough(x)) ::: All furry, quiet things are not rough.\n∀x (Green(x) → Young(x)) ::: If something is green then it is young.\nConclusion:\n¬Young(Dave) ::: Dave is not young."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1067",
    "context": "Anne is green. Charlie is green. Dave is blue. Blue things are not red. If Dave is not red then Dave is green. If something is red and not blue then it is not rough. If something is white and not blue then it is rough. Furry things are not rough. If something is rough then it is not furry. Green things are white. All furry things are not white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nBlue(x) ::: x is blue.\nRed(x) ::: x is red.\nNotRed(x) ::: x is not red.\nNotBlue(x) ::: x is not blue.\nRough(x) ::: x is rough.\nWhite(x) ::: x is white.\nFurry(x) ::: x is furry.\nPremises:\nGreen(Anne) ::: Anne is green.\nGreen(Charlie) ::: Charlie is green.\nBlue(Dave) ::: Dave is blue.\n∀x (Blue(x) → ¬Red(x)) ::: Blue things are not red.\n∀x (¬Red(x) → Green(x)) ::: If Dave is not red then Dave is green.\n∀x ((Red(x) ∧ ¬Blue(x)) → ¬Rough(x)) ::: If something is red and not blue then it is not rough.\n∀x ((White(x) ∧ ¬Blue(x)) → Rough(x)) ::: If something is white and not blue then it is rough.\n∀x (Furry(x) → ¬Rough(x)) ::: Furry things are not rough.\n∀x (Rough(x) → ¬Furry(x)) ::: If something is rough then it is not furry.\n∀x (Green(x) → White(x)) ::: Green things are white.\n∀x (Furry(x) → ¬White(x)) ::: All furry things are not white.\nConclusion:\nBlue(Dave) ::: Dave is blue."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-42",
    "context": "Anne is cold. Erin is green. Fiona is blue. Gary is red. All young things are green. Blue, smart things are red. If something is kind then it is young. All kind, smart things are young. Cold things are kind. If Anne is young then Anne is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nGreen(x) ::: x is green.\nBlue(x) ::: x is blue.\nRed(x) ::: x is red.\nYoung(x) ::: x is young.\nSmart(x) ::: x is smart.\nKind(x) ::: x is kind.\nPremises:\nCold(Anne) ::: Anne is cold.\nGreen(Erin) ::: Erin is green.\nBlue(Fiona) ::: Fiona is blue.\nRed(Gary) ::: Gary is red.\n∀x (Young(x) → Green(x)) ::: All young things are green.\n∀x ((Blue(x) ∧ Smart(x)) → Red(x)) ::: Blue, smart things are red.\n∀x (Kind(x) → Young(x)) ::: If something is kind then it is young.\n∀x ((Kind(x) ∧ Smart(x)) → Young(x)) ::: All kind, smart things are young.\n∀x (Cold(x) → Kind(x)) ::: Cold things are kind.\n∀x ((Young(x) → Blue(x)) ::: If Anne is young then Anne is blue.\nConclusion:\n¬Red(Gary) ::: Gary is not red."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1489",
    "context": "Anne is cold. Anne is furry. Bob is nice. Bob is red. Bob is rough. Bob is round. Charlie is cold. Charlie is furry. Charlie is nice. Charlie is red. Charlie is round. Charlie is young. Dave is cold. Dave is furry. Dave is nice. All cold things are rough. If something is rough then it is nice. All rough, nice things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nFurry(x) ::: x is furry.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nRough(x) ::: x is rough.\nRound(x) ::: x is round.\nYoung(x) ::: x is young.\nPremises:\nCold(Anne) ::: Anne is cold.\nFurry(Anne) ::: Anne is furry.\nNice(Bob) ::: Bob is nice.\nRed(Bob) ::: Bob is red.\nRough(Bob) ::: Bob is rough.\nRound(Bob) ::: Bob is round.\nCold(Charlie) ::: Charlie is cold.\nFurry(Charlie) ::: Charlie is furry.\nNice(Charlie) ::: Charlie is nice.\nRed(Charlie) ::: Charlie is red.\nRound(Charlie) ::: Charlie is round.\nYoung(Charlie) ::: Charlie is young.\nCold(Dave) ::: Dave is cold.\nFurry(Dave) ::: Dave is furry.\nNice(Dave) ::: Dave is nice.\n∀x (Cold(x) → Rough(x)) ::: All cold things are rough.\n∀x (Rough(x) → Nice(x)) ::: If something is rough then it is nice.\n∀x ((Rough(x) ∧ Nice(x)) → Young(x)) ::: All rough, nice things are young.\nConclusion:\n¬Cold(Bob) ::: Bob is not cold."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-310",
    "context": "The cat visits the dog. The dog is nice. If the cat is kind and the cat visits the dog then the cat likes the dog. If something is kind then it visits the cat. If something likes the dog then it likes the cat. If the cat is kind then the cat visits the dog. If something is nice and red then it likes the cat. If something visits the dog then it is kind. If something likes the dog then it is red. If something likes the cat then the cat sees the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat visits the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits(x, y) ::: x visits y.\nNice(x) ::: x is nice.\nKind(x) ::: x is kind.\nLikes(x, y) ::: x likes y.\nRed(x) ::: x is red.\nSees(x, y) ::: x sees y.\nPremises:\nVisits(Cat, Dog) ::: The cat visits the dog.\nNice(Dog) ::: The dog is nice.\n∀x ((Kind(x) ∧ Visits(x, Dog)) → Likes(x, Dog)) ::: If the cat is kind and the cat visits the dog then the cat likes the dog.\n∀x (Kind(x) → Visits(x, Cat)) ::: If something is kind then it visits the cat.\n∀x (Likes(x, Dog) → Likes(x, Cat)) ::: If something likes the dog then it likes the cat.\n∀x (Kind(x) → Visits(x, Dog)) ::: If the cat is kind then the cat visits the dog.\n∀x ((Nice(x) ∧ Red(x)) → Likes(x, Cat)) ::: If something is nice and red then it likes the cat.\n∀x (Visits(x, Dog) → Kind(x)) ::: If something visits the dog then it is kind.\n∀x (Likes(x, Dog) → Red(x)) ::: If something likes the dog then it is red.\n∀x (Likes(x, Cat) → Sees(Cat, Dog)) ::: If something likes the cat then the cat sees the dog.\nConclusion:\nVisits(Cat, Dog) ::: The cat visits the dog."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1379",
    "context": "The bear eats the rabbit. The rabbit is green. If something eats the rabbit then the rabbit sees the bear. If something sees the bear then it eats the bear. If something sees the bear then the bear is blue. If something needs the bear and the bear is not young then it sees the rabbit. If something is rough then it does not eat the rabbit. If the bear needs the rabbit and the rabbit sees the bear then the bear sees the rabbit. If the bear is blue then the bear sees the rabbit. If something sees the rabbit and it does not eat the bear then it does not need the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not eat the rabbit.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nGreen(x) ::: x is green.\nSees(x, y) ::: x sees y.\nBlue(x) ::: x is blue.\nYoung(x) ::: x is young.\nRough(x) ::: x is rough.\nNeeds(x, y) ::: x needs y.\nPremises:\nEats(bear, rabbit) ::: The bear eats the rabbit.\nGreen(rabbit) ::: The rabbit is green.\n∀x (Eats(x, rabbit) → Sees(rabbit, bear)) ::: If something eats the rabbit then the rabbit sees the bear.\n∀x (Sees(x, bear) → Eats(x, bear)) ::: If something sees the bear then it eats the bear.\n∀x (Sees(x, bear) → Blue(bear)) ::: If something sees the bear then the bear is blue.\n∀x ((Needs(x, bear) ∧ ¬Young(bear)) → Sees(x, rabbit)) ::: If something needs the bear and the bear is not young then it sees the rabbit.\n∀x (Rough(x) → ¬Eats(x, rabbit)) ::: If something is rough then it does not eat the rabbit.\n∀x ((Needs(x, rabbit) ∧ Sees(rabbit, bear)) → Sees(bear, rabbit)) ::: If something needs the rabbit and the rabbit sees the bear then the bear sees the rabbit.\n∀x (Blue(bear) → Sees(bear, rabbit)) ::: If the bear is blue then the bear sees the rabbit.\n∀x ((Sees(x, rabbit) ∧ ¬Eats(x, bear)) → ¬Needs(x, rabbit)) ::: If something sees the rabbit and it does not eat the bear then it does not need the rabbit.\nConclusion:\n¬Eats(bear, rabbit) ::: The bear does not eat the rabbit."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1402",
    "context": "Charlie is nice. Charlie is rough. Charlie is round. Charlie is smart. Charlie is white. Charlie is young. Erin is kind. Erin is rough. Erin is white. Harry is not kind. Harry is nice. Harry is rough. Harry is round. Harry is not smart. Harry is white. Harry is young. White, kind people are nice. If Erin is white then Erin is smart. If Erin is white and Erin is smart then Erin is kind. If Erin is young then Erin is not round. All nice people are young. If someone is white and not nice then they are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice(x) ::: x is nice.\nRough(x) ::: x is rough.\nRound(x) ::: x is round.\nSmart(x) ::: x is smart.\nWhite(x) ::: x is white.\nYoung(x) ::: x is young.\nKind(x) ::: x is kind.\nPremises:\nNice(Charlie) ::: Charlie is nice.\nRough(Charlie) ::: Charlie is rough.\nRound(Charlie) ::: Charlie is round.\nSmart(Charlie) ::: Charlie is smart.\nWhite(Charlie) ::: Charlie is white.\nYoung(Charlie) ::: Charlie is young.\nKind(Erin) ::: Erin is kind.\nRough(Erin) ::: Erin is rough.\nWhite(Erin) ::: Erin is white.\n¬Kind(Harry) ::: Harry is not kind.\nNice(Harry) ::: Harry is nice.\nRough(Harry) ::: Harry is rough.\nRound(Harry) ::: Harry is round.\n¬Smart(Harry) ::: Harry is not smart.\nWhite(Harry) ::: Harry is white.\nYoung(Harry) ::: Harry is young.\n∀x ((White(x) ∧ Kind(x)) → Nice(x)) ::: White, kind people are nice.\n∀x (White(x) → Smart(x)) ::: If Erin is white then Erin is smart.\n∀x ((White(x) ∧ Smart(x)) → Kind(x)) ::: If Erin is white and Erin is smart then Erin is kind.\n∀x (Young(x) → ¬Round(x)) ::: If Erin is young then Erin is not round.\n∀x (Nice(x) → Young(x)) ::: All nice people are young.\n∀x ((White(x) ∧ ¬Nice(x)) → Young(x)) ::: If someone is white and not nice then they are young.\nConclusion:\n¬Round(Erin) ::: Erin is not round."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1267",
    "context": "Fiona is not big. Fiona is cold. Fiona is round. All green things are rough. White things are not cold. If Fiona is rough and Fiona is furry then Fiona is not big. If Fiona is cold and Fiona is rough then Fiona is not furry. Round things are green. If something is round and furry then it is not big. All furry things are big. If something is round and not green then it is not big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nRound(x) ::: x is round.\nGreen(x) ::: x is green.\nRough(x) ::: x is rough.\nWhite(x) ::: x is white.\nFurry(x) ::: x is furry.\nPremises:\n¬Big(Fiona) ::: Fiona is not big.\nCold(Fiona) ::: Fiona is cold.\nRound(Fiona) ::: Fiona is round.\n∀x (Green(x) → Rough(x)) ::: All green things are rough.\n∀x (White(x) → ¬Cold(x)) ::: White things are not cold.\n∀x ((Rough(x) ∧ Furry(x)) → ¬Big(x)) ::: If Fiona is rough and furry then Fiona is not big.\n∀x ((Cold(x) ∧ Rough(x)) → ¬Furry(x)) ::: If Fiona is cold and rough then Fiona is not furry.\n∀x (Round(x) → Green(x)) ::: Round things are green.\n∀x ((Round(x) ∧ Furry(x)) → ¬Big(x)) ::: If something is round and furry then it is not big.\n∀x (Furry(x) → Big(x)) ::: All furry things are big.\n∀x ((Round(x) ∧ ¬Green(x)) → ¬Big(x)) ::: If something is round and not green then it is not big.\nConclusion:\nRound(Fiona) ::: Fiona is round."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1283",
    "context": "The bald eagle is not green. The bald eagle likes the bear. The bald eagle does not see the mouse. The bear is red. The mouse is nice. The mouse is rough. The mouse likes the bald eagle. If something likes the bear then the bear eats the mouse. If something is red then it eats the bear. If the bear is red then the bear is not green. If something is big and not rough then it does not see the bald eagle. If something is green and it likes the mouse then the mouse eats the bear. If something eats the mouse and it is not green then the mouse sees the bear. If something sees the bear then it likes the bald eagle. If something sees the bear and the bear is red then the bear does not like the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle sees the mouse.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nLikes(x, y) ::: x likes y.\nSee(x, y) ::: x sees y.\nRed(x) ::: x is red.\nNice(x) ::: x is nice.\nRough(x) ::: x is rough.\nEats(x, y) ::: x eats y.\nBig(x) ::: x is big.\nBaldEagle(x) ::: x is a bald eagle.\nBear(x) ::: x is a bear.\nMouse(x) ::: x is a mouse.\nPremises:\n¬Green(BaldEagle) ::: The bald eagle is not green.\nLikes(BaldEagle, Bear) ::: The bald eagle likes the bear.\n¬See(BaldEagle, Mouse) ::: The bald eagle does not see the mouse.\nRed(Bear) ::: The bear is red.\nNice(Mouse) ::: The mouse is nice.\nRough(Mouse) ::: The mouse is rough.\nLikes(Mouse, BaldEagle) ::: The mouse likes the bald eagle.\n∀x ((Likes(x, Bear)) → Eats(x, Mouse)) ::: If something likes the bear then the bear eats the mouse.\n∀x (Red(x) → Eats(x, Bear)) ::: If something is red then it eats the bear.\n∀x ((Red(x)) → ¬Green(x)) ::: If the bear is red then the bear is not green.\n∀x ((Big(x) ∧ ¬Rough(x)) → ¬See(x, BaldEagle)) ::: If something is big and not rough then it does not see the bald eagle.\n∀x ((Green(x) ∧ Likes(x, Mouse)) → Eats(Mouse, Bear)) ::: If something is green and it likes the mouse then the mouse eats the bear.\n∀x ((Eats(x, Mouse) ∧ ¬Green(x)) → See(Mouse, Bear)) ::: If something eats the mouse and it is not green then the mouse sees the bear.\n∀x ((See(x, Bear)) → Likes(x, BaldEagle)) ::: If something sees the bear then it likes the bald eagle.\n∀x ((See(x, Bear) ∧ Red(Bear)) → ¬Likes(x, BaldEagle)) ::: If something sees the bear and the bear is red then the bear does not like the bald eagle.\nConclusion:\nSee(BaldEagle, Mouse) ::: The bald eagle sees the mouse."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1269",
    "context": "The bald eagle eats the dog. The bald eagle is big. The bald eagle is round. The dog eats the bald eagle. The dog visits the bald eagle. The rabbit eats the dog. The rabbit eats the tiger. The rabbit visits the tiger. The tiger eats the rabbit. The tiger visits the rabbit. If someone visits the rabbit then they are nice. If someone visits the rabbit and the rabbit visits the dog then the rabbit is round. If someone is red then they chase the dog. If someone eats the rabbit and they are nice then the rabbit visits the bald eagle. If someone visits the rabbit and they are round then they eat the tiger. If someone is big then they eat the rabbit. If someone is nice then they are red. If someone chases the rabbit then the rabbit visits the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not chase the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nBig(x) ::: x is big.\nRound(x) ::: x is round.\nVisits(x, y) ::: x visits y.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nChase(x, y) ::: x chases y.\n\nPremises:\nEats(bald eagle, dog) ::: The bald eagle eats the dog.\nBig(bald eagle) ::: The bald eagle is big.\nRound(bald eagle) ::: The bald eagle is round.\nEats(dog, bald eagle) ::: The dog eats the bald eagle.\nVisits(dog, bald eagle) ::: The dog visits the bald eagle.\nEats(rabbit, dog) ::: The rabbit eats the dog.\nEats(rabbit, tiger) ::: The rabbit eats the tiger.\nVisits(rabbit, tiger) ::: The rabbit visits the tiger.\nEats(tiger, rabbit) ::: The tiger eats the rabbit.\nVisits(tiger, rabbit) ::: The tiger visits the rabbit.\n∀x (Visits(x, rabbit) → Nice(x)) ::: If someone visits the rabbit then they are nice.\n∀x ((Visits(x, rabbit) ∧ Visits(rabbit, dog)) → Round(rabbit)) ::: If someone visits the rabbit and the rabbit visits the dog then the rabbit is round.\n∀x (Red(x) → Chase(x, dog)) ::: If someone is red then they chase the dog.\n∀x ((Eats(x, rabbit) ∧ Nice(x)) → Visits(rabbit, bald eagle)) ::: If someone eats the rabbit and they are nice then the rabbit visits the bald eagle.\n∀x ((Visits(x, rabbit) ∧ Round(x)) → Eats(x, tiger)) ::: If someone visits the rabbit and they are round then they eat the tiger.\n∀x (Big(x) → Eats(x, rabbit)) ::: If someone is big then they eat the rabbit.\n∀x (Nice(x) → Red(x)) ::: If someone is nice then they are red.\n∀x (Chase(x, rabbit) → Visits(rabbit, dog)) ::: If someone chases the rabbit then the rabbit visits the dog.\n\nConclusion:\n¬Chase(dog, dog) ::: The dog does not chase the dog."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1318",
    "context": "The bear eats the cow. The bear is big. The bear is green. The bear sees the cow. The cow is not big. The cow is not round. The cow visits the bear. If something is nice and not green then it sees the cow. If something visits the bear then the bear visits the cow. If something sees the bear and it visits the bear then the bear is not nice. If the cow is red then the cow eats the bear. If the bear visits the cow then the bear is not round. If something sees the cow then the cow is not round. If something sees the cow then the cow sees the bear. If something visits the bear and the bear is not round then it does not eat the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is not big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nBig(x) ::: x is big.\nGreen(x) ::: x is green.\nSees(x, y) ::: x sees y.\nRound(x) ::: x is round.\nVisits(x, y) ::: x visits y.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nPremises:\nEats(bear, cow) ::: The bear eats the cow.\nBig(bear) ::: The bear is big.\nGreen(bear) ::: The bear is green.\nSees(bear, cow) ::: The bear sees the cow.\n¬Big(cow) ::: The cow is not big.\n¬Round(cow) ::: The cow is not round.\nVisits(cow, bear) ::: The cow visits the bear.\n∀x ((Nice(x) ∧ ¬Green(x)) → Sees(x, cow)) ::: If something is nice and not green then it sees the cow.\n∀x (Visits(x, bear) → Visits(bear, cow)) ::: If something visits the bear then the bear visits the cow.\n∀x ((Sees(x, bear) ∧ Visits(x, bear)) → ¬Nice(bear)) ::: If something sees the bear and it visits the bear then the bear is not nice.\n∀x (Red(x) → Eats(x, bear)) ::: If the cow is red then the cow eats the bear.\n∀x (Visits(bear, x) → ¬Round(bear)) ::: If the bear visits the cow then the bear is not round.\n∀x (Sees(x, cow) → ¬Round(cow)) ::: If something sees the cow then the cow is not round.\n∀x (Sees(x, cow) → Sees(cow, bear)) ::: If something sees the cow then the cow sees the bear.\n∀x ((Visits(x, bear) ∧ ¬Round(bear)) → ¬Eats(x, cow)) ::: If something visits the bear and the bear is not round then it does not eat the cow.\nConclusion:\n¬Big(cow) ::: The cow is not big."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1621",
    "context": "Anne is green. Bob is green. Charlie is kind. Gary is white. All young people are white. If someone is young and white then they are cold. All kind people are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nWhite(x) ::: x is white.\nYoung(x) ::: x is young.\nCold(x) ::: x is cold.\nPremises:\nGreen(Anne) ::: Anne is green.\nGreen(Bob) ::: Bob is green.\nKind(Charlie) ::: Charlie is kind.\nWhite(Gary) ::: Gary is white.\n∀x (Young(x) → White(x)) ::: All young people are white.\n∀x ((Young(x) ∧ White(x)) → Cold(x)) ::: If someone is young and white then they are cold.\n∀x (Kind(x) → Young(x)) ::: All kind people are young.\nConclusion:\n¬Green(Anne) ::: Anne is not green."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-924",
    "context": "The cat chases the cow. The cat eats the mouse. The cat is nice. The cat does not like the cow. The cat likes the mouse. The cow likes the mouse. The mouse does not eat the cat. The mouse eats the cow. The mouse is blue. The mouse is kind. If someone chases the mouse and they eat the cat then the mouse is kind. If someone chases the mouse and they chase the cat then the cat eats the cow. If the mouse eats the cat and the cat is kind then the cat is nice. If someone likes the mouse then they do not chase the cat. If someone is blue and they do not chase the mouse then they do not eat the mouse. If someone likes the mouse and the mouse chases the cow then the cow eats the cat. If the cow does not chase the cat then the cow eats the mouse. If someone eats the mouse then they eat the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not eat the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nEats(x, y) ::: x eats y.\nNice(x) ::: x is nice.\nLikes(x, y) ::: x likes y.\nBlue(x) ::: x is blue.\nKind(x) ::: x is kind.\nPremises:\nChases(cat, cow) ::: The cat chases the cow.\nEats(cat, mouse) ::: The cat eats the mouse.\nNice(cat) ::: The cat is nice.\n¬Likes(cat, cow) ::: The cat does not like the cow.\nLikes(cat, mouse) ::: The cat likes the mouse.\nLikes(cow, mouse) ::: The cow likes the mouse.\n¬Eats(mouse, cat) ::: The mouse does not eat the cat.\nEats(mouse, cow) ::: The mouse eats the cow.\nBlue(mouse) ::: The mouse is blue.\nKind(mouse) ::: The mouse is kind.\n∀x ((Chases(x, mouse) ∧ Eats(x, cat)) → Kind(mouse)) ::: If someone chases the mouse and they eat the cat then the mouse is kind.\n∀x ((Chases(x, mouse) ∧ Chases(x, cat)) → Eats(cat, cow)) ::: If someone chases the mouse and they chase the cat then the cat eats the cow.\n∀x ((Eats(mouse, cat) ∧ Kind(cat)) → Nice(cat)) ::: If the mouse eats the cat and the cat is kind then the cat is nice.\n∀x (Likes(x, mouse) → ¬Chases(x, cat)) ::: If someone likes the mouse then they do not chase the cat.\n∀x ((Blue(x) ∧ ¬Chases(x, mouse)) → ¬Eats(x, mouse)) ::: If someone is blue and they do not chase the mouse then they do not eat the mouse.\n∀x ((Likes(x, mouse) ∧ Chases(mouse, cow)) → Eats(cow, cat)) ::: If someone likes the mouse and the mouse chases the cow then the cow eats the cat.\n∀x (¬Chases(cow, cat) → Eats(cow, mouse)) ::: If the cow does not chase the cat then the cow eats the mouse.\n∀x (Eats(x, mouse) → Eats(x, cow)) ::: If someone eats the mouse then they eat the cow.\nConclusion:\n¬Eats(cow, cat) ::: The cow does not eat the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1153",
    "context": "Bob is big. Bob is blue. Bob is furry. Bob is kind. Bob is not quiet. Charlie is big. Charlie is quiet. Charlie is red. Charlie is round. Dave is kind. Dave is round. Erin is blue. Erin is furry. Erin is kind. Erin is quiet. If Erin is kind then Erin is furry. If something is round then it is furry. Furry things are red. Round, furry things are blue. If Dave is red then Dave is big. All round things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not quiet.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nFurry(x) ::: x is furry.\nKind(x) ::: x is kind.\nQuiet(x) ::: x is quiet.\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nPremises:\nBig(Bob) ::: Bob is big.\nBlue(Bob) ::: Bob is blue.\nFurry(Bob) ::: Bob is furry.\nKind(Bob) ::: Bob is kind.\n¬Quiet(Bob) ::: Bob is not quiet.\nBig(Charlie) ::: Charlie is big.\nQuiet(Charlie) ::: Charlie is quiet.\nRed(Charlie) ::: Charlie is red.\nRound(Charlie) ::: Charlie is round.\nKind(Dave) ::: Dave is kind.\nRound(Dave) ::: Dave is round.\nBlue(Erin) ::: Erin is blue.\nFurry(Erin) ::: Erin is furry.\nKind(Erin) ::: Erin is kind.\nQuiet(Erin) ::: Erin is quiet.\n∀x ((Kind(x) → Furry(x))) ::: If Erin is kind then Erin is furry.\n∀x ((Round(x) → Furry(x))) ::: If something is round then it is furry.\n∀x (Furry(x) → Red(x)) ::: Furry things are red.\n∀x ((Round(x) ∧ Furry(x)) → Blue(x)) ::: Round, furry things are blue.\n∀x ((Dave is red) → Big(Dave)) ::: If Dave is red then Dave is big.\n∀x (Round(x) → Kind(x)) ::: All round things are kind.\nConclusion:\n¬Quiet(Bob) ::: Bob is not quiet."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1684",
    "context": "Anne is blue. Erin is not green. Harry is not young. Big, young things are blue. Green, blue things are rough. Rough, young things are nice. If something is smart and big then it is not nice. Blue things are green. If something is blue and rough then it is smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nGreen(x) ::: x is green.\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nRough(x) ::: x is rough.\nNice(x) ::: x is nice.\nSmart(x) ::: x is smart.\nPremises:\nBlue(Anne) ::: Anne is blue.\n¬Green(Erin) ::: Erin is not green.\n¬Young(Harry) ::: Harry is not young.\n∀x ((Big(x) ∧ Young(x)) → Blue(x)) ::: Big, young things are blue.\n∀x ((Green(x) ∧ Blue(x)) → Rough(x)) ::: Green, blue things are rough.\n∀x ((Rough(x) ∧ Young(x)) → Nice(x)) ::: Rough, young things are nice.\n∀x ((Smart(x) ∧ Big(x)) → ¬Nice(x)) ::: If something is smart and big then it is not nice.\n∀x (Blue(x) → Green(x)) ::: Blue things are green.\n∀x ((Blue(x) ∧ Rough(x)) → Smart(x)) ::: If something is blue and rough then it is smart.\nConclusion:\nYoung(Harry) ::: Harry is young."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-506",
    "context": "The bald eagle chases the cat. The bald eagle is not red. The bald eagle is young. The bald eagle likes the cat. The bald eagle does not like the tiger. The bald eagle sees the cat. The bald eagle sees the tiger. The cat chases the tiger. The cat is red. The tiger does not like the bald eagle. If the cat is green and the cat chases the tiger then the cat sees the bald eagle. If the bald eagle sees the tiger and the bald eagle chases the tiger then the tiger is green. If the bald eagle is big and the bald eagle sees the tiger then the tiger chases the bald eagle. If something likes the bald eagle and it does not like the tiger then the tiger likes the cat. If something is green then it does not like the cat. If something chases the cat then it chases the tiger. All big things are not young. If something chases the cat and it is not cold then it sees the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not see the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nRed(x) ::: x is red.\nYoung(x) ::: x is young.\nLikes(x, y) ::: x likes y.\nSees(x, y) ::: x sees y.\nGreen(x) ::: x is green.\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nPremises:\nChases(bald eagle, cat) ::: The bald eagle chases the cat.\n¬Red(bald eagle) ::: The bald eagle is not red.\nYoung(bald eagle) ::: The bald eagle is young.\nLikes(bald eagle, cat) ::: The bald eagle likes the cat.\n¬Likes(bald eagle, tiger) ::: The bald eagle does not like the tiger.\nSees(bald eagle, cat) ::: The bald eagle sees the cat.\nSees(bald eagle, tiger) ::: The bald eagle sees the tiger.\nChases(cat, tiger) ::: The cat chases the tiger.\nRed(cat) ::: The cat is red.\n¬Likes(tiger, bald eagle) ::: The tiger does not like the bald eagle.\n∀x ((Green(x) ∧ Chases(x, tiger)) → Sees(x, bald eagle)) ::: If the cat is green and the cat chases the tiger then the cat sees the bald eagle.\n∀x ((Sees(bald eagle, tiger) ∧ Chases(bald eagle, tiger)) → Green(tiger)) ::: If the bald eagle sees the tiger and the bald eagle chases the tiger then the tiger is green.\n∀x ((Big(x) ∧ Sees(x, tiger)) → Chases(tiger, bald eagle)) ::: If the bald eagle is big and the bald eagle sees the tiger then the tiger chases the bald eagle.\n∀x ((Likes(x, bald eagle) ∧ ¬Likes(x, tiger)) → Likes(tiger, cat)) ::: If something likes the bald eagle and it does not like the tiger then the tiger likes the cat.\n∀x (Green(x) → ¬Likes(x, cat)) ::: If something is green then it does not like the cat.\n∀x ((Chases(x, cat) ∧ ¬Cold(x)) → Sees(x, cat)) ::: If something chases the cat and it is not cold then it sees the cat.\n∀x (Big(x) → ¬Young(x)) ::: All big things are not young.\nConclusion:\n¬Sees(tiger, cat) ::: The tiger does not see the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1762",
    "context": "Anne is big. Anne is quiet. Anne is round. Charlie is big. Charlie is cold. Charlie is green. Charlie is nice. Charlie is quiet. Charlie is round. Charlie is smart. Erin is quiet. Erin is smart. All quiet, nice people are smart. Round people are green. Green people are smart. Quiet, nice people are smart. If someone is quiet and big then they are cold. Round, smart people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is smart.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nQuiet(x) ::: x is quiet.\nRound(x) ::: x is round.\nCold(x) ::: x is cold.\nGreen(x) ::: x is green.\nNice(x) ::: x is nice.\nSmart(x) ::: x is smart.\nPremises:\nBig(Anne) ::: Anne is big.\nQuiet(Anne) ::: Anne is quiet.\nRound(Anne) ::: Anne is round.\nBig(Charlie) ::: Charlie is big.\nCold(Charlie) ::: Charlie is cold.\nGreen(Charlie) ::: Charlie is green.\nNice(Charlie) ::: Charlie is nice.\nQuiet(Charlie) ::: Charlie is quiet.\nRound(Charlie) ::: Charlie is round.\nSmart(Charlie) ::: Charlie is smart.\nQuiet(Erin) ::: Erin is quiet.\nSmart(Erin) ::: Erin is smart.\n∀x ((Quiet(x) ∧ Nice(x)) → Smart(x)) ::: All quiet, nice people are smart.\n∀x (Round(x) → Green(x)) ::: Round people are green.\n∀x (Green(x) → Smart(x)) ::: Green people are smart.\n∀x ((Quiet(x) ∧ Nice(x)) → Smart(x)) ::: Quiet, nice people are smart.\n∀x ((Quiet(x) ∧ Big(x)) → Cold(x)) ::: If someone is quiet and big then they are cold.\n∀x ((Round(x) ∧ Smart(x)) → Nice(x)) ::: Round, smart people are nice.\nConclusion:\nSmart(Charlie) ::: Charlie is smart."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1036",
    "context": "Charlie is smart. Gary is furry. All smart things are furry. If Gary is smart then Gary is big. If Charlie is furry then Charlie is big. If Charlie is big and Charlie is rough then Charlie is young. Smart, young things are kind. If Charlie is furry then Charlie is young. If Charlie is kind and Charlie is furry then Charlie is smart. Rough, nice things are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart(x) ::: x is smart.\nFurry(x) ::: x is furry.\nBig(x) ::: x is big.\nYoung(x) ::: x is young.\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nNice(x) ::: x is nice.\nPremises:\nSmart(Charlie) ::: Charlie is smart.\nFurry(Gary) ::: Gary is furry.\n∀x (Smart(x) → Furry(x)) ::: All smart things are furry.\n∀x ((Smart(x) → Big(x)) ::: If someone is smart then they are big.\n∀x ((Furry(x) → Big(x)) ::: If someone is furry then they are big.\n∀x ((Big(x) ∧ Rough(x)) → Young(x)) ::: If someone is big and rough then they are young.\n∀x ((Smart(x) ∧ Young(x)) → Kind(x)) ::: Smart, young things are kind.\n∀x ((Furry(x) → Young(x)) ::: If someone is furry then they are young.\n∀x ((Kind(x) ∧ Furry(x)) → Smart(x)) ::: If someone is kind and furry then they are smart.\n∀x ((Rough(x) ∧ Nice(x)) → Big(x)) ::: Rough, nice things are big.\nConclusion:\n¬Furry(Gary) ::: Gary is not furry."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-82",
    "context": "The bald eagle needs the dog. The bald eagle needs the tiger. The bald eagle visits the squirrel. The dog is nice. The dog is rough. The dog is young. The squirrel likes the tiger. The squirrel needs the dog. The squirrel visits the bald eagle. The tiger is nice. The tiger likes the dog. The tiger likes the squirrel. If something visits the squirrel and the squirrel likes the dog then it is nice. If something visits the bald eagle then it is rough. If something needs the tiger and it visits the squirrel then it is green. If something is young and it needs the bald eagle then it likes the dog. If something needs the dog then it likes the bald eagle. If the squirrel needs the dog then the squirrel is green. If the squirrel likes the dog then the squirrel is rough. If something is rough then it likes the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not green.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\nLikes(x, y) ::: x likes y.\nNice(x) ::: x is nice.\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nGreen(x) ::: x is green.\nConclusion:\n¬Green(Tiger) ::: The tiger is not green.\nPremises:\nNeeds(BaldEagle, Dog) ::: The bald eagle needs the dog.\nNeeds(BaldEagle, Tiger) ::: The bald eagle needs the tiger.\nVisits(BaldEagle, Squirrel) ::: The bald eagle visits the squirrel.\nNice(Dog) ::: The dog is nice.\nRough(Dog) ::: The dog is rough.\nYoung(Dog) ::: The dog is young.\nLikes(Squirrel, Tiger) ::: The squirrel likes the tiger.\nNeeds(Squirrel, Dog) ::: The squirrel needs the dog.\nVisits(Squirrel, BaldEagle) ::: The squirrel visits the bald eagle.\nNice(x) ↔ ((Visits(x, Squirrel) ∧ Likes(Squirrel, Dog)) → Nice(x)) ::: If something visits the squirrel and the squirrel likes the dog then it is nice.\nRough(x) ↔ (Visits(x, BaldEagle) → Rough(x)) ::: If something visits the bald eagle then it is rough.\nGreen(x) ↔ (Needs(x, Tiger) ∧ Visits(x, Squirrel) → Green(x)) ::: If something needs the tiger and it visits the squirrel then it is green.\nLikes(Dog, x) ↔ (Young(x) ∧ Needs(x, BaldEagle) → Likes(Dog, x)) ::: If something is young and it needs the bald eagle then it likes the dog.\nLikes(x, BaldEagle) ↔ Needs(x, Dog) → Likes(x, BaldEagle) ::: If something needs the dog then it likes the bald eagle.\nGreen(Squirrel) ↔ Needs(Squirrel, Dog) ::: If the squirrel needs the dog then the squirrel is green.\nRough(Squirrel) ↔ Likes(Squirrel, Dog) ::: If the squirrel likes the dog then the squirrel is rough.\nLikes(x, Dog) ↔ Rough(x) ::: If something is rough then it likes the dog."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-36",
    "context": "The bald eagle eats the rabbit. The bear does not like the bald eagle. The dog is red. The rabbit visits the bear. If something visits the rabbit then it does not eat the rabbit. If something is big and it eats the bear then the bear is kind. If something is young and kind then it does not like the rabbit. If something is big then it does not visit the bald eagle. Young things are big. If something visits the bear and it likes the dog then the bear likes the rabbit. If something eats the rabbit then the rabbit is young. If something is nice and not kind then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle eats the rabbit.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nLikes(x, y) ::: x likes y.\nRed(x) ::: x is red.\nVisits(x, y) ::: x visits y.\nBig(x) ::: x is big.\nKind(x) ::: x is kind.\nYoung(x) ::: x is young.\nNice(x) ::: x is nice.\nPremises:\nEats(bald eagle, rabbit) ::: The bald eagle eats the rabbit.\n¬Likes(bear, bald eagle) ::: The bear does not like the bald eagle.\nRed(dog) ::: The dog is red.\nVisits(rabbit, bear) ::: The rabbit visits the bear.\n∀x ((Visits(x, rabbit)) → ¬Eats(x, rabbit)) ::: If something visits the rabbit then it does not eat the rabbit.\n∀x ((Big(x) ∧ Eats(x, bear)) → Kind(bear)) ::: If something is big and it eats the bear then the bear is kind.\n∀x ((Young(x) ∧ Kind(x)) → ¬Likes(x, rabbit)) ::: If something is young and kind then it does not like the rabbit.\n∀x (Big(x) → ¬Visits(x, bald eagle)) ::: If something is big then it does not visit the bald eagle.\n∀x (Young(x) → Big(x)) ::: Young things are big.\n∀x ((Visits(x, bear) ∧ Likes(x, dog)) → Likes(bear, rabbit)) ::: If something visits the bear and it likes the dog then the bear likes the rabbit.\n∀x (Eats(x, rabbit) → Young(rabbit)) ::: If something eats the rabbit then the rabbit is young.\n∀x ((Nice(x) ∧ ¬Kind(x)) → Red(x)) ::: If something is nice and not kind then it is red.\nConclusion:\nEats(bald eagle, rabbit) ::: The bald eagle eats the rabbit."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-148",
    "context": "Anne is cold. Anne is kind. Anne is nice. Anne is not red. Anne is white. Anne is young. Charlie is not cold. Charlie is kind. Charlie is red. Fiona is young. If something is white and not kind then it is not furry. If something is cold then it is furry. Nice, young things are cold. If something is young then it is nice. If something is nice then it is white. If Charlie is young and Charlie is not white then Charlie is not furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nKind(x) ::: x is kind.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nWhite(x) ::: x is white.\nYoung(x) ::: x is young.\nFurry(x) ::: x is furry.\nPremises:\nCold(Anne) ::: Anne is cold.\nKind(Anne) ::: Anne is kind.\nNice(Anne) ::: Anne is nice.\n¬Red(Anne) ::: Anne is not red.\nWhite(Anne) ::: Anne is white.\nYoung(Anne) ::: Anne is young.\n¬Cold(Charlie) ::: Charlie is not cold.\nKind(Charlie) ::: Charlie is kind.\nRed(Charlie) ::: Charlie is red.\nYoung(Fiona) ::: Fiona is young.\n∀x ((White(x) ∧ ¬Kind(x)) → ¬Furry(x)) ::: If something is white and not kind then it is not furry.\n∀x (Cold(x) → Furry(x)) ::: If something is cold then it is furry.\n∀x ((Nice(x) ∧ Young(x)) → Cold(x)) ::: Nice, young things are cold.\n∀x (Young(x) → Nice(x)) ::: If something is young then it is nice.\n∀x (Nice(x) → White(x)) ::: If something is nice then it is white.\n∀x ((Young(Charlie) ∧ ¬White(Charlie)) → ¬Furry(Charlie)) ::: If Charlie is young and Charlie is not white then Charlie is not furry.\nConclusion:\n¬Red(Charlie) ::: Charlie is not red."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-622",
    "context": "Bob is nice. Bob is smart. Bob is white. Charlie is green. Charlie is kind. Charlie is nice. Charlie is smart. Charlie is white. Fiona is kind. Fiona is smart. Green, white things are red. All furry things are green. If something is smart then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not red.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice(x) ::: x is nice.\nSmart(x) ::: x is smart.\nWhite(x) ::: x is white.\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nRed(x) ::: x is red.\nFurry(x) ::: x is furry.\nPremises:\nNice(Bob) ::: Bob is nice.\nSmart(Bob) ::: Bob is smart.\nWhite(Bob) ::: Bob is white.\nGreen(Charlie) ::: Charlie is green.\nKind(Charlie) ::: Charlie is kind.\nNice(Charlie) ::: Charlie is nice.\nSmart(Charlie) ::: Charlie is smart.\nWhite(Charlie) ::: Charlie is white.\nKind(Fiona) ::: Fiona is kind.\nSmart(Fiona) ::: Fiona is smart.\n∀x ((Green(x) ∧ White(x)) → Red(x)) ::: Green, white things are red.\n∀x (Furry(x) → Green(x)) ::: All furry things are green.\n∀x (Smart(x) → Furry(x)) ::: If something is smart then it is furry.\nConclusion:\n¬Red(Fiona) ::: Fiona is not red."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-681",
    "context": "Anne is smart. Anne is white. Dave is white. Smart, white things are green. If something is green and smart then it is cold. If something is red and not smart then it is cold. If something is kind then it is red. Green things are kind. If something is cold then it is kind. All rough, green things are white. If Anne is smart then Anne is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart(x) ::: x is smart.\nWhite(x) ::: x is white.\nGreen(x) ::: x is green.\nCold(x) ::: x is cold.\nRed(x) ::: x is red.\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nPremises:\nSmart(Anne) ::: Anne is smart.\nWhite(Anne) ::: Anne is white.\nWhite(Dave) ::: Dave is white.\n∀x ((Smart(x) ∧ White(x)) → Green(x)) ::: Smart, white things are green.\n∀x ((Green(x) ∧ Smart(x)) → Cold(x)) ::: If something is green and smart then it is cold.\n∀x ((Red(x) ∧ ¬Smart(x)) → Cold(x)) ::: If something is red and not smart then it is cold.\n∀x (Kind(x) → Red(x)) ::: If something is kind then it is red.\n∀x (Green(x) → Kind(x)) ::: Green things are kind.\n∀x (Cold(x) → Kind(x)) ::: If something is cold then it is kind.\n∀x ((Rough(x) ∧ Green(x)) → White(x)) ::: All rough, green things are white.\n∀x ((Smart(Anne)) → Green(Anne)) ::: If Anne is smart then Anne is green.\nConclusion:\nWhite(Anne) ::: Anne is white."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-730",
    "context": "Dave is furry. Dave is not green. Dave is kind. All cold things are kind. If Dave is furry and Dave is blue then Dave is cold. If something is furry then it is blue. If something is blue and not kind then it is young. If something is blue and not rough then it is young. If something is cold and furry then it is not young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry(x) ::: x is furry.\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nCold(x) ::: x is cold.\nBlue(x) ::: x is blue.\nYoung(x) ::: x is young.\nRough(x) ::: x is rough.\nPremises:\nFurry(Dave) ::: Dave is furry.\n¬Green(Dave) ::: Dave is not green.\nKind(Dave) ::: Dave is kind.\n∀x (Cold(x) → Kind(x)) ::: All cold things are kind.\n∀x ((Furry(x) ∧ Blue(x)) → Cold(x)) ::: If Dave is furry and Dave is blue then Dave is cold.\n∀x (Furry(x) → Blue(x)) ::: If something is furry then it is blue.\n∀x ((Blue(x) ∧ ¬Kind(x)) → Young(x)) ::: If something is blue and not kind then it is young.\n∀x ((Blue(x) ∧ ¬Rough(x)) → Young(x)) ::: If something is blue and not rough then it is young.\n∀x ((Cold(x) ∧ Furry(x)) → ¬Young(x)) ::: If something is cold and furry then it is not young.\nConclusion:\n¬Furry(Dave) ::: Dave is not furry."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-133",
    "context": "The bear visits the mouse. The mouse needs the bear. The mouse does not visit the bear. If something likes the bear then the bear needs the mouse. If something needs the mouse then it likes the mouse. If something visits the bear then it likes the mouse. If something is red then it does not like the mouse. If the mouse needs the bear then the mouse likes the bear. If something likes the mouse and the mouse is not young then the mouse needs the bear. If something likes the bear then it visits the mouse. If something likes the mouse and it is not round then it needs the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not like the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits(x, y) ::: x visits y.\nNeeds(x, y) ::: x needs y.\nLikes(x, y) ::: x likes y.\nRed(x) ::: x is red.\nYoung(x) ::: x is young.\nRound(x) ::: x is round.\nBear(x) ::: x is a bear.\nMouse(x) ::: x is a mouse.\nPremises:\nVisits(Bear, Mouse) ::: The bear visits the mouse.\nNeeds(Mouse, Bear) ::: The mouse needs the bear.\n¬Visits(Mouse, Bear) ::: The mouse does not visit the bear.\n∀x (Likes(x, Bear) → Needs(Bear, Mouse)) ::: If something likes the bear then the bear needs the mouse.\n∀x (Needs(x, Mouse) → Likes(x, Mouse)) ::: If something needs the mouse then it likes the mouse.\n∀x (Visits(x, Bear) → Likes(x, Mouse)) ::: If something visits the bear then it likes the mouse.\n∀x (Red(x) → ¬Likes(x, Mouse)) ::: If something is red then it does not like the mouse.\n∀x (Needs(Mouse, Bear) → Likes(Mouse, Bear)) ::: If the mouse needs the bear then the mouse likes the bear.\n∀x ((Likes(x, Mouse) ∧ ¬Young(Mouse)) → Needs(x, Bear)) ::: If something likes the mouse and the mouse is not young then the mouse needs the bear.\n∀x (Likes(x, Bear) → Visits(x, Mouse)) ::: If something likes the bear then it visits the mouse.\n∀x ((Likes(x, Mouse) ∧ ¬Round(x)) → Needs(x, Mouse)) ::: If something likes the mouse and it is not round then it needs the mouse.\nConclusion:\n¬Likes(Mouse, Mouse) ::: The mouse does not like the mouse."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1801",
    "context": "Anne is blue. Anne is kind. Anne is quiet. Anne is rough. Anne is round. Anne is smart. Anne is white. Erin is quiet. Erin is round. Harry is blue. Harry is kind. Harry is quiet. Harry is rough. Harry is smart. Harry is white. If something is kind then it is round. Round things are rough. Rough, quiet things are smart. Quiet, round things are rough. Smart, round things are white. Kind, white things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nKind(x) ::: x is kind.\nQuiet(x) ::: x is quiet.\nRough(x) ::: x is rough.\nRound(x) ::: x is round.\nSmart(x) ::: x is smart.\nWhite(x) ::: x is white.\nPremises:\nBlue(Anne) ::: Anne is blue.\nKind(Anne) ::: Anne is kind.\nQuiet(Anne) ::: Anne is quiet.\nRough(Anne) ::: Anne is rough.\nRound(Anne) ::: Anne is round.\nSmart(Anne) ::: Anne is smart.\nWhite(Anne) ::: Anne is white.\nQuiet(Erin) ::: Erin is quiet.\nRound(Erin) ::: Erin is round.\nBlue(Harry) ::: Harry is blue.\nKind(Harry) ::: Harry is kind.\nQuiet(Harry) ::: Harry is quiet.\nRough(Harry) ::: Harry is rough.\nSmart(Harry) ::: Harry is smart.\nWhite(Harry) ::: Harry is white.\n∀x (Kind(x) → Round(x)) ::: If something is kind then it is round.\n∀x (Round(x) → Rough(x)) ::: Round things are rough.\n∀x ((Rough(x) ∧ Quiet(x)) → Smart(x)) ::: Rough, quiet things are smart.\n∀x ((Quiet(x) ∧ Round(x)) → Rough(x)) ::: Quiet, round things are rough.\n∀x ((Smart(x) ∧ Round(x)) → White(x)) ::: Smart, round things are white.\n∀x ((Kind(x) ∧ White(x)) → Quiet(x)) ::: Kind, white things are quiet.\nConclusion:\nRough(Harry) ::: Harry is rough."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-72",
    "context": "Anne is rough. Charlie is young. Fiona is quiet. Rough, round things are smart. All young things are quiet. White, young things are round. If something is white and nice then it is young. If something is round then it is rough. All quiet, young things are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nQuiet(x) ::: x is quiet.\nSmart(x) ::: x is smart.\nRound(x) ::: x is round.\nWhite(x) ::: x is white.\nNice(x) ::: x is nice.\nPremises:\nRough(Anne) ::: Anne is rough.\nYoung(Charlie) ::: Charlie is young.\nQuiet(Fiona) ::: Fiona is quiet.\n∀x ((Rough(x) ∧ Round(x)) → Smart(x)) ::: Rough, round things are smart.\n∀x (Young(x) → Quiet(x)) ::: All young things are quiet.\n∀x ((White(x) ∧ Young(x)) → Round(x)) ::: White, young things are round.\n∀x ((White(x) ∧ Nice(x)) → Young(x)) ::: If something is white and nice then it is young.\n∀x (Round(x) → Rough(x)) ::: If something is round then it is rough.\n∀x ((Quiet(x) ∧ Young(x)) → Round(x)) ::: All quiet, young things are round.\nConclusion:\n¬Young(Charlie) ::: Charlie is not young."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-72",
    "context": "Anne is young. Bob is big. Bob is young. Dave is kind. Fiona is cold. Fiona is not red. Fiona is smart. If someone is kind then they are cold. Big people are cold. Big people are cold. If someone is cold then they are young. If Dave is not cold and Dave is not big then Dave is quiet. If someone is big and not young then they are quiet. Red people are quiet. Young people are not quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nKind(x) ::: x is kind.\nCold(x) ::: x is cold.\nRed(x) ::: x is red.\nSmart(x) ::: x is smart.\nQuiet(x) ::: x is quiet.\nPremises:\nYoung(Anne) ::: Anne is young.\nBig(Bob) ::: Bob is big.\nYoung(Bob) ::: Bob is young.\nKind(Dave) ::: Dave is kind.\nCold(Fiona) ::: Fiona is cold.\n¬Red(Fiona) ::: Fiona is not red.\nSmart(Fiona) ::: Fiona is smart.\n∀x ((Kind(x)) → Cold(x)) ::: If someone is kind then they are cold.\n∀x (Big(x) → Cold(x)) ::: Big people are cold.\n∀x (Cold(x) → Young(x)) ::: If someone is cold then they are young.\n¬Cold(Dave) ∧ ¬Big(Dave) → Quiet(Dave) ::: If Dave is not cold and Dave is not big then Dave is quiet.\n∀x ((Big(x) ∧ ¬Young(x)) → Quiet(x)) ::: If someone is big and not young then they are quiet.\n∀x (Red(x) → Quiet(x)) ::: Red people are quiet.\n∀x (Young(x) → ¬Quiet(x)) ::: Young people are not quiet.\nConclusion:\n¬Cold(Anne) ::: Anne is not cold."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1324",
    "context": "Charlie is big. Charlie is nice. Charlie is rough. Charlie is round. Dave is cold. Dave is kind. Erin is big. Erin is kind. Erin is nice. Erin is round. If something is round then it is rough. All young things are round. Kind, cold things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nNice(x) ::: x is nice.\nRough(x) ::: x is rough.\nRound(x) ::: x is round.\nCold(x) ::: x is cold.\nKind(x) ::: x is kind.\nYoung(x) ::: x is young.\nPremises:\nBig(Charlie) ::: Charlie is big.\nNice(Charlie) ::: Charlie is nice.\nRough(Charlie) ::: Charlie is rough.\nRound(Charlie) ::: Charlie is round.\nCold(Dave) ::: Dave is cold.\nKind(Dave) ::: Dave is kind.\nBig(Erin) ::: Erin is big.\nKind(Erin) ::: Erin is kind.\nNice(Erin) ::: Erin is nice.\nRound(Erin) ::: Erin is round.\n∀x ((Round(x)) → Rough(x)) ::: If something is round then it is rough.\n∀x (Young(x) → Round(x)) ::: All young things are round.\n∀x ((Kind(x) ∧ Cold(x)) → Young(x)) ::: Kind, cold things are young.\nConclusion:\nRough(Charlie) ::: Charlie is rough."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-868",
    "context": "The bald eagle does not see the dog. The cat chases the bald eagle. The cat chases the dog. The cat is big. The cat sees the bald eagle. The cat does not see the lion. The dog sees the lion. The dog visits the lion. The lion does not chase the dog. The lion is big. The lion is not red. The lion sees the dog. If the cat sees the bald eagle and the bald eagle sees the cat then the bald eagle is not big. If the bald eagle visits the dog then the bald eagle visits the lion. If something is green and it visits the bald eagle then the bald eagle does not visit the lion. If the bald eagle does not see the dog then the bald eagle visits the dog. If something is young and it chases the lion then it does not chase the bald eagle. If something visits the lion then the lion visits the cat. If the cat is kind and the cat is not big then the cat sees the lion. If something visits the lion and the lion visits the cat then it sees the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not see the bald eagle.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSee(x, y) ::: x sees y.\nChase(x, y) ::: x chases y.\nBig(x) ::: x is big.\nVisit(x, y) ::: x visits y.\nRed(x) ::: x is red.\nGreen(x) ::: x is green.\nYoung(x) ::: x is young.\nKind(x) ::: x is kind.\nBaldEagle(x) ::: x is a bald eagle.\nCat(x) ::: x is a cat.\nDog(x) ::: x is a dog.\nLion(x) ::: x is a lion.\nPremises:\n¬See(BaldEagle, Dog) ::: The bald eagle does not see the dog.\nChase(Cat, BaldEagle) ::: The cat chases the bald eagle.\nChase(Cat, Dog) ::: The cat chases the dog.\nBig(Cat) ::: The cat is big.\nSee(Cat, BaldEagle) ::: The cat sees the bald eagle.\n¬See(Cat, Lion) ::: The cat does not see the lion.\nSee(Dog, Lion) ::: The dog sees the lion.\nVisit(Dog, Lion) ::: The dog visits the lion.\n¬Chase(Lion, Dog) ::: The lion does not chase the dog.\nBig(Lion) ::: The lion is big.\n¬Red(Lion) ::: The lion is not red.\nSee(Cat, BaldEagle) ∧ See(BaldEagle, Cat) → ¬Big(BaldEagle) ::: If the cat sees the bald eagle and the bald eagle sees the cat then the bald eagle is not big.\nVisit(BaldEagle, Dog) → Visit(BaldEagle, Lion) ::: If the bald eagle visits the dog then the bald eagle visits the lion.\nGreen(x) ∧ Visit(x, BaldEagle) → ¬Visit(BaldEagle, Lion) ::: If something is green and it visits the bald eagle then the bald eagle does not visit the lion.\n¬See(BaldEagle, Dog) → Visit(BaldEagle, Dog) ::: If the bald eagle does not see the dog then the bald eagle visits the dog.\nYoung(x) ∧ Chase(x, Lion) → ¬Chase(x, BaldEagle) ::: If something is young and it chases the lion then it does not chase the bald eagle.\nVisit(x, Lion) → Visit(Lion, Cat) ::: If something visits the lion then the lion visits the cat.\nKind(Cat) ∧ ¬Big(Cat) → See(Cat, Lion) ::: If the cat is kind and the cat is not big then the cat sees the lion.\nVisit(x, Lion) ∧ Visit(Lion, Cat) → See(BaldEagle, x) ::: If something visits the lion and the lion visits the cat then it sees the bald eagle.\nConclusion:\n¬See(Cat, BaldEagle) ::: The cat does not see the bald eagle."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-86",
    "context": "Charlie is blue. Charlie is furry. Charlie is quiet. Charlie is rough. Charlie is white. Dave is furry. Erin is cold. If someone is big and furry then they are cold. All furry, cold people are quiet. Furry people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nFurry(x) ::: x is furry.\nQuiet(x) ::: x is quiet.\nRough(x) ::: x is rough.\nWhite(x) ::: x is white.\nCold(x) ::: x is cold.\nBig(x) ::: x is big.\nPremises:\nBlue(Charlie) ::: Charlie is blue.\nFurry(Charlie) ::: Charlie is furry.\nQuiet(Charlie) ::: Charlie is quiet.\nRough(Charlie) ::: Charlie is rough.\nWhite(Charlie) ::: Charlie is white.\nFurry(Dave) ::: Dave is furry.\nCold(Erin) ::: Erin is cold.\n∀x ((Big(x) ∧ Furry(x)) → Cold(x)) ::: If someone is big and furry then they are cold.\n∀x ((Furry(x) ∧ Cold(x)) → Quiet(x)) ::: All furry, cold people are quiet.\n∀x (Furry(x) → Big(x)) ::: Furry people are big.\nConclusion:\n¬Big(Erin) ::: Erin is not big."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1500",
    "context": "The cow sees the tiger. The tiger chases the cow. The tiger likes the cow. If something likes the cow then it chases the cow. If something sees the tiger then the tiger is rough. If something sees the cow and the cow is big then the cow sees the tiger. If something is rough then it sees the tiger. If something is cold and nice then it chases the cow. If something sees the tiger then it sees the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger likes the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees(x, y) ::: x sees y.\nChases(x, y) ::: x chases y.\nLikes(x, y) ::: x likes y.\nRough(x) ::: x is rough.\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nNice(x) ::: x is nice.\nPremises:\nSees(Cow, Tiger) ::: The cow sees the tiger.\nChases(Tiger, Cow) ::: The tiger chases the cow.\nLikes(Tiger, Cow) ::: The tiger likes the cow.\n∀x (Likes(x, Cow) → Chases(x, Cow)) ::: If something likes the cow then it chases the cow.\n∀x (Sees(x, Tiger) → Rough(Tiger)) ::: If something sees the tiger then the tiger is rough.\n∀x ((Sees(x, Cow) ∧ Big(Cow)) → Sees(Cow, Tiger)) ::: If something sees the cow and the cow is big then the cow sees the tiger.\n∀x (Rough(x) → Sees(x, Tiger)) ::: If something is rough then it sees the tiger.\n∀x ((Cold(x) ∧ Nice(x)) → Chases(x, Cow)) ::: If something is cold and nice then it chases the cow.\n∀x (Sees(x, Tiger) → Sees(x, Cow)) ::: If something sees the tiger then it sees the cow.\nConclusion:\nLikes(Tiger, Cow) ::: The tiger likes the cow."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1294",
    "context": "The cat chases the tiger. The cat eats the cow. The cat does not eat the tiger. The cat is not nice. The cat does not visit the cow. The cow eats the tiger. The tiger chases the cat. The tiger eats the cat. The tiger eats the cow. The tiger is not young. If someone chases the tiger then the tiger is blue. If someone eats the cow and the cow does not eat the cat then the cat is not young. If someone is blue and they do not chase the cow then the cow chases the cat. If the tiger chases the cat and the tiger visits the cat then the cat eats the tiger. If someone visits the cow and they are blue then the cow does not eat the tiger. If someone is blue then they are green. If someone is green and not blue then they visit the tiger. If someone is green and not young then they visit the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger does not chase the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nEats(x, y) ::: x eats y.\nNice(x) ::: x is nice.\nVisit(x, y) ::: x visits y.\nYoung(x) ::: x is young.\nBlue(x) ::: x is blue.\nGreen(x) ::: x is green.\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nCow(x) ::: x is a cow.\nPremises:\nChases(Cat, Tiger) ::: The cat chases the tiger.\nEats(Cat, Cow) ::: The cat eats the cow.\n¬Eats(Cat, Tiger) ::: The cat does not eat the tiger.\n¬Nice(Cat) ::: The cat is not nice.\n¬Visit(Cat, Cow) ::: The cat does not visit the cow.\nEats(Cow, Tiger) ::: The cow eats the tiger.\nChases(Tiger, Cat) ::: The tiger chases the cat.\nEats(Tiger, Cat) ::: The tiger eats the cat.\nEats(Tiger, Cow) ::: The tiger eats the cow.\n¬Young(Tiger) ::: The tiger is not young.\n∀x (Chases(x, Tiger) → Blue(Tiger)) ::: If someone chases the tiger then the tiger is blue.\n∀x ((Eats(x, Cow) ∧ ¬Eats(Cow, Cat)) → ¬Young(Cat)) ::: If someone eats the cow and the cow does not eat the cat then the cat is not young.\n∀x ((Blue(x) ∧ ¬Chases(x, Cow)) → Chases(Cow, Cat)) ::: If someone is blue and they do not chase the cow then the cow chases the cat.\n∀x ((Chases(Tiger, Cat) ∧ Visit(Tiger, Cat)) → Eats(Cat, Tiger)) ::: If the tiger chases the cat and the tiger visits the cat then the cat eats the tiger.\n∀x ((Visit(x, Cow) ∧ Blue(x)) → ¬Eats(Cow, Tiger)) ::: If someone visits the cow and they are blue then the cow does not eat the tiger.\n∀x (Blue(x) → Green(x)) ::: If someone is blue then they are green.\n∀x ((Green(x) ∧ ¬Blue(x)) → Visit(x, Tiger)) ::: If someone is green and not blue then they visit the tiger.\n∀x ((Green(x) ∧ ¬Young(x)) → Visit(x, Tiger)) ::: If someone is green and not young then they visit the tiger.\nConclusion:\n¬Chases(Tiger, Cat) ::: The tiger does not chase the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1818",
    "context": "Bob is green. Harry is cold. Harry is kind. If Harry is cold and Harry is kind then Harry is round. If someone is furry and young then they are kind. Young people are furry. Kind people are young. Young, smart people are green. If Harry is round then Harry is smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nCold(x) ::: x is cold.\nKind(x) ::: x is kind.\nRound(x) ::: x is round.\nFurry(x) ::: x is furry.\nYoung(x) ::: x is young.\nSmart(x) ::: x is smart.\nPremises:\nGreen(Bob) ::: Bob is green.\nCold(Harry) ::: Harry is cold.\nKind(Harry) ::: Harry is kind.\n∀x ((Cold(x) ∧ Kind(x)) → Round(x)) ::: If someone is cold and kind then they are round.\n∀x ((Furry(x) ∧ Young(x)) → Kind(x)) ::: If someone is furry and young then they are kind.\n∀x (Young(x) → Furry(x)) ::: Young people are furry.\n∀x (Kind(x) → Young(x)) ::: Kind people are young.\n∀x ((Young(x) ∧ Smart(x)) → Green(x)) ::: Young, smart people are green.\n∀x (Round(x) → Smart(x)) ::: If someone is round then they are smart.\nConclusion:\n¬Young(Bob) ::: Bob is not young."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-507",
    "context": "The bear is green. The bear likes the mouse. The bear sees the mouse. The bear sees the rabbit. The mouse likes the bear. The rabbit chases the bear. The rabbit is kind. The rabbit is rough. The squirrel chases the mouse. The squirrel likes the bear. If someone is rough then they like the mouse. If someone likes the squirrel then the squirrel likes the rabbit. If the squirrel sees the mouse and the mouse likes the squirrel then the mouse likes the bear. If someone chases the bear and they like the bear then they like the squirrel. If the mouse chases the squirrel and the squirrel sees the rabbit then the squirrel is young. If someone chases the mouse then they chase the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is rough.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nLikes(x, y) ::: x likes y.\nSees(x, y) ::: x sees y.\nChases(x, y) ::: x chases y.\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nPremises:\nGreen(bear) ::: The bear is green.\nLikes(bear, mouse) ::: The bear likes the mouse.\nSees(bear, mouse) ::: The bear sees the mouse.\nSees(bear, rabbit) ::: The bear sees the rabbit.\nLikes(mouse, bear) ::: The mouse likes the bear.\nChases(rabbit, bear) ::: The rabbit chases the bear.\nKind(rabbit) ::: The rabbit is kind.\nRough(rabbit) ::: The rabbit is rough.\nChases(squirrel, mouse) ::: The squirrel chases the mouse.\nLikes(squirrel, bear) ::: The squirrel likes the bear.\n∀x (Rough(x) → Likes(x, mouse)) ::: If someone is rough then they like the mouse.\n∀x (Likes(x, squirrel) → Likes(squirrel, rabbit)) ::: If someone likes the squirrel then the squirrel likes the rabbit.\n∀x ((Sees(squirrel, mouse) ∧ Likes(mouse, squirrel)) → Likes(mouse, bear)) ::: If the squirrel sees the mouse and the mouse likes the squirrel then the mouse likes the bear.\n∀x ((Chases(x, bear) ∧ Likes(x, bear)) → Likes(x, squirrel)) ::: If someone chases the bear and they like the bear then they like the squirrel.\n∀x ((Chases(mouse, squirrel) ∧ Sees(squirrel, rabbit)) → Young(squirrel)) ::: If the mouse chases the squirrel and the squirrel sees the rabbit then the squirrel is young.\n∀x (Chases(x, mouse) → Chases(x, bear)) ::: If someone chases the mouse then they chase the bear.\nConclusion:\nRough(rabbit) ::: The rabbit is rough."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-479",
    "context": "Anne is rough. Erin is blue. Harry is cold. If something is quiet and big then it is cold. Smart things are quiet. If something is big then it is smart. Blue things are rough. If Harry is cold then Harry is big. All blue things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough(x) ::: x is rough.\nBlue(x) ::: x is blue.\nCold(x) ::: x is cold.\nQuiet(x) ::: x is quiet.\nBig(x) ::: x is big.\nSmart(x) ::: x is smart.\nPremises:\nRough(Anne) ::: Anne is rough.\nBlue(Erin) ::: Erin is blue.\nCold(Harry) ::: Harry is cold.\n∀x ((Quiet(x) ∧ Big(x)) → Cold(x)) ::: If something is quiet and big then it is cold.\n∀x (Smart(x) → Quiet(x)) ::: Smart things are quiet.\n∀x (Big(x) → Smart(x)) ::: If something is big then it is smart.\n∀x (Blue(x) → Rough(x)) ::: Blue things are rough.\n∀x (Cold(Harry) → Big(Harry)) ::: If Harry is cold then Harry is big.\n∀x (Blue(x) → Smart(x)) ::: All blue things are smart.\nConclusion:\n¬Rough(Anne) ::: Anne is not rough."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1591",
    "context": "The bald eagle chases the dog. The bald eagle chases the rabbit. The bald eagle eats the dog. The bald eagle is kind. The dog chases the bald eagle. The dog is kind. The dog likes the bald eagle. The dog likes the rabbit. The dog likes the tiger. The rabbit chases the bald eagle. The rabbit chases the tiger. The rabbit is green. The rabbit likes the bald eagle. The tiger chases the bald eagle. The tiger chases the rabbit. The tiger is round. If something eats the bald eagle then the bald eagle chases the rabbit. All blue things are green. If the tiger eats the dog then the dog eats the rabbit. If something is green then it eats the bald eagle. If something chases the dog and it likes the rabbit then the rabbit is kind. If something chases the bald eagle and it is kind then it chases the dog. If something likes the dog then it is nice. All green, round things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is not nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nEats(x, y) ::: x eats y.\nKind(x) ::: x is kind.\nLikes(x, y) ::: x likes y.\nGreen(x) ::: x is green.\nRound(x) ::: x is round.\nBlue(x) ::: x is blue.\nNice(x) ::: x is nice.\nPremises:\nChases(BaldEagle, Dog) ::: The bald eagle chases the dog.\nChases(BaldEagle, Rabbit) ::: The bald eagle chases the rabbit.\nEats(BaldEagle, Dog) ::: The bald eagle eats the dog.\nKind(BaldEagle) ::: The bald eagle is kind.\nChases(Dog, BaldEagle) ::: The dog chases the bald eagle.\nKind(Dog) ::: The dog is kind.\nLikes(Dog, BaldEagle) ::: The dog likes the bald eagle.\nLikes(Dog, Rabbit) ::: The dog likes the rabbit.\nLikes(Dog, Tiger) ::: The dog likes the tiger.\nChases(Rabbit, BaldEagle) ::: The rabbit chases the bald eagle.\nChases(Rabbit, Tiger) ::: The rabbit chases the tiger.\nGreen(Rabbit) ::: The rabbit is green.\nLikes(Rabbit, BaldEagle) ::: The rabbit likes the bald eagle.\nChases(Tiger, BaldEagle) ::: The tiger chases the bald eagle.\nChases(Tiger, Rabbit) ::: The tiger chases the rabbit.\nRound(Tiger) ::: The tiger is round.\n∀x (Eats(x, BaldEagle) → Chases(BaldEagle, Rabbit)) ::: If something eats the bald eagle then the bald eagle chases the rabbit.\n∀x (Blue(x) → Green(x)) ::: All blue things are green.\n∀x ((Tiger(x) ∧ Eats(x, Dog)) → Eats(Dog, Rabbit)) ::: If the tiger eats the dog then the dog eats the rabbit.\n∀x (Green(x) → Eats(x, BaldEagle)) ::: If something is green then it eats the bald eagle.\n∀x ((Chases(x, Dog) ∧ Likes(x, Rabbit)) → Kind(Rabbit)) ::: If something chases the dog and it likes the rabbit then the rabbit is kind.\n∀x ((Chases(x, BaldEagle) ∧ Kind(x)) → Chases(x, Dog)) ::: If something chases the bald eagle and it is kind then it chases the dog.\n∀x (Likes(x, Dog) → Nice(x)) ::: If something likes the dog then it is nice.\n∀x ((Green(x) ∧ Round(x)) → Nice(x)) ::: All green, round things are nice.\nConclusion:\n¬Kind(BaldEagle) ::: The bald eagle is not nice."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1516",
    "context": "Charlie is cold. Charlie is green. Charlie is smart. Dave is cold. Dave is green. Dave is white. Erin is kind. Rough people are smart. If someone is green and white then they are rough. Smart, white people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nGreen(x) ::: x is green.\nSmart(x) ::: x is smart.\nWhite(x) ::: x is white.\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nFurry(x) ::: x is furry.\nPremises:\nCold(Charlie) ::: Charlie is cold.\nGreen(Charlie) ::: Charlie is green.\nSmart(Charlie) ::: Charlie is smart.\nCold(Dave) ::: Dave is cold.\nGreen(Dave) ::: Dave is green.\nWhite(Dave) ::: Dave is white.\nKind(Erin) ::: Erin is kind.\n∀x ((Green(x) ∧ White(x)) → Rough(x)) ::: If someone is green and white then they are rough.\n∀x ((Smart(x) ∧ White(x)) → Furry(x)) ::: Smart, white people are furry.\nConclusion:\nCold(Charlie) ::: Charlie is cold."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1171",
    "context": "Erin is blue. Erin is cold. Gary is big. If something is red and not cold then it is big. Big things are nice. Smart things are red. All cold things are not smart. Nice things are smart. If something is cold and not smart then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nCold(x) ::: x is cold.\nBig(x) ::: x is big.\nRed(x) ::: x is red.\nNice(x) ::: x is nice.\nSmart(x) ::: x is smart.\nPremises:\nBlue(Erin) ::: Erin is blue.\nCold(Erin) ::: Erin is cold.\nBig(Gary) ::: Gary is big.\n∀x ((Red(x) ∧ ¬Cold(x)) → Big(x)) ::: If something is red and not cold then it is big.\n∀x (Big(x) → Nice(x)) ::: Big things are nice.\n∀x (Smart(x) → Red(x)) ::: Smart things are red.\n∀x (Cold(x) → ¬Smart(x)) ::: All cold things are not smart.\n∀x (Nice(x) → Smart(x)) ::: Nice things are smart.\n∀x ((Cold(x) ∧ ¬Smart(x)) → Blue(x)) ::: If something is cold and not smart then it is blue.\nConclusion:\n¬Cold(Erin) ::: Erin is not cold."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-209",
    "context": "Dave is blue. Dave is nice. Dave is red. Dave is smart. Dave is young. Erin is blue. Gary is red. Harry is blue. Harry is furry. Harry is nice. Harry is rough. Harry is smart. All blue people are rough. Rough, nice people are red. All red people are blue. If someone is blue and smart then they are nice. All furry, blue people are smart. If someone is blue and red then they are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nFurry(x) ::: x is furry.\nRough(x) ::: x is rough.\nPremises:\nBlue(Dave) ::: Dave is blue.\nNice(Dave) ::: Dave is nice.\nRed(Dave) ::: Dave is red.\nSmart(Dave) ::: Dave is smart.\nYoung(Dave) ::: Dave is young.\nBlue(Erin) ::: Erin is blue.\nRed(Gary) ::: Gary is red.\nBlue(Harry) ::: Harry is blue.\nFurry(Harry) ::: Harry is furry.\nNice(Harry) ::: Harry is nice.\nRough(Harry) ::: Harry is rough.\nSmart(Harry) ::: Harry is smart.\n∀x (Blue(x) → Rough(x)) ::: All blue people are rough.\n∀x ((Rough(x) ∧ Nice(x)) → Red(x)) ::: Rough, nice people are red.\n∀x (Red(x) → Blue(x)) ::: All red people are blue.\n∀x ((Blue(x) ∧ Smart(x)) → Nice(x)) ::: If someone is blue and smart then they are nice.\n∀x ((Furry(x) ∧ Blue(x)) → Smart(x)) ::: All furry, blue people are smart.\n∀x ((Blue(x) ∧ Red(x)) → Furry(x)) ::: If someone is blue and red then they are furry.\nConclusion:\n¬Nice(Erin) ::: Erin is not nice."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-490",
    "context": "Anne is green. Dave is white. Harry is young. If Anne is green then Anne is kind. If Harry is kind and Harry is young then Harry is green. If someone is kind then they are young. Young people are rough. If Dave is round then Dave is white. If Dave is rough and Dave is nice then Dave is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nWhite(x) ::: x is white.\nYoung(x) ::: x is young.\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nRound(x) ::: x is round.\nNice(x) ::: x is nice.\nPremises:\nGreen(Anne) ::: Anne is green.\nWhite(Dave) ::: Dave is white.\nYoung(Harry) ::: Harry is young.\n∀x ((Green(x) → Kind(x)) ::: If Anne is green then Anne is kind.\n∀x ((Kind(x) → Young(x)) ::: If someone is kind then they are young.\n∀x (Young(x) → Rough(x)) ::: Young people are rough.\n∀x ((Round(x) → White(x)) ::: If Dave is round then Dave is white.\n∀x ((Rough(x) ∧ Nice(x)) → Kind(x)) ::: If Dave is rough and Dave is nice then Dave is kind.\n∀x ((Kind(x) ∧ Young(x)) → Green(x)) ::: If Harry is kind and Harry is young then Harry is green.\nConclusion:\nGreen(Anne) ::: Anne is green."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-846",
    "context": "The bear is green. The cat sees the dog. The dog is kind. If something is green then it needs the dog. If something needs the bear and the bear is rough then it likes the cat. If the bear needs the dog then the dog is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nSee(x, y) ::: x sees y.\nKind(x) ::: x is kind.\nNeeds(x, y) ::: x needs y.\nRough(x) ::: x is rough.\nLikes(x, y) ::: x likes y.\nPremises:\nGreen(bear) ::: The bear is green.\nSee(cat, dog) ::: The cat sees the dog.\nKind(dog) ::: The dog is kind.\n∀x (Green(x) → Needs(x, dog)) ::: If something is green then it needs the dog.\n∀x ((Needs(x, bear) ∧ Rough(bear)) → Likes(x, cat)) ::: If something needs the bear and the bear is rough then it likes the cat.\n∀x (Needs(bear, dog) → Green(dog)) ::: If the bear needs the dog then the dog is green.\nConclusion:\n¬Green(bear) ::: The bear is not green."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1118",
    "context": "Anne is red. Anne is smart. Charlie is kind. Charlie is red. Charlie is rough. Charlie is smart. Charlie is young. Erin is big. Erin is red. Erin is rough. Erin is young. Harry is red. Harry is rough. Harry is round. Harry is smart. Harry is young. If someone is young then they are round. If someone is red then they are big. All rough, red people are young. Big people are rough. If Charlie is red and Charlie is not young then Charlie is kind. If Charlie is not round and Charlie is not young then Charlie is not smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is red.\nSmart(x) ::: x is smart.\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nRound(x) ::: x is round.\nPremises:\nRed(Anne) ::: Anne is red.\nSmart(Anne) ::: Anne is smart.\nKind(Charlie) ::: Charlie is kind.\nRed(Charlie) ::: Charlie is red.\nRough(Charlie) ::: Charlie is rough.\nSmart(Charlie) ::: Charlie is smart.\nYoung(Charlie) ::: Charlie is young.\nBig(Erin) ::: Erin is big.\nRed(Erin) ::: Erin is red.\nRough(Erin) ::: Erin is rough.\nYoung(Erin) ::: Erin is young.\nRed(Harry) ::: Harry is red.\nRough(Harry) ::: Harry is rough.\nRound(Harry) ::: Harry is round.\nSmart(Harry) ::: Harry is smart.\n∀x (Young(x) → Round(x)) ::: If someone is young then they are round.\n∀x (Red(x) → Big(x)) ::: If someone is red then they are big.\n∀x ((Rough(x) ∧ Red(x)) → Young(x)) ::: All rough, red people are young.\n∀x (Big(x) → Rough(x)) ::: Big people are rough.\n∀x ((Red(Charlie) ∧ ¬Young(Charlie)) → Kind(Charlie)) ::: If Charlie is red and Charlie is not young then Charlie is kind.\n∀x ((¬Round(Charlie) ∧ ¬Young(Charlie)) → ¬Smart(Charlie)) ::: If Charlie is not round and Charlie is not young then Charlie is not smart.\nConclusion:\n¬Kind(Anne) ::: Anne is not kind."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-936",
    "context": "Charlie is green. Charlie is white. Charlie is young. Fiona is kind. Fiona is red. Fiona is not rough. Fiona is not young. If someone is quiet then they are not rough. All young people are white. If someone is white then they are quiet. If Fiona is young then Fiona is kind. If Fiona is white and Fiona is not green then Fiona is rough. All rough, quiet people are young. If someone is quiet and not rough then they are red. If someone is quiet and not rough then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nWhite(x) ::: x is white.\nYoung(x) ::: x is young.\nKind(x) ::: x is kind.\nRed(x) ::: x is red.\nRough(x) ::: x is rough.\nQuiet(x) ::: x is quiet.\nPremises:\nGreen(Charlie) ::: Charlie is green.\nWhite(Charlie) ::: Charlie is white.\nYoung(Charlie) ::: Charlie is young.\nKind(Fiona) ::: Fiona is kind.\nRed(Fiona) ::: Fiona is red.\n¬Rough(Fiona) ::: Fiona is not rough.\n¬Young(Fiona) ::: Fiona is not young.\n∀x (Quiet(x) → ¬Rough(x)) ::: If someone is quiet then they are not rough.\n∀x (Young(x) → White(x)) ::: All young people are white.\n∀x (White(x) → Quiet(x)) ::: If someone is white then they are quiet.\n∀x ((Fiona = x) → (Young(x) → Kind(x))) ::: If Fiona is young then Fiona is kind.\n∀x ((Fiona = x) → (White(x) ∧ ¬Green(x) → Rough(x))) ::: If Fiona is white and not green then Fiona is rough.\n∀x ((Quiet(x) ∧ ¬Rough(x)) → Red(x)) ::: If someone is quiet and not rough then they are red.\nConclusion:\nKind(Fiona) ::: Fiona is kind."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1533",
    "context": "Bob is big. Bob is rough. Bob is not smart. Bob is young. Dave is rough. Dave is young. Erin is furry. If Dave is young and Dave is big then Dave is smart. If Bob is rough and Bob is furry then Bob is nice. If someone is furry and big then they are rough. If someone is furry then they are nice. If Dave is furry and Dave is not young then Dave is not nice. All nice people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nRough(x) ::: x is rough.\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nFurry(x) ::: x is furry.\nNice(x) ::: x is nice.\nPremises:\nBig(Bob) ::: Bob is big.\nRough(Bob) ::: Bob is rough.\n¬Smart(Bob) ::: Bob is not smart.\nYoung(Bob) ::: Bob is young.\nRough(Dave) ::: Dave is rough.\nYoung(Dave) ::: Dave is young.\nFurry(Erin) ::: Erin is furry.\n∀x ((Young(x) ∧ Big(x)) → Smart(x)) ::: If Dave is young and Dave is big then Dave is smart.\n∀x ((Rough(x) ∧ Furry(x)) → Nice(x)) ::: If Bob is rough and Bob is furry then Bob is nice.\n∀x ((Furry(x) ∧ Big(x)) → Rough(x)) ::: If someone is furry and big then they are rough.\n∀x (Furry(x) → Nice(x)) ::: If someone is furry then they are nice.\n∀x ((Furry(x) ∧ ¬Young(x)) → ¬Nice(x)) ::: If Dave is furry and Dave is not young then Dave is not nice.\n∀x (Nice(x) → Big(x)) ::: All nice people are big.\nConclusion:\n¬Rough(Dave) ::: Dave is not rough."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-302",
    "context": "Anne is young. Charlie is young. Gary is red. If something is blue then it is green. All green things are blue. If something is blue then it is rough. All rough, young things are furry. All red things are blue. Green things are young. If Charlie is nice and Charlie is red then Charlie is furry. If something is red and rough then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not furry.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is young.\nRed(x) ::: x is red.\nBlue(x) ::: x is blue.\nGreen(x) ::: x is green.\nRough(x) ::: x is rough.\nFurry(x) ::: x is furry.\nNice(x) ::: x is nice.\nPremises:\nYoung(Anne) ::: Anne is young.\nYoung(Charlie) ::: Charlie is young.\nRed(Gary) ::: Gary is red.\n∀x (Blue(x) → Green(x)) ::: If something is blue then it is green.\n∀x (Green(x) → Blue(x)) ::: All green things are blue.\n∀x (Blue(x) → Rough(x)) ::: If something is blue then it is rough.\n∀x ((Rough(x) ∧ Young(x)) → Furry(x)) ::: All rough, young things are furry.\n∀x (Red(x) → Blue(x)) ::: All red things are blue.\n∀x (Green(x) → Young(x)) ::: Green things are young.\n∀x ((Nice(Charlie) ∧ Red(Charlie)) → Furry(Charlie)) ::: If Charlie is nice and Charlie is red then Charlie is furry.\n∀x ((Red(x) ∧ Rough(x)) → Blue(x)) ::: If something is red and rough then it is blue.\nConclusion:\n¬Furry(Charlie) ::: Charlie is not furry."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-983",
    "context": "The bear eats the lion. The bear eats the rabbit. The bear is cold. The bear is rough. The bear needs the rabbit. The lion chases the bear. The lion chases the rabbit. The lion eats the bear. The rabbit chases the lion. The rabbit is cold. The rabbit is nice. The rabbit is red. If the bear chases the rabbit then the bear chases the lion. If the bear chases the rabbit then the rabbit eats the bear. If something needs the rabbit then the rabbit is kind. If something is nice and rough then it does not chase the bear. If something is kind then it is rough. If something is rough and it does not eat the lion then it does not need the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nCold(x) ::: x is cold.\nRough(x) ::: x is rough.\nNeeds(x, y) ::: x needs y.\nChases(x, y) ::: x chases y.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nKind(x) ::: x is kind.\nPremises:\nEats(bear, lion) ::: The bear eats the lion.\nEats(bear, rabbit) ::: The bear eats the rabbit.\nCold(bear) ::: The bear is cold.\nRough(bear) ::: The bear is rough.\nNeeds(bear, rabbit) ::: The bear needs the rabbit.\nChases(lion, bear) ::: The lion chases the bear.\nChases(lion, rabbit) ::: The lion chases the rabbit.\nEats(lion, bear) ::: The lion eats the bear.\nChases(rabbit, lion) ::: The rabbit chases the lion.\nCold(rabbit) ::: The rabbit is cold.\nNice(rabbit) ::: The rabbit is nice.\nRed(rabbit) ::: The rabbit is red.\n∀x ((Chases(bear, rabbit)) → (Chases(bear, lion))) ::: If the bear chases the rabbit then the bear chases the lion.\n∀x ((Chases(bear, rabbit)) → (Eats(rabbit, bear))) ::: If the bear chases the rabbit then the rabbit eats the bear.\n∀x ((Needs(x, rabbit)) → (Kind(rabbit))) ::: If something needs the rabbit then the rabbit is kind.\n∀x ((Nice(x) ∧ Rough(x)) → ¬(Chases(x, bear))) ::: If something is nice and rough then it does not chase the bear.\n∀x ((Kind(x)) → (Rough(x))) ::: If something is kind then it is rough.\n∀x ((Rough(x) ∧ ¬(Eats(x, lion))) → ¬(Needs(x, bear))) ::: If something is rough and it does not eat the lion then it does not need the bear.\nConclusion:\nNice(rabbit) ::: The rabbit is nice."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-355",
    "context": "Charlie is nice. Dave is big. Dave is smart. Red things are cold. All cold, red things are nice. If something is nice then it is smart. All big, furry things are nice. All furry things are green. If Charlie is smart then Charlie is big. Furry, nice things are green. If something is smart and big then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice(x) ::: x is nice.\nBig(x) ::: x is big.\nSmart(x) ::: x is smart.\nCold(x) ::: x is cold.\nRed(x) ::: x is red.\nGreen(x) ::: x is green.\nFurry(x) ::: x is furry.\nPremises:\nNice(Charlie) ::: Charlie is nice.\nBig(Dave) ::: Dave is big.\nSmart(Dave) ::: Dave is smart.\nCold(x) → Red(x) ::: Red things are cold.\n∀x (Cold(x) ∧ Red(x) → Nice(x)) ::: All cold, red things are nice.\n∀x (Nice(x) → Smart(x)) ::: If something is nice then it is smart.\n∀x ((Big(x) ∧ Furry(x)) → Nice(x)) ::: All big, furry things are nice.\n∀x (Furry(x) → Green(x)) ::: All furry things are green.\n∀x (Smart(Charlie) → Big(Charlie)) ::: If Charlie is smart then Charlie is big.\n∀x ((Furry(x) ∧ Nice(x)) → Green(x)) ::: Furry, nice things are green.\n∀x ((Smart(x) ∧ Big(x)) → Furry(x)) ::: If something is smart and big then it is furry.\nConclusion:\n¬Nice(Charlie) ::: Charlie is not nice."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-791",
    "context": "The bear is cold. The bear is kind. The bear is young. The bear visits the dog. The dog is blue. The dog is young. The dog needs the rabbit. The dog visits the bear. The dog visits the rabbit. The lion is kind. The lion needs the bear. The rabbit sees the bear. If something needs the dog then it sees the lion. If something sees the bear and it needs the rabbit then the rabbit is young. If the dog needs the bear and the bear needs the lion then the bear visits the dog. If something visits the lion then it sees the bear. If something is blue then it visits the lion. If something needs the rabbit and the rabbit visits the bear then it visits the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not see the bear.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nKind(x) ::: x is kind.\nYoung(x) ::: x is young.\nVisits(x, y) ::: x visits y.\nBlue(x) ::: x is blue.\nNeeds(x, y) ::: x needs y.\nSees(x, y) ::: x sees y.\nPremises:\nCold(bear) ::: The bear is cold.\nKind(bear) ::: The bear is kind.\nYoung(bear) ::: The bear is young.\nVisits(bear, dog) ::: The bear visits the dog.\nBlue(dog) ::: The dog is blue.\nYoung(dog) ::: The dog is young.\nNeeds(dog, rabbit) ::: The dog needs the rabbit.\nVisits(dog, bear) ::: The dog visits the bear.\nVisits(dog, rabbit) ::: The dog visits the rabbit.\nKind(lion) ::: The lion is kind.\nNeeds(lion, bear) ::: The lion needs the bear.\nSees(rabbit, bear) ::: The rabbit sees the bear.\n∀x ((Needs(x, dog)) → Sees(x, lion)) ::: If something needs the dog then it sees the lion.\n∀x ((Sees(x, bear) ∧ Needs(x, rabbit)) → Young(rabbit)) ::: If something sees the bear and it needs the rabbit then the rabbit is young.\n∀x ((Needs(dog, bear) ∧ Needs(bear, lion)) → Visits(bear, dog)) ::: If the dog needs the bear and the bear needs the lion then the bear visits the dog.\n∀x (Visits(x, lion) → Sees(x, bear)) ::: If something visits the lion then it sees the bear.\n∀x (Blue(x) → Visits(x, lion)) ::: If something is blue then it visits the lion.\n∀x ((Needs(x, rabbit) ∧ Visits(rabbit, bear)) → Visits(rabbit, lion)) ::: If something needs the rabbit and the rabbit visits the bear then it visits the lion.\nConclusion:\n¬Sees(lion, bear) ::: The lion does not see the bear."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-603",
    "context": "Anne is big. Anne is furry. Anne is round. Anne is smart. Anne is young. Erin is green. Erin is smart. Round things are cold. If Erin is round then Erin is furry. If something is smart and young then it is big. Furry things are smart. All green, big things are smart. If Erin is furry then Erin is young. If Erin is green then Erin is furry. If Erin is smart and Erin is cold then Erin is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is big.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nFurry(x) ::: x is furry.\nRound(x) ::: x is round.\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nGreen(x) ::: x is green.\nCold(x) ::: x is cold.\nPremises:\nBig(Anne) ::: Anne is big.\nFurry(Anne) ::: Anne is furry.\nRound(Anne) ::: Anne is round.\nSmart(Anne) ::: Anne is smart.\nYoung(Anne) ::: Anne is young.\nGreen(Erin) ::: Erin is green.\nSmart(Erin) ::: Erin is smart.\n∀x ((Round(x) → Cold(x))) ::: Round things are cold.\n∀x ((Erin → Round(Erin)) → Furry(Erin)) ::: If Erin is round then Erin is furry.\n∀x ((Smart(x) ∧ Young(x)) → Big(x)) ::: If something is smart and young then it is big.\n∀x (Furry(x) → Smart(x)) ::: Furry things are smart.\n∀x ((Green(x) ∧ Big(x)) → Smart(x)) ::: All green, big things are smart.\n∀x ((Furry(Erin)) → Young(Erin)) ::: If Erin is furry then Erin is young.\n∀x ((Green(Erin)) → Furry(Erin)) ::: If Erin is green then Erin is furry.\n∀x ((Smart(Erin) ∧ Cold(Erin)) → Round(Erin)) ::: If Erin is smart and Erin is cold then Erin is round.\nConclusion:\nBig(Anne) ::: Anne is big."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1006",
    "context": "Anne is big. Bob is blue. Harry is round. All blue, kind things are green. All big things are round. If something is round then it is kind. If something is kind then it is cold. If Harry is green then Harry is cold. If something is cold then it is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not big.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nRound(x) ::: x is round.\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nCold(x) ::: x is cold.\nPremises:\nBig(Anne) ::: Anne is big.\nBlue(Bob) ::: Bob is blue.\nRound(Harry) ::: Harry is round.\n∀x ((Blue(x) ∧ Kind(x)) → Green(x)) ::: All blue, kind things are green.\n∀x (Big(x) → Round(x)) ::: All big things are round.\n∀x (Round(x) → Kind(x)) ::: If something is round then it is kind.\n∀x (Kind(x) → Cold(x)) ::: If something is kind then it is cold.\n∀x (Green(Harry) → Cold(Harry)) ::: If Harry is green then Harry is cold.\n∀x (Cold(x) → Big(x)) ::: If something is cold then it is big.\nConclusion:\n¬Big(Anne) ::: Anne is not big."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-685",
    "context": "Bob is not cold. Bob is quiet. Bob is not round. Bob is young. Dave is cold. Dave is quiet. Dave is not rough. If something is cold and not kind then it is not round. If something is cold and not rough then it is round. If something is cold and not kind then it is young. If something is round then it is young. If something is rough and not kind then it is blue. If something is young and not rough then it is blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nQuiet(x) ::: x is quiet.\nRound(x) ::: x is round.\nYoung(x) ::: x is young.\nBlue(x) ::: x is blue.\nRough(x) ::: x is rough.\nKind(x) ::: x is kind.\nPremises:\n¬Cold(Bob) ::: Bob is not cold.\nQuiet(Bob) ::: Bob is quiet.\n¬Round(Bob) ::: Bob is not round.\nYoung(Bob) ::: Bob is young.\nCold(Dave) ::: Dave is cold.\nQuiet(Dave) ::: Dave is quiet.\n¬Rough(Dave) ::: Dave is not rough.\n∀x ((Cold(x) ∧ ¬Kind(x)) → ¬Round(x)) ::: If something is cold and not kind then it is not round.\n∀x ((Cold(x) ∧ ¬Rough(x)) → Round(x)) ::: If something is cold and not rough then it is round.\n∀x ((Cold(x) ∧ ¬Kind(x)) → Young(x)) ::: If something is cold and not kind then it is young.\n∀x (Round(x) → Young(x)) ::: If something is round then it is young.\n∀x ((Rough(x) ∧ ¬Kind(x)) → Blue(x)) ::: If something is rough and not kind then it is blue.\n∀x ((Young(x) ∧ ¬Rough(x)) → Blue(x)) ::: If something is young and not rough then it is blue.\nConclusion:\n¬Blue(Bob) ::: Bob is not blue."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-896",
    "context": "The bald eagle likes the rabbit. The cow eats the rabbit. The rabbit eats the tiger. The tiger does not like the cow. If someone eats the cow then they need the rabbit. If someone likes the cow then the cow eats the rabbit. If someone eats the rabbit then the rabbit needs the bald eagle. If someone eats the tiger then they like the bald eagle. If someone eats the rabbit and the rabbit likes the bald eagle then the rabbit eats the cow. If someone is red then they are rough. If someone is nice and they need the rabbit then they eat the rabbit. If someone eats the bald eagle then they need the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit eats the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes(x, y) ::: x likes y.\nEats(x, y) ::: x eats y.\nNeeds(x, y) ::: x needs y.\nRed(x) ::: x is red.\nRough(x) ::: x is rough.\nNice(x) ::: x is nice.\nPremises:\nLikes(bald eagle, rabbit) ::: The bald eagle likes the rabbit.\nEats(cow, rabbit) ::: The cow eats the rabbit.\nEats(rabbit, tiger) ::: The rabbit eats the tiger.\n¬Likes(tiger, cow) ::: The tiger does not like the cow.\n∀x ((Eats(x, cow)) → Needs(x, rabbit)) ::: If someone eats the cow then they need the rabbit.\n∀x ((Likes(x, cow)) → Eats(cow, rabbit)) ::: If someone likes the cow then the cow eats the rabbit.\n∀x ((Eats(x, rabbit)) → Needs(rabbit, bald eagle)) ::: If someone eats the rabbit then the rabbit needs the bald eagle.\n∀x ((Eats(x, tiger)) → Likes(x, bald eagle)) ::: If someone eats the tiger then they like the bald eagle.\n∀x ((Eats(x, rabbit) ∧ Likes(rabbit, bald eagle)) → Eats(rabbit, cow)) ::: If someone eats the rabbit and the rabbit likes the bald eagle then the rabbit eats the cow.\n∀x (Red(x) → Rough(x)) ::: If someone is red then they are rough.\n∀x ((Nice(x) ∧ Needs(x, rabbit)) → Eats(x, rabbit)) ::: If someone is nice and they need the rabbit then they eat the rabbit.\n∀x (Eats(x, bald eagle) → Needs(x, cow)) ::: If someone eats the bald eagle then they need the cow.\nConclusion:\nEats(rabbit, tiger) ::: The rabbit eats the tiger."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-33",
    "context": "The bear chases the tiger. The cat chases the mouse. The cat visits the bear. The mouse chases the tiger. The mouse is rough. The mouse is young. The tiger is big. If something chases the bear and the bear likes the mouse then the mouse likes the bear. If something visits the mouse then the mouse visits the tiger. If the tiger is young and the tiger likes the cat then the cat chases the tiger. If something likes the mouse and it is green then it chases the mouse. If something chases the cat then the cat likes the mouse. If the cat visits the bear then the cat visits the mouse. If something visits the tiger then the tiger chases the cat. If something is green and it chases the tiger then the tiger chases the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not chase the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nVisits(x, y) ::: x visits y.\nLikes(x, y) ::: x likes y.\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nGreen(x) ::: x is green.\nBear(x) ::: x is a bear.\nTiger(x) ::: x is a tiger.\nCat(x) ::: x is a cat.\nMouse(x) ::: x is a mouse.\nPremises:\nChases(Bear, Tiger) ::: The bear chases the tiger.\nChases(Cat, Mouse) ::: The cat chases the mouse.\nVisits(Cat, Bear) ::: The cat visits the bear.\nChases(Mouse, Tiger) ::: The mouse chases the tiger.\nRough(Mouse) ::: The mouse is rough.\nYoung(Mouse) ::: The mouse is young.\nBig(Tiger) ::: The tiger is big.\n∀x ((Chases(x, Bear) ∧ Likes(Bear, Mouse)) → Likes(Mouse, Bear)) ::: If something chases the bear and the bear likes the mouse then the mouse likes the bear.\n∀x (Visits(x, Mouse) → Visits(Mouse, Tiger)) ::: If something visits the mouse then the mouse visits the tiger.\n∀x ((Young(Tiger) ∧ Likes(Tiger, Cat)) → Chases(Cat, Tiger)) ::: If the tiger is young and the tiger likes the cat then the cat chases the tiger.\n∀x ((Likes(x, Mouse) ∧ Green(x)) → Chases(x, Mouse)) ::: If something likes the mouse and it is green then it chases the mouse.\n∀x (Chases(x, Cat) → Likes(Cat, Mouse)) ::: If something chases the cat then the cat likes the mouse.\n∀x (Visits(Cat, Bear) → Visits(Cat, Mouse)) ::: If the cat visits the bear then the cat visits the mouse.\n∀x (Visits(x, Tiger) → Chases(Tiger, Cat)) ::: If something visits the tiger then the tiger chases the cat.\n∀x ((Green(x) ∧ Chases(x, Tiger)) → Chases(Tiger, Bear)) ::: If something is green and it chases the tiger then the tiger chases the bear.\nConclusion:\n¬Chases(Mouse, Tiger) ::: The mouse does not chase the tiger."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-252",
    "context": "Bob is not big. Erin is cold. Erin is furry. Erin is not green. Erin is quiet. Erin is not smart. Erin is young. Fiona is smart. Gary is big. Gary is furry. Furry, green things are quiet. If something is smart and not furry then it is not quiet. Quiet, green things are cold. Smart, furry things are big. Big things are green. Smart things are not green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nFurry(x) ::: x is furry.\nGreen(x) ::: x is green.\nQuiet(x) ::: x is quiet.\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nPremises:\n¬Big(Bob) ::: Bob is not big.\nCold(Erin) ::: Erin is cold.\nFurry(Erin) ::: Erin is furry.\n¬Green(Erin) ::: Erin is not green.\nQuiet(Erin) ::: Erin is quiet.\n¬Smart(Erin) ::: Erin is not smart.\nYoung(Erin) ::: Erin is young.\nSmart(Fiona) ::: Fiona is smart.\nBig(Gary) ::: Gary is big.\nFurry(Gary) ::: Gary is furry.\n∀x ((Furry(x) ∧ Green(x)) → Quiet(x)) ::: Furry, green things are quiet.\n∀x ((Smart(x) ∧ ¬Furry(x)) → ¬Quiet(x)) ::: If something is smart and not furry then it is not quiet.\n∀x ((Quiet(x) ∧ Green(x)) → Cold(x)) ::: Quiet, green things are cold.\n∀x ((Smart(x) ∧ Furry(x)) → Big(x)) ::: Smart, furry things are big.\n∀x (Big(x) → Green(x)) ::: Big things are green.\n∀x (Smart(x) → ¬Green(x)) ::: Smart things are not green.\nConclusion:\n¬Cold(Fiona) ::: Fiona is not cold."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1220",
    "context": "The squirrel is kind. If someone is rough and not kind then they are red. All round people are red. If someone is round then they are rough. All nice, red people are rough. All red people are nice. If the squirrel is kind then the squirrel is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is kind.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nNice(x) ::: x is nice.\nPremises:\nKind(squirrel) ::: The squirrel is kind.\n∀x ((Rough(x) ∧ ¬Kind(x)) → Red(x)) ::: If someone is rough and not kind then they are red.\n∀x (Round(x) → Red(x)) ::: All round people are red.\n∀x (Round(x) → Rough(x)) ::: If someone is round then they are rough.\n∀x ((Nice(x) ∧ Red(x)) → Rough(x)) ::: All nice, red people are rough.\n∀x (Red(x) → Nice(x)) ::: All red people are nice.\n∀x (Kind(squirrel) → Round(squirrel)) ::: If the squirrel is kind then the squirrel is round.\nConclusion:\nKind(squirrel) ::: The squirrel is kind."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-822",
    "context": "Harry is blue. Harry is nice. Harry is quiet. Quiet, nice things are kind. If something is white then it is round. Blue things are furry. If something is nice and blue then it is kind. If something is kind then it is white. All kind things are quiet. If something is white and blue then it is nice. Nice, round things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nNice(x) ::: x is nice.\nQuiet(x) ::: x is quiet.\nKind(x) ::: x is kind.\nWhite(x) ::: x is white.\nRound(x) ::: x is round.\nFurry(x) ::: x is furry.\nPremises:\nBlue(Harry) ::: Harry is blue.\nNice(Harry) ::: Harry is nice.\nQuiet(Harry) ::: Harry is quiet.\n∀x ((Quiet(x) ∧ Nice(x)) → Kind(x)) ::: Quiet, nice things are kind.\n∀x (White(x) → Round(x)) ::: If something is white then it is round.\n∀x (Blue(x) → Furry(x)) ::: Blue things are furry.\n∀x ((Nice(x) ∧ Blue(x)) → Kind(x)) ::: If something is nice and blue then it is kind.\n∀x (Kind(x) → White(x)) ::: If something is kind then it is white.\n∀x (Kind(x) → Quiet(x)) ::: All kind things are quiet.\n∀x ((White(x) ∧ Blue(x)) → Nice(x)) ::: If something is white and blue then it is nice.\n∀x ((Nice(x) ∧ Round(x)) → Quiet(x)) ::: Nice, round things are quiet.\nConclusion:\n¬Nice(Harry) ::: Harry is not nice."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-765",
    "context": "Charlie is green. Charlie is red. Charlie is round. Charlie is smart. Harry is green. Harry is quiet. Harry is smart. Rough people are round. All nice, quiet people are rough. Round, nice people are smart. All round people are red. Round, red people are quiet. If Charlie is round and Charlie is red then Charlie is smart. If Harry is red then Harry is green. All green people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nSmart(x) ::: x is smart.\nQuiet(x) ::: x is quiet.\nRough(x) ::: x is rough.\nNice(x) ::: x is nice.\nPremises:\nGreen(Charlie) ::: Charlie is green.\nRed(Charlie) ::: Charlie is red.\nRound(Charlie) ::: Charlie is round.\nSmart(Charlie) ::: Charlie is smart.\nGreen(Harry) ::: Harry is green.\nQuiet(Harry) ::: Harry is quiet.\nSmart(Harry) ::: Harry is smart.\n∀x (Rough(x) → Round(x)) ::: Rough people are round.\n∀x ((Nice(x) ∧ Quiet(x)) → Rough(x)) ::: All nice, quiet people are rough.\n∀x ((Round(x) ∧ Nice(x)) → Smart(x)) ::: Round, nice people are smart.\n∀x (Round(x) → Red(x)) ::: All round people are red.\n∀x ((Round(x) ∧ Red(x)) → Quiet(x)) ::: Round, red people are quiet.\n∀x ((Round(x) ∧ Red(x)) → Smart(x)) ::: If Charlie is round and Charlie is red then Charlie is smart.\n∀x (Red(Harry) → Green(Harry)) ::: If Harry is red then Harry is green.\n∀x (Green(x) → Nice(x)) ::: All green people are nice.\nConclusion:\n¬Round(Harry) ::: Harry is not round."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-952",
    "context": "The bear eats the squirrel. The bear is nice. The bear likes the rabbit. The bear likes the squirrel. The bear visits the squirrel. The rabbit is blue. The rabbit is cold. The rabbit is nice. The rabbit is rough. The rabbit visits the bear. The squirrel eats the bear. The squirrel eats the rabbit. The squirrel is kind. The squirrel is nice. The squirrel likes the rabbit. The squirrel visits the bear. If something visits the rabbit and it eats the rabbit then it visits the squirrel. If the squirrel visits the bear and the bear likes the rabbit then the squirrel visits the rabbit. If something visits the squirrel then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear visits the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nNice(x) ::: x is nice.\nLikes(x, y) ::: x likes y.\nVisits(x, y) ::: x visits y.\nBlue(x) ::: x is blue.\nCold(x) ::: x is cold.\nRough(x) ::: x is rough.\nKind(x) ::: x is kind.\nPremises:\nEats(bear, squirrel) ::: The bear eats the squirrel.\nNice(bear) ::: The bear is nice.\nLikes(bear, rabbit) ::: The bear likes the rabbit.\nLikes(bear, squirrel) ::: The bear likes the squirrel.\nVisits(bear, squirrel) ::: The bear visits the squirrel.\nBlue(rabbit) ::: The rabbit is blue.\nCold(rabbit) ::: The rabbit is cold.\nNice(rabbit) ::: The rabbit is nice.\nRough(rabbit) ::: The rabbit is rough.\nVisits(rabbit, bear) ::: The rabbit visits the bear.\nEats(squirrel, bear) ::: The squirrel eats the bear.\nEats(squirrel, rabbit) ::: The squirrel eats the rabbit.\nKind(squirrel) ::: The squirrel is kind.\nNice(squirrel) ::: The squirrel is nice.\nLikes(squirrel, rabbit) ::: The squirrel likes the rabbit.\nVisits(squirrel, bear) ::: The squirrel visits the bear.\n∀x ((Visits(x, rabbit) ∧ Eats(x, rabbit)) → Visits(x, squirrel)) ::: If something visits the rabbit and it eats the rabbit then it visits the squirrel.\n∀x ((Visits(squirrel, bear) ∧ Likes(bear, rabbit)) → Visits(squirrel, rabbit)) ::: If the squirrel visits the bear and the bear likes the rabbit then the squirrel visits the rabbit.\n∀x (Visits(x, squirrel) → Cold(x)) ::: If something visits the squirrel then it is cold.\nConclusion:\nVisits(bear, squirrel) ::: The bear visits the squirrel."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-937",
    "context": "The bear eats the rabbit. The bear eats the tiger. The bear is blue. The bear needs the rabbit. The cat chases the rabbit. The cat chases the tiger. The cat eats the rabbit. The cat eats the tiger. The cat is blue. The cat is green. The cat needs the bear. The rabbit is blue. The rabbit needs the tiger. The tiger eats the rabbit. The tiger is round. If something eats the cat and the cat is cold then it eats the bear. If the bear needs the tiger and the bear eats the cat then the bear chases the tiger. If something eats the bear and it does not chase the rabbit then the bear chases the tiger. If something needs the tiger then the tiger eats the bear. If the rabbit chases the bear then the rabbit is not blue. If something chases the tiger and the tiger eats the bear then the tiger needs the cat. If the tiger eats the bear and the tiger needs the cat then the cat is round. If the tiger is cold and the bear does not chase the tiger then the tiger does not need the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nChases(x, y) ::: x chases y.\nIsBlue(x) ::: x is blue.\nIsGreen(x) ::: x is green.\nIsRound(x) ::: x is round.\nNeeds(x, y) ::: x needs y.\nIsCold(x) ::: x is cold.\nPremises:\nEats(bear, rabbit) ::: The bear eats the rabbit.\nEats(bear, tiger) ::: The bear eats the tiger.\nIsBlue(bear) ::: The bear is blue.\nNeeds(bear, rabbit) ::: The bear needs the rabbit.\nChases(cat, rabbit) ::: The cat chases the rabbit.\nChases(cat, tiger) ::: The cat chases the tiger.\nEats(cat, rabbit) ::: The cat eats the rabbit.\nEats(cat, tiger) ::: The cat eats the tiger.\nIsBlue(cat) ::: The cat is blue.\nIsGreen(cat) ::: The cat is green.\nNeeds(cat, bear) ::: The cat needs the bear.\nIsBlue(rabbit) ::: The rabbit is blue.\nNeeds(rabbit, tiger) ::: The rabbit needs the tiger.\nEats(tiger, rabbit) ::: The tiger eats the rabbit.\nIsRound(tiger) ::: The tiger is round.\n∀x ((Eats(x, cat) ∧ IsCold(cat)) → Eats(x, bear)) ::: If something eats the cat and the cat is cold then it eats the bear.\n∀x ((Needs(bear, tiger) ∧ Eats(bear, cat)) → Chases(bear, tiger)) ::: If the bear needs the tiger and the bear eats the cat then the bear chases the tiger.\n∀x ((Eats(x, bear) ∧ ¬Chases(x, rabbit)) → Chases(bear, tiger)) ::: If something eats the bear and it does not chase the rabbit then the bear chases the tiger.\n∀x (Needs(x, tiger) → Eats(tiger, bear)) ::: If something needs the tiger then the tiger eats the bear.\n∀x (Chases(rabbit, bear) → ¬IsBlue(rabbit)) ::: If the rabbit chases the bear then the rabbit is not blue.\n∀x ((Chases(x, tiger) ∧ Eats(tiger, bear)) → Needs(tiger, cat)) ::: If something chases the tiger and the tiger eats the bear then the tiger needs the cat.\n∀x ((Eats(tiger, bear) ∧ Needs(tiger, cat)) → IsRound(cat)) ::: If the tiger eats the bear and the tiger needs the cat then the cat is round.\n∀x ((IsCold(tiger) ∧ ¬Chases(bear, tiger)) → ¬Needs(tiger, bear)) ::: If the tiger is cold and the bear does not chase the tiger then the tiger does not need the bear.\nConclusion:\n¬IsRound(tiger) ::: The tiger is not round."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1550",
    "context": "Charlie is big. Charlie is kind. Dave is not kind. Dave is not rough. Erin is quiet. Erin is red. Erin is not rough. If something is smart then it is quiet. If Dave is not rough then Dave is smart. If something is quiet then it is red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nQuiet(x) ::: x is quiet.\nRed(x) ::: x is red.\nSmart(x) ::: x is smart.\nPremises:\nBig(Charlie) ::: Charlie is big.\nKind(Charlie) ::: Charlie is kind.\n¬Kind(Dave) ::: Dave is not kind.\n¬Rough(Dave) ::: Dave is not rough.\nQuiet(Erin) ::: Erin is quiet.\nRed(Erin) ::: Erin is red.\n¬Rough(Erin) ::: Erin is not rough.\n∀x (Smart(x) → Quiet(x)) ::: If something is smart then it is quiet.\n∀x (¬Rough(Dave) → Smart(Dave)) ::: If Dave is not rough then Dave is smart.\n∀x (Quiet(x) → Red(x)) ::: If something is quiet then it is red.\nConclusion:\n¬Quiet(Charlie) ::: Charlie is not quiet."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-265",
    "context": "Bob is blue. Bob is nice. Bob is red. If something is round then it is quiet. All nice, blue things are white. Furry, quiet things are round. If Bob is red then Bob is furry. If something is nice and white then it is round. Red things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nQuiet(x) ::: x is quiet.\nWhite(x) ::: x is white.\nFurry(x) ::: x is furry.\nPremises:\nBlue(Bob) ::: Bob is blue.\nNice(Bob) ::: Bob is nice.\nRed(Bob) ::: Bob is red.\n∀x ((Round(x)) → Quiet(x)) ::: If something is round then it is quiet.\n∀x ((Nice(x) ∧ Blue(x)) → White(x)) ::: All nice, blue things are white.\n∀x ((Furry(x) ∧ Quiet(x)) → Round(x)) ::: Furry, quiet things are round.\n∀x ((Red(x)) → Furry(x)) ::: If Bob is red then Bob is furry.\n∀x ((Nice(x) ∧ White(x)) → Round(x)) ::: If something is nice and white then it is round.\n∀x (Red(x) → Nice(x)) ::: Red things are nice.\nConclusion:\nBlue(Bob) ::: Bob is blue."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-467",
    "context": "The cat does not chase the rabbit. The cat does not eat the cow. The cat eats the rabbit. The cat is not kind. The cat is red. The cat does not need the cow. The cat needs the rabbit. The cow chases the cat. The cow eats the cat. The cow eats the rabbit. The cow needs the cat. The cow does not need the rabbit. The rabbit eats the cat. The rabbit is big. The rabbit is cold. The rabbit needs the cow. If something needs the cow then it does not chase the cat. If the cow is red and the cow does not eat the cat then the cat is not red. If something eats the cow and the cow is not red then it needs the cat. If something chases the cow then it needs the cat. If something is kind and not red then it chases the cow. If something is big and it does not chase the cat then it chases the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow does not need the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChase(x, y) ::: x chases y.\nEat(x, y) ::: x eats y.\nKind(x) ::: x is kind.\nRed(x) ::: x is red.\nNeed(x, y) ::: x needs y.\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nPremises:\n¬Chase(Cat, Rabbit) ::: The cat does not chase the rabbit.\n¬Eat(Cat, Cow) ::: The cat does not eat the cow.\nEat(Cat, Rabbit) ::: The cat eats the rabbit.\n¬Kind(Cat) ::: The cat is not kind.\nRed(Cat) ::: The cat is red.\n¬Need(Cat, Cow) ::: The cat does not need the cow.\nNeed(Cat, Rabbit) ::: The cat needs the rabbit.\nChase(Cow, Cat) ::: The cow chases the cat.\nEat(Cow, Cat) ::: The cow eats the cat.\nEat(Cow, Rabbit) ::: The cow eats the rabbit.\nNeed(Cow, Cat) ::: The cow needs the cat.\n¬Need(Cow, Rabbit) ::: The cow does not need the rabbit.\nEat(Rabbit, Cat) ::: The rabbit eats the cat.\nBig(Rabbit) ::: The rabbit is big.\nCold(Rabbit) ::: The rabbit is cold.\n∀x (Need(x, Cow) → ¬Chase(x, Cat)) ::: If something needs the cow then it does not chase the cat.\n∀x ((Red(x) ∧ ¬Eat(x, Cat)) → ¬Red(Cat)) ::: If the cow is red and the cow does not eat the cat then the cat is not red.\n∀x ((Eat(x, Cow) ∧ ¬Red(Cow)) → Need(x, Cat)) ::: If something eats the cow and the cow is not red then it needs the cat.\n∀x (Chase(x, Cow) → Need(x, Cat)) ::: If something chases the cow then it needs the cat.\n∀x ((Kind(x) ∧ ¬Red(x)) → Chase(x, Cow)) ::: If something is kind and not red then it chases the cow.\n∀x ((Big(x) ∧ ¬Chase(x, Cat)) → Chase(x, Cow)) ::: If something is big and it does not chase the cat then it chases the cow.\nConclusion:\n¬Need(Cow, Cat) ::: The cow does not need the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1002",
    "context": "Bob is big. Bob is green. Bob is red. Bob is smart. Charlie is big. Charlie is cold. Charlie is round. Charlie is smart. Gary is cold. Harry is green. Nice things are cold. Cold things are green. If Gary is round then Gary is red. If something is big and round then it is nice. Smart, red things are round. If Charlie is nice and Charlie is cold then Charlie is smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not nice.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nGreen(x) ::: x is green.\nRed(x) ::: x is red.\nSmart(x) ::: x is smart.\nCold(x) ::: x is cold.\nRound(x) ::: x is round.\nNice(x) ::: x is nice.\nPremises:\nBig(Bob) ::: Bob is big.\nGreen(Bob) ::: Bob is green.\nRed(Bob) ::: Bob is red.\nSmart(Bob) ::: Bob is smart.\nBig(Charlie) ::: Charlie is big.\nCold(Charlie) ::: Charlie is cold.\nRound(Charlie) ::: Charlie is round.\nSmart(Charlie) ::: Charlie is smart.\nCold(Gary) ::: Gary is cold.\nGreen(Harry) ::: Harry is green.\n∀x (Nice(x) → Cold(x)) ::: Nice things are cold.\n∀x (Cold(x) → Green(x)) ::: Cold things are green.\n∀x ((Gary) → Red(Gary)) ::: If Gary is round then Gary is red.\n∀x ((Big(x) ∧ Round(x)) → Nice(x)) ::: If something is big and round then it is nice.\n∀x ((Smart(x) ∧ Red(x)) → Round(x)) ::: Smart, red things are round.\n∀x ((Nice(Charlie) ∧ Cold(Charlie)) → Smart(Charlie)) ::: If Charlie is nice and Charlie is cold then Charlie is smart.\nConclusion:\n¬Nice(Gary) ::: Gary is not nice."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-599",
    "context": "The bald eagle is cold. The bald eagle is round. The bald eagle likes the mouse. The bald eagle needs the mouse. The bald eagle sees the mouse. The mouse is green. The mouse is young. The mouse likes the bald eagle. The mouse needs the bald eagle. The mouse sees the bald eagle. If something likes the bald eagle and it needs the mouse then the mouse likes the bald eagle. If something is big and it likes the bald eagle then the bald eagle is young. If something likes the mouse then it is big. If something sees the bald eagle then it needs the mouse. All young things are big. If something likes the mouse and it is young then the mouse is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is cold.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nRound(x) ::: x is round.\nLikes(x, y) ::: x likes y.\nNeeds(x, y) ::: x needs y.\nSees(x, y) ::: x sees y.\nGreen(x) ::: x is green.\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nPremises:\nCold(bald eagle) ::: The bald eagle is cold.\nRound(bald eagle) ::: The bald eagle is round.\nLikes(bald eagle, mouse) ::: The bald eagle likes the mouse.\nNeeds(bald eagle, mouse) ::: The bald eagle needs the mouse.\nSees(bald eagle, mouse) ::: The bald eagle sees the mouse.\nGreen(mouse) ::: The mouse is green.\nYoung(mouse) ::: The mouse is young.\nLikes(mouse, bald eagle) ::: The mouse likes the bald eagle.\nNeeds(mouse, bald eagle) ::: The mouse needs the bald eagle.\nSees(mouse, bald eagle) ::: The mouse sees the bald eagle.\n∀x ∀y ((Likes(x, bald eagle) ∧ Needs(y, mouse)) → Likes(y, bald eagle)) ::: If something likes the bald eagle and it needs the mouse then the mouse likes the bald eagle.\n∀x ((Big(x) ∧ Likes(x, bald eagle)) → Young(bald eagle)) ::: If something is big and it likes the bald eagle then the bald eagle is young.\n∀x (Likes(x, mouse) → Big(x)) ::: If something likes the mouse then it is big.\n∀x (Sees(x, bald eagle) → Needs(x, mouse)) ::: If something sees the bald eagle then it needs the mouse.\n∀x (Young(x) → Big(x)) ::: All young things are big.\n∀x ((Likes(x, mouse) ∧ Young(x)) → Cold(mouse)) ::: If something likes the mouse and it is young then the mouse is cold.\nConclusion:\nCold(bald eagle) ::: The bald eagle is cold."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-681",
    "context": "The cow is blue. The cow likes the lion. The cow visits the lion. The lion is rough. The lion likes the tiger. The lion visits the cow. The tiger does not chase the cow. The tiger chases the lion. The tiger is green. The tiger likes the cow. The tiger does not visit the cow. The tiger visits the lion. If something is green and it visits the lion then it is blue. If something likes the tiger then it does not chase the tiger. If something is green and rough then it chases the tiger. If the lion is red then the lion is not blue. If something likes the cow and it is blue then it likes the tiger. If something chases the lion then it likes the lion. If something chases the tiger then the tiger is nice. If something likes the cow and the cow likes the lion then the lion is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nLikes(x, y) ::: x likes y.\nVisits(x, y) ::: x visits y.\nRough(x) ::: x is rough.\nGreen(x) ::: x is green.\nChases(x, y) ::: x chases y.\nRed(x) ::: x is red.\nNice(x) ::: x is nice.\nPremises:\nBlue(cow) ::: The cow is blue.\nLikes(cow, lion) ::: The cow likes the lion.\nVisits(cow, lion) ::: The cow visits the lion.\nRough(lion) ::: The lion is rough.\nLikes(lion, tiger) ::: The lion likes the tiger.\nVisits(lion, cow) ::: The lion visits the cow.\n¬Chases(tiger, cow) ::: The tiger does not chase the cow.\nChases(tiger, lion) ::: The tiger chases the lion.\nGreen(tiger) ::: The tiger is green.\nLikes(tiger, cow) ::: The tiger likes the cow.\n¬Visits(tiger, cow) ::: The tiger does not visit the cow.\nVisits(tiger, lion) ::: The tiger visits the lion.\n∀x ((Green(x) ∧ Visits(x, lion)) → Blue(x)) ::: If something is green and it visits the lion then it is blue.\n∀x (Likes(x, tiger) → ¬Chases(x, tiger)) ::: If something likes the tiger then it does not chase the tiger.\n∀x ((Green(x) ∧ Rough(x)) → Chases(x, tiger)) ::: If something is green and rough then it chases the tiger.\n∀x (Red(lion) → ¬Blue(lion)) ::: If the lion is red then the lion is not blue.\n∀x ((Likes(x, cow) ∧ Blue(x)) → Likes(x, tiger)) ::: If something likes the cow and it is blue then it likes the tiger.\n∀x (Chases(x, lion) → Likes(x, lion)) ::: If something chases the lion then it likes the lion.\n∀x (Chases(x, tiger) → Nice(tiger)) ::: If something chases the tiger then the tiger is nice.\n∀x ((Likes(x, cow) ∧ Likes(cow, lion)) → Nice(lion)) ::: If something likes the cow and the cow likes the lion then the lion is nice.\nConclusion:\n¬Green(tiger) ::: The tiger is not green."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-517",
    "context": "The cat is not red. The cat needs the mouse. The lion chases the rabbit. The lion is not red. The mouse does not need the cat. The rabbit is not young. The rabbit visits the lion. If the lion needs the cat then the cat does not visit the rabbit. If someone needs the mouse and they are young then the mouse is cold. If someone visits the mouse then they need the cat. If someone visits the lion then they need the rabbit. If someone chases the rabbit then the rabbit is cold. If the lion chases the rabbit then the lion visits the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not need the rabbit.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is red.\nNeeds(x, y) ::: x needs y.\nChases(x, y) ::: x chases y.\nYoung(x) ::: x is young.\nVisits(x, y) ::: x visits y.\nCold(x) ::: x is cold.\n\nPremises:\n¬Red(Cat) ::: The cat is not red.\nNeeds(Cat, Mouse) ::: The cat needs the mouse.\nChases(Lion, Rabbit) ::: The lion chases the rabbit.\n¬Red(Lion) ::: The lion is not red.\n¬Needs(Mouse, Cat) ::: The mouse does not need the cat.\n¬Young(Rabbit) ::: The rabbit is not young.\nVisits(Rabbit, Lion) ::: The rabbit visits the lion.\n∀x ((Needs(Lion, Cat)) → ¬Visits(Cat, Rabbit)) ::: If the lion needs the cat then the cat does not visit the rabbit.\n∀x ((Needs(x, Mouse) ∧ Young(x)) → Cold(Mouse)) ::: If someone needs the mouse and they are young then the mouse is cold.\n∀x (Visits(x, Mouse) → Needs(x, Cat)) ::: If someone visits the mouse then they need the cat.\n∀x (Visits(x, Lion) → Needs(x, Rabbit)) ::: If someone visits the lion then they need the rabbit.\n∀x (Chases(x, Rabbit) → Cold(Rabbit)) ::: If someone chases the rabbit then the rabbit is cold.\n∀x ((Chases(Lion, Rabbit)) → Visits(Lion, Mouse)) ::: If the lion chases the rabbit then the lion visits the mouse.\n\nConclusion:\n¬Needs(Cat, Rabbit) ::: The cat does not need the rabbit."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1311",
    "context": "The cat eats the lion. The cat is cold. The cat sees the cow. The cow eats the lion. The cow is green. The cow likes the cat. The lion eats the cow. If someone is rough then they like the lion. If someone eats the lion and they are not cold then the lion is not round. If someone likes the lion then they do not see the lion. If the cow eats the lion then the cow is rough. If someone likes the lion and the lion is rough then the lion does not see the cat. If someone is round and they do not see the lion then they like the cow. If someone eats the cow then they are red. If someone is red and they do not like the cow then they do not eat the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow eats the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nCold(x) ::: x is cold.\nSees(x, y) ::: x sees y.\nGreen(x) ::: x is green.\nLikes(x, y) ::: x likes y.\nRough(x) ::: x is rough.\nRound(x) ::: x is round.\nRed(x) ::: x is red.\nPremises:\nEats(Cat, Lion) ::: The cat eats the lion.\nCold(Cat) ::: The cat is cold.\nSees(Cat, Cow) ::: The cat sees the cow.\nEats(Cow, Lion) ::: The cow eats the lion.\nGreen(Cow) ::: The cow is green.\nLikes(Cow, Cat) ::: The cow likes the cat.\nEats(Lion, Cow) ::: The lion eats the cow.\n∀x (Rough(x) → Likes(x, Lion)) ::: If someone is rough then they like the lion.\n∀x ((Eats(x, Lion) ∧ ¬Cold(x)) → ¬Round(Lion)) ::: If someone eats the lion and they are not cold then the lion is not round.\n∀x (Likes(x, Lion) → ¬Sees(x, Lion)) ::: If someone likes the lion then they do not see the lion.\n∀x (Eats(Cow, Lion) → Rough(Cow)) ::: If the cow eats the lion then the cow is rough.\n∀x ((Likes(x, Lion) ∧ Rough(Lion)) → ¬Sees(x, Cat)) ::: If someone likes the lion and the lion is rough then the lion does not see the cat.\n∀x ((Round(x) ∧ ¬Sees(x, Lion)) → Likes(x, Cow)) ::: If someone is round and they do not see the lion then they like the cow.\n∀x (Eats(x, Cow) → Red(x)) ::: If someone eats the cow then they are red.\n∀x (Red(x) → ¬Likes(x, Cow)) ::: If someone is red and they do not like the cow then they do not eat the cow.\nConclusion:\nEats(Cow, Lion) ::: The cow eats the lion."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-507",
    "context": "Anne is not green. Anne is kind. Anne is nice. Anne is round. Charlie is big. Charlie is green. Charlie is nice. Gary is not big. Gary is not kind. Gary is nice. Gary is round. Harry is green. Harry is not nice. Harry is rough. Harry is round. All smart, rough people are kind. If someone is round and not nice then they are kind. All green, big people are kind. If someone is green and not big then they are not rough. Kind, nice people are rough. If someone is rough and nice then they are round. All rough people are round. If someone is green and round then they are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nNice(x) ::: x is nice.\nRound(x) ::: x is round.\nBig(x) ::: x is big.\nSmart(x) ::: x is smart.\nRough(x) ::: x is rough.\nPremises:\n¬Green(Anne) ::: Anne is not green.\nKind(Anne) ::: Anne is kind.\nNice(Anne) ::: Anne is nice.\nRound(Anne) ::: Anne is round.\nBig(Charlie) ::: Charlie is big.\nGreen(Charlie) ::: Charlie is green.\nNice(Charlie) ::: Charlie is nice.\n¬Big(Gary) ::: Gary is not big.\n¬Kind(Gary) ::: Gary is not kind.\nNice(Gary) ::: Gary is nice.\nRound(Gary) ::: Gary is round.\nGreen(Harry) ::: Harry is green.\n¬Nice(Harry) ::: Harry is not nice.\nRough(Harry) ::: Harry is rough.\nRound(Harry) ::: Harry is round.\n∀x ((Smart(x) ∧ Rough(x)) → Kind(x)) ::: All smart, rough people are kind.\n∀x ((Round(x) ∧ ¬Nice(x)) → Kind(x)) ::: If someone is round and not nice then they are kind.\n∀x ((Green(x) ∧ Big(x)) → Kind(x)) ::: All green, big people are kind.\n∀x ((Green(x) ∧ ¬Big(x)) → ¬Rough(x)) ::: If someone is green and not big then they are not rough.\n∀x ((Kind(x) ∧ Nice(x)) → Rough(x)) ::: Kind, nice people are rough.\n∀x ((Rough(x) ∧ Nice(x)) → Round(x)) ::: If someone is rough and nice then they are round.\n∀x (Rough(x) → Round(x)) ::: All rough people are round.\n∀x ((Green(x) ∧ Round(x)) → Smart(x)) ::: If someone is green and round then they are smart.\nConclusion:\n¬Rough(Harry) ::: Harry is not rough."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-921",
    "context": "The bald eagle eats the bear. The bald eagle is rough. The bald eagle is young. The bald eagle likes the bear. The bald eagle likes the mouse. The bald eagle sees the bear. The bald eagle sees the mouse. The bear is rough. The bear sees the bald eagle. The mouse eats the bald eagle. If someone eats the mouse then they see the mouse. If someone likes the bald eagle then the bald eagle is green. If someone sees the bald eagle and they eat the bear then they like the bear. If someone eats the bald eagle then they like the bald eagle. If the bear eats the bald eagle and the bald eagle likes the bear then the bear sees the mouse. If someone sees the bear then the bear likes the bald eagle. If the bear sees the bald eagle and the bald eagle eats the bear then the bald eagle sees the bear. If someone is green then they eat the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not see the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nLikes(x, y) ::: x likes y.\nSees(x, y) ::: x sees y.\nGreen(x) ::: x is green.\nPremises:\nEats(bald eagle, bear) ::: The bald eagle eats the bear.\nRough(bald eagle) ::: The bald eagle is rough.\nYoung(bald eagle) ::: The bald eagle is young.\nLikes(bald eagle, bear) ::: The bald eagle likes the bear.\nLikes(bald eagle, mouse) ::: The bald eagle likes the mouse.\nSees(bald eagle, bear) ::: The bald eagle sees the bear.\nSees(bald eagle, mouse) ::: The bald eagle sees the mouse.\nRough(bear) ::: The bear is rough.\nSees(bear, bald eagle) ::: The bear sees the bald eagle.\nEats(mouse, bald eagle) ::: The mouse eats the bald eagle.\n∀x (Eats(x, mouse) → Sees(x, mouse)) ::: If someone eats the mouse then they see the mouse.\n∀x (Likes(x, bald eagle) → Green(bald eagle)) ::: If someone likes the bald eagle then the bald eagle is green.\n∀x ((Sees(x, bald eagle) ∧ Eats(x, bear)) → Likes(x, bear)) ::: If someone sees the bald eagle and they eat the bear then they like the bear.\n∀x (Eats(x, bald eagle) → Likes(x, bald eagle)) ::: If someone eats the bald eagle then they like the bald eagle.\n∀x ((Eats(bear, bald eagle) ∧ Likes(bald eagle, bear)) → Sees(bear, mouse)) ::: If the bear eats the bald eagle and the bald eagle likes the bear then the bear sees the mouse.\n∀x (Sees(x, bear) → Likes(bear, bald eagle)) ::: If someone sees the bear then the bear likes the bald eagle.\n∀x ((Sees(bear, bald eagle) ∧ Eats(bald eagle, bear)) → Sees(bald eagle, bear)) ::: If the bear sees the bald eagle and the bald eagle eats the bear then the bald eagle sees the bear.\n∀x (Green(x) → Eats(x, mouse)) ::: If someone is green then they eat the mouse.\nConclusion:\n¬Sees(bear, mouse) ::: The bear does not see the mouse."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-111",
    "context": "Erin is blue. Erin is green. Erin is quiet. All green, rough things are round. All quiet, kind things are round. If Erin is blue then Erin is kind. If something is green then it is blue. If Erin is round then Erin is cold. Blue, green things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nGreen(x) ::: x is green.\nQuiet(x) ::: x is quiet.\nRound(x) ::: x is round.\nRough(x) ::: x is rough.\nKind(x) ::: x is kind.\nCold(x) ::: x is cold.\nPremises:\nBlue(Erin) ::: Erin is blue.\nGreen(Erin) ::: Erin is green.\nQuiet(Erin) ::: Erin is quiet.\n∀x ((Green(x) ∧ Rough(x)) → Round(x)) ::: All green, rough things are round.\n∀x ((Quiet(x) ∧ Kind(x)) → Round(x)) ::: All quiet, kind things are round.\n∀x (Blue(Erin) → Kind(Erin)) ::: If Erin is blue then Erin is kind.\n∀x (Green(x) → Blue(x)) ::: If something is green then it is blue.\n∀x (Round(x) → Cold(x)) ::: If Erin is round then Erin is cold.\nQuiet(Blue, Green) ::: Blue, green things are quiet.\nConclusion:\nBlue(Erin) ::: Erin is blue."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1162",
    "context": "Anne is blue. Anne is green. Anne is quiet. Bob is blue. Bob is green. Bob is kind. Bob is red. Gary is cold. Gary is red. Harry is blue. Harry is cold. Harry is green. Harry is quiet. Harry is red. Harry is young. If Gary is red then Gary is kind. All quiet things are young. All blue, quiet things are kind. Young, green things are cold. All red, kind things are green. All red things are cold. All red, green things are blue. Quiet things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nGreen(x) ::: x is green.\nQuiet(x) ::: x is quiet.\nKind(x) ::: x is kind.\nRed(x) ::: x is red.\nCold(x) ::: x is cold.\nYoung(x) ::: x is young.\nPremises:\nBlue(Anne) ::: Anne is blue.\nGreen(Anne) ::: Anne is green.\nQuiet(Anne) ::: Anne is quiet.\nBlue(Bob) ::: Bob is blue.\nGreen(Bob) ::: Bob is green.\nKind(Bob) ::: Bob is kind.\nRed(Bob) ::: Bob is red.\nCold(Gary) ::: Gary is cold.\nRed(Gary) ::: Gary is red.\nBlue(Harry) ::: Harry is blue.\nCold(Harry) ::: Harry is cold.\nGreen(Harry) ::: Harry is green.\nQuiet(Harry) ::: Harry is quiet.\nRed(Harry) ::: Harry is red.\nYoung(Harry) ::: Harry is young.\n∀x ((Red(x) → Kind(x))) ::: If Gary is red then Gary is kind.\n∀x ((Quiet(x) → Young(x))) ::: All quiet things are young.\n∀x ((Blue(x) ∧ Quiet(x)) → Kind(x)) ::: All blue, quiet things are kind.\n∀x ((Young(x) ∧ Green(x)) → Cold(x)) ::: Young, green things are cold.\n∀x ((Red(x) ∧ Kind(x)) → Green(x)) ::: All red, kind things are green.\n∀x (Red(x) → Cold(x)) ::: All red things are cold.\n∀x ((Red(x) ∧ Green(x)) → Blue(x)) ::: All red, green things are blue.\n∀x (Quiet(x) → Kind(x)) ::: Quiet things are kind.\nConclusion:\n¬Red(Bob) ::: Bob is not red."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-400",
    "context": "Charlie is big. Fiona is red. Gary is cold. Harry is white. White people are cold. All cold people are smart. White, red people are smart. If someone is cold and not smart then they are blue. All quiet, blue people are big. All smart people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nRed(x) ::: x is red.\nCold(x) ::: x is cold.\nWhite(x) ::: x is white.\nSmart(x) ::: x is smart.\nBlue(x) ::: x is blue.\nQuiet(x) ::: x is quiet.\nPremises:\nBig(Charlie) ::: Charlie is big.\nRed(Fiona) ::: Fiona is red.\nCold(Gary) ::: Gary is cold.\nWhite(Harry) ::: Harry is white.\n∀x (White(x) → Cold(x)) ::: White people are cold.\n∀x (Cold(x) → Smart(x)) ::: All cold people are smart.\n∀x ((White(x) ∧ Red(x)) → Smart(x)) ::: White, red people are smart.\n∀x ((Cold(x) ∧ ¬Smart(x)) → Blue(x)) ::: If someone is cold and not smart then they are blue.\n∀x ((Quiet(x) ∧ Blue(x)) → Big(x)) ::: All quiet, blue people are big.\n∀x (Smart(x) → Big(x)) ::: All smart people are big.\nConclusion:\n¬Cold(Fiona) ::: Fiona is not cold."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1534",
    "context": "Anne is nice. Bob is cold. Bob is green. Bob is not quiet. Harry is cold. Harry is not quiet. Harry is round. All nice things are quiet. If Anne is rough then Anne is round. If something is quiet then it is furry. If Bob is green then Bob is round. If something is furry then it is green. If something is round and not quiet then it is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice(x) ::: x is nice.\nCold(x) ::: x is cold.\nGreen(x) ::: x is green.\nQuiet(x) ::: x is quiet.\nRound(x) ::: x is round.\nFurry(x) ::: x is furry.\nRough(x) ::: x is rough.\nPremises:\nNice(Anne) ::: Anne is nice.\nCold(Bob) ::: Bob is cold.\nGreen(Bob) ::: Bob is green.\n¬Quiet(Bob) ::: Bob is not quiet.\nCold(Harry) ::: Harry is cold.\n¬Quiet(Harry) ::: Harry is not quiet.\nRound(Harry) ::: Harry is round.\n∀x (Nice(x) → Quiet(x)) ::: All nice things are quiet.\n∀x (Rough(x) → Round(x)) ::: If Anne is rough then Anne is round.\n∀x (Quiet(x) → Furry(x)) ::: If something is quiet then it is furry.\n∀x (Green(x) → Round(x)) ::: If Bob is green then Bob is round.\n∀x (Furry(x) → Green(x)) ::: If something is furry then it is green.\n∀x ((Round(x) ∧ ¬Quiet(x)) → Green(x)) ::: If something is round and not quiet then it is green.\nConclusion:\nRound(Harry) ::: Harry is round."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-644",
    "context": "The dog is round. The dog likes the lion. The lion chases the dog. The lion eats the dog. The lion is big. The lion is red. The lion likes the dog. If the dog is cold then the dog eats the lion. If someone is cold and they eat the lion then they like the dog. If the dog likes the lion and the lion eats the dog then the dog chases the lion. If someone is round then they chase the lion. If the lion likes the dog and the dog likes the lion then the lion is big. If the dog eats the lion and the lion eats the dog then the lion is green. If someone chases the dog and they are big then the dog is cold. If someone likes the lion and they chase the lion then they chase the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not like the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound(x) ::: x is round.\nLikes(x, y) ::: x likes y.\nChases(x, y) ::: x chases y.\nEats(x, y) ::: x eats y.\nBig(x) ::: x is big.\nRed(x) ::: x is red.\nCold(x) ::: x is cold.\nGreen(x) ::: x is green.\nPremises:\nRound(Dog) ::: The dog is round.\nLikes(Dog, Lion) ::: The dog likes the lion.\nChases(Lion, Dog) ::: The lion chases the dog.\nEats(Lion, Dog) ::: The lion eats the dog.\nBig(Lion) ::: The lion is big.\nRed(Lion) ::: The lion is red.\nLikes(Lion, Dog) ::: The lion likes the dog.\n∀x ((Cold(x) → Eats(x, Lion)) ::: If the dog is cold then the dog eats the lion.\n∀x ((Cold(x) ∧ Eats(x, Lion)) → Likes(x, Dog)) ::: If someone is cold and they eat the lion then they like the dog.\n∀x ((Likes(x, Lion) ∧ Eats(Lion, x)) → Chases(x, Lion)) ::: If the dog likes the lion and the lion eats the dog then the dog chases the lion.\n∀x (Round(x) → Chases(x, Lion)) ::: If someone is round then they chase the lion.\n∀x ((Likes(Lion, x) ∧ Likes(x, Lion)) → Big(Lion)) ::: If the lion likes the dog and the dog likes the lion then the lion is big.\n∀x ((Eats(x, Lion) ∧ Eats(Lion, x)) → Green(Lion)) ::: If the dog eats the lion and the lion eats the dog then the lion is green.\n∀x ((Chases(x, Dog) ∧ Big(x)) → Cold(Dog)) ::: If someone chases the dog and they are big then the dog is cold.\n∀x ((Likes(x, Lion) ∧ Chases(x, Lion)) → Chases(x, Dog)) ::: If someone likes the lion and they chase the lion then they chase the dog.\nConclusion:\n¬Likes(Dog, Lion) ::: The dog does not like the lion."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1463",
    "context": "Harry is furry. Harry is kind. Harry is nice. If Harry is furry and Harry is nice then Harry is kind. Quiet, green things are furry. If Harry is green and Harry is kind then Harry is not furry. If something is smart then it is quiet. All furry things are nice. If something is kind then it is smart. If something is quiet and furry then it is young. All young things are kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not young.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry(x) ::: x is furry.\nKind(x) ::: x is kind.\nNice(x) ::: x is nice.\nQuiet(x) ::: x is quiet.\nGreen(x) ::: x is green.\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nPremises:\nFurry(Harry) ::: Harry is furry.\nKind(Harry) ::: Harry is kind.\nNice(Harry) ::: Harry is nice.\n∀x ((Furry(x) ∧ Nice(x)) → Kind(x)) ::: If someone is furry and nice then they are kind.\n∀x ((Quiet(x) ∧ Green(x)) → Furry(x)) ::: Quiet, green things are furry.\n∀x ((Green(x) ∧ Kind(x)) → ¬Furry(x)) ::: If someone is green and kind then they are not furry.\n∀x (Smart(x) → Quiet(x)) ::: If something is smart then it is quiet.\n∀x (Furry(x) → Nice(x)) ::: All furry things are nice.\n∀x (Kind(x) → Smart(x)) ::: If something is kind then it is smart.\n∀x ((Quiet(x) ∧ Furry(x)) → Young(x)) ::: If something is quiet and furry then it is young.\n∀x (Young(x) → Kind(x)) ::: All young things are kind.\nConclusion:\n¬Young(Harry) ::: Harry is not young."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1527",
    "context": "The bald eagle chases the rabbit. The rabbit is blue. The rabbit visits the bald eagle. If something is kind then it is green. If something eats the bald eagle then it is nice. If the bald eagle is kind then the bald eagle visits the rabbit. If something eats the rabbit then the rabbit is kind. If something is blue then it eats the rabbit. If something visits the bald eagle then the bald eagle eats the rabbit. If something chases the rabbit and it eats the bald eagle then the rabbit chases the bald eagle. If something chases the rabbit then the rabbit chases the bald eagle.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit visits the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nBlue(x) ::: x is blue.\nVisits(x, y) ::: x visits y.\nKind(x) ::: x is kind.\nGreen(x) ::: x is green.\nEats(x, y) ::: x eats y.\nNice(x) ::: x is nice.\nPremises:\nChases(bald eagle, rabbit) ::: The bald eagle chases the rabbit.\nBlue(rabbit) ::: The rabbit is blue.\nVisits(rabbit, bald eagle) ::: The rabbit visits the bald eagle.\n∀x (Kind(x) → Green(x)) ::: If something is kind then it is green.\n∀x (Eats(x, bald eagle) → Nice(x)) ::: If something eats the bald eagle then it is nice.\n∀x (Kind(bald eagle) → Visits(bald eagle, rabbit)) ::: If the bald eagle is kind then the bald eagle visits the rabbit.\n∀x (Eats(x, rabbit) → Kind(rabbit)) ::: If something eats the rabbit then the rabbit is kind.\n∀x (Blue(x) → Eats(x, rabbit)) ::: If something is blue then it eats the rabbit.\n∀x (Visits(x, bald eagle) → Eats(bald eagle, rabbit)) ::: If something visits the bald eagle then the bald eagle eats the rabbit.\n∀x ((Chases(x, rabbit) ∧ Eats(x, bald eagle)) → Chases(rabbit, bald eagle)) ::: If something chases the rabbit and it eats the bald eagle then the rabbit chases the bald eagle.\n∀x (Chases(rabbit, bald eagle) → Chases(rabbit, bald eagle)) ::: If something chases the rabbit then the rabbit chases the bald eagle.\nConclusion:\nVisits(rabbit, bald eagle) ::: The rabbit visits the bald eagle."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-942",
    "context": "The bald eagle does not eat the lion. The bald eagle does not eat the mouse. The bald eagle is blue. The bald eagle is kind. The bald eagle is rough. The bald eagle visits the lion. The bald eagle visits the mouse. The cat eats the bald eagle. The cat likes the lion. The cat does not visit the bald eagle. The cat visits the mouse. The lion visits the bald eagle. The mouse does not eat the lion. The mouse is big. The mouse likes the cat. The mouse visits the lion. If something visits the cat and the cat visits the lion then the lion eats the mouse. If the cat eats the lion then the cat does not like the lion. If something visits the lion then it visits the mouse. If the bald eagle eats the cat and the cat visits the mouse then the mouse is red. Red things are blue. If something visits the bald eagle then the bald eagle eats the cat. If something is kind and it likes the lion then it eats the mouse. If something eats the bald eagle and it does not visit the mouse then the mouse likes the lion.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not like the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nBlue(x) ::: x is blue.\nKind(x) ::: x is kind.\nRough(x) ::: x is rough.\nVisits(x, y) ::: x visits y.\nLikes(x, y) ::: x likes y.\nBig(x) ::: x is big.\nRed(x) ::: x is red.\nCat(x) ::: x is a cat.\nLion(x) ::: x is a lion.\nMouse(x) ::: x is a mouse.\nBaldEagle(x) ::: x is a bald eagle.\nPremises:\n¬Eats(BaldEagle, Lion) ::: The bald eagle does not eat the lion.\n¬Eats(BaldEagle, Mouse) ::: The bald eagle does not eat the mouse.\nBlue(BaldEagle) ::: The bald eagle is blue.\nKind(BaldEagle) ::: The bald eagle is kind.\nRough(BaldEagle) ::: The bald eagle is rough.\nVisits(BaldEagle, Lion) ::: The bald eagle visits the lion.\nVisits(BaldEagle, Mouse) ::: The bald eagle visits the mouse.\nEats(Cat, BaldEagle) ::: The cat eats the bald eagle.\nLikes(Cat, Lion) ::: The cat likes the lion.\n¬Visits(Cat, BaldEagle) ::: The cat does not visit the bald eagle.\nVisits(Cat, Mouse) ::: The cat visits the mouse.\nVisits(Lion, BaldEagle) ::: The lion visits the bald eagle.\n¬Eats(Mouse, Lion) ::: The mouse does not eat the lion.\nBig(Mouse) ::: The mouse is big.\nLikes(Mouse, Cat) ::: The mouse likes the cat.\nVisits(Mouse, Lion) ::: The mouse visits the lion.\n∀x ((Visits(x, Cat) ∧ Visits(Cat, Lion)) → Eats(Lion, Mouse)) ::: If something visits the cat and the cat visits the lion then the lion eats the mouse.\n∀x (Eats(Cat, Lion) → ¬Likes(Cat, Lion)) ::: If the cat eats the lion then the cat does not like the lion.\n∀x (Visits(x, Lion) → Visits(x, Mouse)) ::: If something visits the lion then it visits the mouse.\n∀x ((Eats(BaldEagle, Cat) ∧ Visits(Cat, Mouse)) → Red(Mouse)) ::: If the bald eagle eats the cat and the cat visits the mouse then the mouse is red.\n∀x (Red(x) → Blue(x)) ::: Red things are blue.\n∀x (Visits(x, BaldEagle) → Eats(BaldEagle, Cat)) ::: If something visits the bald eagle then the bald eagle eats the cat.\n∀x ((Kind(x) ∧ Likes(x, Lion)) → Eats(Mouse, Lion)) ::: If something is kind and it likes the lion then it eats the mouse.\n∀x ((Eats(x, BaldEagle) ∧ ¬Visits(x, Mouse)) → Likes(Mouse, Lion)) ::: If something eats the bald eagle and it does not visit the mouse then the mouse likes the lion.\nConclusion:\n¬Likes(Mouse, Cat) ::: The mouse does not like the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-300",
    "context": "Anne is big. Anne is not smart. Bob is not big. Bob is round. Bob is not smart. Bob is young. Dave is not smart. Harry is big. Harry is not quiet. Harry is round. Harry is smart. Harry is white. If Dave is big and Dave is kind then Dave is white. If someone is big and white then they are young. If someone is white and big then they are young. All big people are round. Round, smart people are white. All round people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not young.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nSmart(x) ::: x is smart.\nRound(x) ::: x is round.\nYoung(x) ::: x is young.\nKind(x) ::: x is kind.\nWhite(x) ::: x is white.\nPremises:\nBig(Anne) ::: Anne is big.\n¬Smart(Anne) ::: Anne is not smart.\n¬Big(Bob) ::: Bob is not big.\nRound(Bob) ::: Bob is round.\n¬Smart(Bob) ::: Bob is not smart.\nYoung(Bob) ::: Bob is young.\n¬Smart(Dave) ::: Dave is not smart.\nBig(Harry) ::: Harry is big.\n¬Quiet(Harry) ::: Harry is not quiet.\nRound(Harry) ::: Harry is round.\nSmart(Harry) ::: Harry is smart.\nWhite(Harry) ::: Harry is white.\n∀x ((Big(x) ∧ Kind(x)) → White(x)) ::: If Dave is big and Dave is kind then Dave is white.\n∀x ((Big(x) ∧ White(x)) → Young(x)) ::: If someone is big and white then they are young.\n∀x ((White(x) ∧ Big(x)) → Young(x)) ::: If someone is white and big then they are young.\n∀x (Big(x) → Round(x)) ::: All big people are round.\n∀x ((Round(x) ∧ Smart(x)) → White(x)) ::: Round, smart people are white.\n∀x (Round(x) → White(x)) ::: All round people are white.\nConclusion:\n¬Young(Dave) ::: Dave is not young."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1386",
    "context": "The bear needs the lion. The bear visits the lion. The lion visits the bear. If someone needs the bear and they visit the lion then the lion needs the bear. If someone needs the bear and they visit the bear then they are round. If someone visits the lion and they visit the bear then the lion needs the bear. If someone is big then they see the lion. If someone visits the bear then they visit the lion. If someone sees the lion then they need the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion visits the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\nRound(x) ::: x is round.\nBig(x) ::: x is big.\nSees(x, y) ::: x sees y.\n\nPremises:\nNeeds(bear, lion) ::: The bear needs the lion.\nVisits(bear, lion) ::: The bear visits the lion.\nVisits(lion, bear) ::: The lion visits the bear.\n∀x ((Needs(x, bear) ∧ Visits(x, lion)) → Needs(lion, bear)) ::: If someone needs the bear and they visit the lion then the lion needs the bear.\n∀x ((Needs(x, bear) ∧ Visits(x, bear)) → Round(x)) ::: If someone needs the bear and they visit the bear then they are round.\n∀x ((Visits(x, lion) ∧ Visits(x, bear)) → Needs(lion, bear)) ::: If someone visits the lion and they visit the bear then the lion needs the bear.\n∀x (Big(x) → Sees(x, lion)) ::: If someone is big then they see the lion.\n∀x (Visits(x, bear) → Visits(x, lion)) ::: If someone visits the bear then they visit the lion.\n∀x (Sees(x, lion) → Needs(x, bear)) ::: If someone sees the lion then they need the bear.\n\nConclusion:\nVisits(lion, bear) ::: The lion visits the bear."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-196",
    "context": "The cow is not rough. Rough people are not young. If the cow is blue then the cow is rough. All kind people are green. Young, blue people are not kind. Rough, green people are kind. If the cow is young then the cow is kind. If the cow is kind then the cow is young. If the cow is not rough then the cow is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nBlue(x) ::: x is blue.\nKind(x) ::: x is kind.\nGreen(x) ::: x is green.\nCow(x) ::: x is a cow.\nPremises:\n¬Rough(Cow) ::: The cow is not rough.\n∀x (Rough(x) → ¬Young(x)) ::: Rough people are not young.\n∀x ((Cow(x) ∧ Blue(x)) → Rough(x)) ::: If the cow is blue then the cow is rough.\n∀x (Kind(x) → Green(x)) ::: All kind people are green.\n∀x ((Young(x) ∧ Blue(x)) → ¬Kind(x)) ::: Young, blue people are not kind.\n∀x ((Rough(x) ∧ Green(x)) → Kind(x)) ::: Rough, green people are kind.\n∀x (Young(Cow) → Kind(Cow)) ::: If the cow is young then the cow is kind.\n∀x (Kind(Cow) → Young(Cow)) ::: If the cow is kind then the cow is young.\n∀x (¬Rough(Cow) → Young(Cow)) ::: If the cow is not rough then the cow is young.\nConclusion:\nRough(Cow) ::: The cow is rough."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1121",
    "context": "Anne is cold. Anne is round. Anne is not smart. Gary is not big. Gary is blue. Gary is nice. Harry is round. Quiet people are big. If Anne is nice then Anne is not big. If someone is nice and not blue then they are smart. Nice, quiet people are smart. All cold, blue people are smart. If someone is round then they are cold. If someone is big then they are round. If someone is blue and not big then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nRound(x) ::: x is round.\nSmart(x) ::: x is smart.\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nNice(x) ::: x is nice.\nQuiet(x) ::: x is quiet.\nPremises:\nCold(Anne) ::: Anne is cold.\nRound(Anne) ::: Anne is round.\n¬Smart(Anne) ::: Anne is not smart.\n¬Big(Gary) ::: Gary is not big.\nBlue(Gary) ::: Gary is blue.\nNice(Gary) ::: Gary is nice.\nRound(Harry) ::: Harry is round.\n∀x (Quiet(x) → Big(x)) ::: Quiet people are big.\n∀x ((Nice(x) → ¬Big(x))) ::: If someone is nice then they are not big.\n∀x ((Nice(x) ∧ ¬Blue(x)) → Smart(x)) ::: If someone is nice and not blue then they are smart.\n∀x ((Nice(x) ∧ Quiet(x)) → Smart(x)) ::: Nice, quiet people are smart.\n∀x ((Cold(x) ∧ Blue(x)) → Smart(x)) ::: All cold, blue people are smart.\n∀x (Round(x) → Cold(x)) ::: If someone is round then they are cold.\n∀x (Big(x) → Round(x)) ::: If someone is big then they are round.\n∀x ((Blue(x) ∧ ¬Big(x)) → Round(x)) ::: If someone is blue and not big then they are round.\nConclusion:\n¬Big(Anne) ::: Anne is not big."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1276",
    "context": "Erin is blue. Erin is kind. Erin is young. Blue people are quiet. All nice, blue people are kind. All nice, big people are green. Kind people are blue. If Erin is quiet and Erin is young then Erin is nice. Young people are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nKind(x) ::: x is kind.\nYoung(x) ::: x is young.\nQuiet(x) ::: x is quiet.\nNice(x) ::: x is nice.\nBig(x) ::: x is big.\nGreen(x) ::: x is green.\nPremises:\nBlue(Erin) ::: Erin is blue.\nKind(Erin) ::: Erin is kind.\nYoung(Erin) ::: Erin is young.\n∀x ((Blue(x) ∧ Nice(x)) → Kind(x)) ::: All nice, blue people are kind.\n∀x ((Nice(x) ∧ Big(x)) → Green(x)) ::: All nice, big people are green.\n∀x (Kind(x) → Blue(x)) ::: Kind people are blue.\n∀x ((Quiet(x) ∧ Young(x)) → Nice(x)) ::: If Erin is quiet and Erin is young then Erin is nice.\n∀x (Young(x) → Big(x)) ::: Young people are big.\nConclusion:\nBlue(Erin) ::: Erin is blue."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1626",
    "context": "Charlie is furry. Charlie is kind. Charlie is quiet. Dave is kind. Fiona is furry. Fiona is kind. Fiona is young. If Charlie is not young then Charlie is quiet. If someone is kind then they are big. If Dave is blue and Dave is big then Dave is round. Round people are furry. Big people are round. If someone is big and not quiet then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not furry.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry(x) ::: x is furry.\nKind(x) ::: x is kind.\nQuiet(x) ::: x is quiet.\nYoung(x) ::: x is young.\nBlue(x) ::: x is blue.\nBig(x) ::: x is big.\nRound(x) ::: x is round.\nPremises:\nFurry(Charlie) ::: Charlie is furry.\nKind(Charlie) ::: Charlie is kind.\nQuiet(Charlie) ::: Charlie is quiet.\nKind(Dave) ::: Dave is kind.\nFurry(Fiona) ::: Fiona is furry.\nKind(Fiona) ::: Fiona is kind.\nYoung(Fiona) ::: Fiona is young.\n∀x (¬Young(Charlie) → Quiet(Charlie)) ::: If Charlie is not young then Charlie is quiet.\n∀x (Kind(x) → Big(x)) ::: If someone is kind then they are big.\n∀x ((Blue(Dave) ∧ Big(Dave)) → Round(Dave)) ::: If Dave is blue and Dave is big then Dave is round.\n∀x (Round(x) → Furry(x)) ::: Round people are furry.\n∀x (Big(x) → Round(x)) ::: Big people are round.\n∀x ((Big(x) ∧ ¬Quiet(x)) → Round(x)) ::: If someone is big and not quiet then they are round.\nConclusion:\n¬Furry(Fiona) ::: Fiona is not furry."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-517",
    "context": "The bear is young. The bear visits the cat. The cat visits the bear. If the bear is young then the bear eats the cat. If something chases the cat then it visits the bear. If something chases the cat then it visits the cat. If the cat visits the bear and the bear is red then the bear eats the cat. If something visits the cat and it visits the bear then the bear is blue. If something visits the bear then the bear chases the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not visit the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is young.\nVisits(x, y) ::: x visits y.\nEats(x, y) ::: x eats y.\nChases(x, y) ::: x chases y.\nRed(x) ::: x is red.\nBlue(x) ::: x is blue.\nBear(x) ::: x is a bear.\nCat(x) ::: x is a cat.\nPremises:\nYoung(Bear) ::: The bear is young.\nVisits(Bear, Cat) ::: The bear visits the cat.\nVisits(Cat, Bear) ::: The cat visits the bear.\n∀x ((Young(x) → Eats(x, Cat))) ::: If the bear is young then the bear eats the cat.\n∀x ((Chases(x, Cat) → Visits(x, Bear))) ::: If something chases the cat then it visits the bear.\n∀x ((Chases(x, Cat) → Visits(x, Cat))) ::: If something chases the cat then it visits the cat.\n∀x ((Visits(Cat, Bear) ∧ Red(Bear)) → Eats(Bear, Cat)) ::: If the cat visits the bear and the bear is red then the bear eats the cat.\n∀x ((Visits(x, Cat) ∧ Visits(x, Bear)) → Blue(Bear)) ::: If something visits the cat and it visits the bear then the bear is blue.\n∀x (Visits(x, Bear) → Chases(Bear, Cat)) ::: If something visits the bear then the bear chases the cat.\nConclusion:\n¬Visits(Cat, Cat) ::: The cat does not visit the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-495",
    "context": "Bob is round. Dave is round. Fiona is white. Harry is cold. If something is young and furry then it is white. All red things are round. Round, cold things are rough. If something is furry and cold then it is young. If something is rough then it is red. All rough things are white. Cold things are round. Young, white things are rough.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound(x) ::: x is round.\nWhite(x) ::: x is white.\nCold(x) ::: x is cold.\nYoung(x) ::: x is young.\nFurry(x) ::: x is furry.\nRough(x) ::: x is rough.\nRed(x) ::: x is red.\nPremises:\nRound(Bob) ::: Bob is round.\nRound(Dave) ::: Dave is round.\nWhite(Fiona) ::: Fiona is white.\nCold(Harry) ::: Harry is cold.\n∀x ((Young(x) ∧ Furry(x)) → White(x)) ::: If something is young and furry then it is white.\n∀x (Red(x) → Round(x)) ::: All red things are round.\n∀x ((Round(x) ∧ Cold(x)) → Rough(x)) ::: Round, cold things are rough.\n∀x ((Furry(x) ∧ Cold(x)) → Young(x)) ::: If something is furry and cold then it is young.\n∀x (Rough(x) → Red(x)) ::: If something is rough then it is red.\n∀x (Rough(x) → White(x)) ::: All rough things are white.\n∀x (Cold(x) → Round(x)) ::: Cold things are round.\n∀x ((Young(x) ∧ White(x)) → Rough(x)) ::: Young, white things are rough.\nConclusion:\nWhite(Fiona) ::: Fiona is white."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-300",
    "context": "Anne is blue. Anne is cold. Anne is smart. Anne is young. Dave is cold. Dave is red. Dave is smart. Dave is young. Gary is red. Gary is round. Gary is white. Gary is young. Harry is red. Harry is round. Harry is white. Young, round things are white. White things are young. Smart, blue things are round. All white things are cold. Smart, white things are blue. If Dave is smart then Dave is red. If something is smart then it is white. If something is blue and young then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nCold(x) ::: x is cold.\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nWhite(x) ::: x is white.\nPremises:\nBlue(Anne) ::: Anne is blue.\nCold(Anne) ::: Anne is cold.\nSmart(Anne) ::: Anne is smart.\nYoung(Anne) ::: Anne is young.\nCold(Dave) ::: Dave is cold.\nRed(Dave) ::: Dave is red.\nSmart(Dave) ::: Dave is smart.\nYoung(Dave) ::: Dave is young.\nRed(Gary) ::: Gary is red.\nRound(Gary) ::: Gary is round.\nWhite(Gary) ::: Gary is white.\nYoung(Gary) ::: Gary is young.\nRed(Harry) ::: Harry is red.\nRound(Harry) ::: Harry is round.\nWhite(Harry) ::: Harry is white.\n∀x ((Young(x) ∧ Round(x)) → White(x)) ::: Young, round things are white.\n∀x (White(x) → Young(x)) ::: White things are young.\n∀x ((Smart(x) ∧ Blue(x)) → Round(x)) ::: Smart, blue things are round.\n∀x (White(x) → Cold(x)) ::: All white things are cold.\n∀x ((Smart(x) ∧ White(x)) → Blue(x)) ::: Smart, white things are blue.\n∀x ((Blue(x) ∧ Young(x)) → Cold(x)) ::: If something is blue and young then it is cold.\n∀x ((Smart(Dave)) → Red(Dave)) ::: If Dave is smart then Dave is red.\n∀x ((Smart(x)) → White(x)) ::: If something is smart then it is white.\nConclusion:\n¬Round(Harry) ::: Harry is not round."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-658",
    "context": "Bob is big. If Bob is big then Bob is red. Red people are blue. If Bob is young then Bob is big. If someone is quiet then they are nice. If Bob is red and Bob is blue then Bob is quiet. If Bob is nice and Bob is not big then Bob is blue. If someone is red then they are green. Nice people are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nRed(x) ::: x is red.\nBlue(x) ::: x is blue.\nYoung(x) ::: x is young.\nQuiet(x) ::: x is quiet.\nNice(x) ::: x is nice.\nGreen(x) ::: x is green.\nPremises:\nBig(Bob) ::: Bob is big.\n∀x (Big(x) → Red(x)) ::: If x is big then x is red.\n∀x (Red(x) → Blue(x)) ::: Red people are blue.\n∀x (Young(x) → Big(x)) ::: If x is young then x is big.\n∀x (Quiet(x) → Nice(x)) ::: If x is quiet then x is nice.\n∀x ((Red(x) ∧ Blue(x)) → Quiet(x)) ::: If x is red and x is blue then x is quiet.\n∀x ((Nice(x) ∧ ¬Big(x)) → Blue(x)) ::: If x is nice and x is not big then x is blue.\n∀x (Red(x) → Green(x)) ::: If x is red then x is green.\n∀x (Nice(x) → Green(x)) ::: Nice people are green.\nConclusion:\n¬Quiet(Bob) ::: Bob is not quiet."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-477",
    "context": "The bald eagle is young. The bald eagle sees the dog. The bear eats the mouse. The bear is young. The dog eats the bear. The mouse eats the bear. The mouse needs the bald eagle. If something is cold then it eats the bald eagle. If something is nice then it needs the bear. If something eats the bald eagle then it needs the mouse. If something eats the mouse then the mouse is nice. If something needs the bald eagle and it needs the bear then the bald eagle needs the bear. If something eats the dog and the dog is big then it eats the bear.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bald eagle is young.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nYoung(x) ::: x is young.\nSees(x, y) ::: x sees y.\nEats(x, y) ::: x eats y.\nNeeds(x, y) ::: x needs y.\nCold(x) ::: x is cold.\nNice(x) ::: x is nice.\nBig(x) ::: x is big.\nPremises:\nYoung(bald eagle) ::: The bald eagle is young.\nSees(bald eagle, dog) ::: The bald eagle sees the dog.\nEats(bear, mouse) ::: The bear eats the mouse.\nYoung(bear) ::: The bear is young.\nEats(dog, bear) ::: The dog eats the bear.\nEats(mouse, bear) ::: The mouse eats the bear.\nNeeds(mouse, bald eagle) ::: The mouse needs the bald eagle.\n∀x (Cold(x) → Eats(x, bald eagle)) ::: If something is cold then it eats the bald eagle.\n∀x (Nice(x) → Needs(x, bear)) ::: If something is nice then it needs the bear.\n∀x (Eats(x, bald eagle) → Needs(x, mouse)) ::: If something eats the bald eagle then it needs the mouse.\n∀x (Eats(x, mouse) → Nice(mouse)) ::: If something eats the mouse then the mouse is nice.\n∀x ((Needs(x, bald eagle) ∧ Needs(x, bear)) → Needs(bald eagle, bear)) ::: If something needs the bald eagle and it needs the bear then the bald eagle needs the bear.\n∀x ((Eats(x, dog) ∧ Big(dog)) → Eats(x, bear)) ::: If something eats the dog and the dog is big then it eats the bear.\nConclusion:\nYoung(bald eagle) ::: The bald eagle is young."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1380",
    "context": "The bald eagle eats the squirrel. The bald eagle is round. The bald eagle sees the cat. The bald eagle sees the squirrel. The bald eagle does not visit the cat. The cat visits the dog. The dog eats the cat. The dog does not eat the squirrel. The dog is green. The dog visits the bald eagle. The squirrel is cold. The squirrel sees the bald eagle. If something sees the bald eagle and the bald eagle is round then the bald eagle eats the dog. If something sees the cat and the cat eats the bald eagle then the bald eagle eats the dog. If something is blue then it visits the squirrel. If the cat eats the dog then the cat does not see the dog. If something eats the squirrel then it eats the bald eagle. If something is round and it eats the dog then the dog is blue. If the squirrel is not big then the squirrel eats the bald eagle. If something visits the bald eagle then the bald eagle does not see the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not visit the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nRound(x) ::: x is round.\nSees(x, y) ::: x sees y.\nVisits(x, y) ::: x visits y.\nBlue(x) ::: x is blue.\nGreen(x) ::: x is green.\nCold(x) ::: x is cold.\nBig(x) ::: x is big.\nPremises:\nEats(bald eagle, squirrel) ::: The bald eagle eats the squirrel.\nRound(bald eagle) ::: The bald eagle is round.\nSees(bald eagle, cat) ::: The bald eagle sees the cat.\nSees(bald eagle, squirrel) ::: The bald eagle sees the squirrel.\n¬Visits(bald eagle, cat) ::: The bald eagle does not visit the cat.\nVisits(cat, dog) ::: The cat visits the dog.\nEats(dog, cat) ::: The dog eats the cat.\n¬Eats(dog, squirrel) ::: The dog does not eat the squirrel.\nGreen(dog) ::: The dog is green.\nVisits(dog, bald eagle) ::: The dog visits the bald eagle.\nCold(squirrel) ::: The squirrel is cold.\nSees(squirrel, bald eagle) ::: The squirrel sees the bald eagle.\n∀x ((Sees(x, bald eagle) ∧ Round(bald eagle)) → Eats(bald eagle, dog)) ::: If something sees the bald eagle and the bald eagle is round then the bald eagle eats the dog.\n∀x ((Sees(x, cat) ∧ Eats(cat, bald eagle)) → Eats(bald eagle, dog)) ::: If something sees the cat and the cat eats the bald eagle then the bald eagle eats the dog.\n∀x (Blue(x) → Visits(x, squirrel)) ::: If something is blue then it visits the squirrel.\n∀x (Eats(x, squirrel) → Eats(x, bald eagle)) ::: If something eats the squirrel then it eats the bald eagle.\n∀x ((Round(x) ∧ Eats(x, dog)) → Blue(dog)) ::: If something is round and it eats the dog then the dog is blue.\n∀x (¬Big(x) → Eats(x, bald eagle)) ::: If the squirrel is not big then the squirrel eats the bald eagle.\n∀x (Visits(x, bald eagle) → ¬Sees(bald eagle, dog)) ::: If something visits the bald eagle then the bald eagle does not see the dog.\nConclusion:\n¬Visits(cat, dog) ::: The cat does not visit the dog."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1675",
    "context": "Anne is big. Anne is cold. Anne is furry. Anne is red. Anne is young. Erin is big. Erin is cold. Erin is furry. Erin is kind. Erin is red. Erin is round. Erin is young. Fiona is cold. Fiona is furry. Fiona is kind. All red, kind things are big. All round, kind things are furry. Round things are kind. If something is red and kind then it is young. Young, red things are cold. All round things are kind. Young, cold things are red. If Fiona is cold and Fiona is furry then Fiona is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not kind.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nFurry(x) ::: x is furry.\nRed(x) ::: x is red.\nYoung(x) ::: x is young.\nKind(x) ::: x is kind.\nRound(x) ::: x is round.\nPremises:\nBig(Anne) ::: Anne is big.\nCold(Anne) ::: Anne is cold.\nFurry(Anne) ::: Anne is furry.\nRed(Anne) ::: Anne is red.\nYoung(Anne) ::: Anne is young.\nBig(Erin) ::: Erin is big.\nCold(Erin) ::: Erin is cold.\nFurry(Erin) ::: Erin is furry.\nKind(Erin) ::: Erin is kind.\nRed(Erin) ::: Erin is red.\nRound(Erin) ::: Erin is round.\nYoung(Erin) ::: Erin is young.\nCold(Fiona) ::: Fiona is cold.\nFurry(Fiona) ::: Fiona is furry.\nKind(Fiona) ::: Fiona is kind.\n∀x ((Red(x) ∧ Kind(x)) → Big(x)) ::: All red, kind things are big.\n∀x ((Round(x) ∧ Kind(x)) → Furry(x)) ::: All round, kind things are furry.\n∀x (Round(x) → Kind(x)) ::: Round things are kind.\n∀x ((Red(x) ∧ Kind(x)) → Young(x)) ::: If something is red and kind then it is young.\n∀x ((Young(x) ∧ Red(x)) → Cold(x)) ::: Young, red things are cold.\n∀x (Round(x) → Kind(x)) ::: All round things are kind.\n∀x ((Young(x) ∧ Cold(x)) → Red(x)) ::: Young, cold things are red.\n∀x ((Cold(x) ∧ Furry(x)) → Young(x)) ::: If Fiona is cold and Fiona is furry then Fiona is young.\nConclusion:\n¬Kind(Anne) ::: Anne is not kind."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1350",
    "context": "The dog chases the mouse. The dog is cold. The dog is kind. The dog is nice. The dog is red. The dog is rough. The dog needs the mouse. The dog sees the mouse. The mouse chases the dog. The mouse is cold. The mouse is kind. The mouse is nice. The mouse is red. The mouse is rough. The mouse needs the dog. The mouse sees the dog. If something chases the dog and it chases the mouse then it sees the mouse. If something sees the mouse then it needs the mouse. If something is red then it needs the dog. If something sees the dog then the dog is rough. If something is cold then it chases the mouse. If the dog sees the mouse and the mouse is kind then the dog needs the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse needs the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nCold(x) ::: x is cold.\nKind(x) ::: x is kind.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nRough(x) ::: x is rough.\nNeeds(x, y) ::: x needs y.\nSees(x, y) ::: x sees y.\nPremises:\nChases(Dog, Mouse) ::: The dog chases the mouse.\nCold(Dog) ::: The dog is cold.\nKind(Dog) ::: The dog is kind.\nNice(Dog) ::: The dog is nice.\nRed(Dog) ::: The dog is red.\nRough(Dog) ::: The dog is rough.\nNeeds(Dog, Mouse) ::: The dog needs the mouse.\nSees(Dog, Mouse) ::: The dog sees the mouse.\nChases(Mouse, Dog) ::: The mouse chases the dog.\nCold(Mouse) ::: The mouse is cold.\nKind(Mouse) ::: The mouse is kind.\nNice(Mouse) ::: The mouse is nice.\nRed(Mouse) ::: The mouse is red.\nRough(Mouse) ::: The mouse is rough.\nNeeds(Mouse, Dog) ::: The mouse needs the dog.\nSees(x, Mouse) ∧ Chases(x, Dog) → Sees(x, Mouse) ::: If something chases the dog and it chases the mouse then it sees the mouse.\nSees(x, Mouse) → Needs(x, Mouse) ::: If something sees the mouse then it needs the mouse.\nRed(x) → Needs(x, Dog) ::: If something is red then it needs the dog.\nSees(x, Dog) → Rough(Dog) ::: If something sees the dog then the dog is rough.\nCold(x) → Chases(x, Mouse) ::: If something is cold then it chases the mouse.\nSees(Dog, Mouse) ∧ Kind(Mouse) → Needs(Dog, Mouse) ::: If the dog sees the mouse and the mouse is kind then the dog needs the mouse.\nConclusion:\nNeeds(Mouse, Dog) ::: The mouse needs the dog."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1121",
    "context": "Harry is big. Harry is blue. Harry is white. If Harry is big and Harry is smart then Harry is furry. All white, blue things are nice. Nice things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not white.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nWhite(x) ::: x is white.\nSmart(x) ::: x is smart.\nFurry(x) ::: x is furry.\nNice(x) ::: x is nice.\nPremises:\nBig(Harry) ::: Harry is big.\nBlue(Harry) ::: Harry is blue.\nWhite(Harry) ::: Harry is white.\n∀x ((Big(x) ∧ Smart(x)) → Furry(x)) ::: If x is big and smart then x is furry.\n∀x ((White(x) ∧ Blue(x)) → Nice(x)) ::: All white, blue things are nice.\n∀x (Nice(x) → Smart(x)) ::: Nice things are smart.\nConclusion:\n¬White(Harry) ::: Harry is not white."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-176",
    "context": "Fiona is blue. Fiona is not rough. Fiona is young. If Fiona is not rough then Fiona is big. If Fiona is white and Fiona is not rough then Fiona is nice. Rough people are white. All big people are white. Young, white people are nice. Furry people are not nice. If Fiona is not rough then Fiona is young. If Fiona is furry and Fiona is not white then Fiona is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nWhite(x) ::: x is white.\nNice(x) ::: x is nice.\nFurry(x) ::: x is furry.\nPremises:\nBlue(Fiona) ::: Fiona is blue.\n¬Rough(Fiona) ::: Fiona is not rough.\nYoung(Fiona) ::: Fiona is young.\n∀x (¬Rough(x) → Big(x)) ::: If Fiona is not rough then Fiona is big.\n∀x ((White(x) ∧ ¬Rough(x)) → Nice(x)) ::: If Fiona is white and Fiona is not rough then Fiona is nice.\n∀x (Rough(x) → White(x)) ::: Rough people are white.\n∀x (Big(x) → White(x)) ::: All big people are white.\n∀x ((Young(x) ∧ White(x)) → Nice(x)) ::: Young, white people are nice.\n∀x (Furry(x) → ¬Nice(x)) ::: Furry people are not nice.\n∀x (¬Rough(x) → Young(x)) ::: If Fiona is not rough then Fiona is young.\n∀x ((Furry(x) ∧ ¬White(x)) → Young(x)) ::: If Fiona is furry and Fiona is not white then Fiona is young.\nConclusion:\n¬Nice(Fiona) ::: Fiona is not nice."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1455",
    "context": "Anne is red. Bob is big. Bob is blue. Bob is cold. Bob is nice. Bob is red. Bob is round. Bob is white. Fiona is big. Fiona is blue. Fiona is cold. Fiona is nice. Fiona is red. Fiona is round. Fiona is white. If someone is blue and round then they are cold. If Fiona is round then Fiona is blue. Cold, nice people are white. If someone is red then they are white. White, red people are cold. All blue, cold people are big. All cold, white people are round. All big, round people are white.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is blue.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is red.\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nCold(x) ::: x is cold.\nNice(x) ::: x is nice.\nRound(x) ::: x is round.\nWhite(x) ::: x is white.\nPremises:\nRed(Anne) ::: Anne is red.\nBig(Bob) ::: Bob is big.\nBlue(Bob) ::: Bob is blue.\nCold(Bob) ::: Bob is cold.\nNice(Bob) ::: Bob is nice.\nRed(Bob) ::: Bob is red.\nRound(Bob) ::: Bob is round.\nWhite(Bob) ::: Bob is white.\nBig(Fiona) ::: Fiona is big.\nBlue(Fiona) ::: Fiona is blue.\nCold(Fiona) ::: Fiona is cold.\nNice(Fiona) ::: Fiona is nice.\nRed(Fiona) ::: Fiona is red.\nRound(Fiona) ::: Fiona is round.\nWhite(Fiona) ::: Fiona is white.\n∀x ((Blue(x) ∧ Round(x)) → Cold(x)) ::: If someone is blue and round then they are cold.\n∀x (Round(Fiona) → Blue(Fiona)) ::: If Fiona is round then Fiona is blue.\n∀x ((Cold(x) ∧ Nice(x)) → White(x)) ::: Cold, nice people are white.\n∀x (Red(x) → White(x)) ::: If someone is red then they are white.\n∀x ((White(x) ∧ Red(x)) → Cold(x)) ::: White, red people are cold.\n∀x ((Blue(x) ∧ Cold(x)) → Big(x)) ::: All blue, cold people are big.\n∀x ((Cold(x) ∧ White(x)) → Round(x)) ::: All cold, white people are round.\n∀x ((Big(x) ∧ Round(x)) → White(x)) ::: All big, round people are white.\nConclusion:\nBlue(Bob) ::: Bob is blue."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-17",
    "context": "The rabbit is red. Big things are round. Nice things are big. All red things are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is red.\nBig(x) ::: x is big.\nRound(x) ::: x is round.\nNice(x) ::: x is nice.\nPremises:\nRed(rabbit) ::: The rabbit is red.\n∀x (Big(x) → Round(x)) ::: Big things are round.\n∀x (Nice(x) → Big(x)) ::: Nice things are big.\n∀x (Red(x) → Nice(x)) ::: All red things are nice.\nConclusion:\n¬Red(rabbit) ::: The rabbit is not red."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1524",
    "context": "Charlie is cold. Charlie is nice. Charlie is round. Charlie is young. Dave is kind. Dave is round. Dave is young. Smart people are big. Cold, nice people are young. Young, kind people are nice. Kind, cold people are big. If Charlie is smart and Charlie is big then Charlie is kind. All cold, nice people are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not smart.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nNice(x) ::: x is nice.\nRound(x) ::: x is round.\nYoung(x) ::: x is young.\nKind(x) ::: x is kind.\nSmart(x) ::: x is smart.\nBig(x) ::: x is big.\nPremises:\nCold(Charlie) ::: Charlie is cold.\nNice(Charlie) ::: Charlie is nice.\nRound(Charlie) ::: Charlie is round.\nYoung(Charlie) ::: Charlie is young.\nKind(Dave) ::: Dave is kind.\nRound(Dave) ::: Dave is round.\nYoung(Dave) ::: Dave is young.\n∀x (Smart(x) → Big(x)) ::: Smart people are big.\n∀x ((Cold(x) ∧ Nice(x)) → Young(x)) ::: Cold, nice people are young.\n∀x ((Young(x) ∧ Kind(x)) → Nice(x)) ::: Young, kind people are nice.\n∀x ((Kind(x) ∧ Cold(x)) → Big(x)) ::: Kind, cold people are big.\n∀x ((Smart(Charlie) ∧ Big(Charlie)) → Kind(Charlie)) ::: If Charlie is smart and Charlie is big then Charlie is kind.\n∀x ((Cold(x) ∧ Nice(x)) → Smart(x)) ::: All cold, nice people are smart.\nConclusion:\n¬Smart(Dave) ::: Dave is not smart."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-210",
    "context": "Anne is green. Anne is red. Dave is green. Dave is nice. Erin is green. Harry is nice. Harry is round. All furry things are round. If something is quiet and red then it is round. If something is green and red then it is round. Round things are red. All furry things are quiet. All green things are red. If something is round then it is quiet. If Dave is red then Dave is green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nRed(x) ::: x is red.\nNice(x) ::: x is nice.\nRound(x) ::: x is round.\nFurry(x) ::: x is furry.\nQuiet(x) ::: x is quiet.\nPremises:\nGreen(Anne) ::: Anne is green.\nRed(Anne) ::: Anne is red.\nGreen(Dave) ::: Dave is green.\nNice(Dave) ::: Dave is nice.\nGreen(Erin) ::: Erin is green.\nNice(Harry) ::: Harry is nice.\nRound(Harry) ::: Harry is round.\n∀x (Furry(x) → Round(x)) ::: All furry things are round.\n∀x ((Quiet(x) ∧ Red(x)) → Round(x)) ::: If something is quiet and red then it is round.\n∀x ((Green(x) ∧ Red(x)) → Round(x)) ::: If something is green and red then it is round.\n∀x (Round(x) → Red(x)) ::: Round things are red.\n∀x (Furry(x) → Quiet(x)) ::: All furry things are quiet.\n∀x (Green(x) → Red(x)) ::: All green things are red.\n∀x (Round(x) → Quiet(x)) ::: If something is round then it is quiet.\n∀x (Red(Dave) → Green(Dave)) ::: If Dave is red then Dave is green.\nConclusion:\nGreen(Anne) ::: Anne is green."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-576",
    "context": "The cat does not like the rabbit. The rabbit chases the squirrel. The squirrel is kind. If someone is blue then they like the cat. If someone is kind then they like the cat. If someone is kind and not red then they are cold. If someone likes the cat then the cat chases the squirrel. If the squirrel is kind then the squirrel likes the cat. If the cat chases the squirrel then the squirrel likes the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat likes the rabbit.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes(x, y) ::: x likes y.\nChases(x, y) ::: x chases y.\nKind(x) ::: x is kind.\nBlue(x) ::: x is blue.\nRed(x) ::: x is red.\nCold(x) ::: x is cold.\nPremises:\n¬Likes(Cat, Rabbit) ::: The cat does not like the rabbit.\nChases(Rabbit, Squirrel) ::: The rabbit chases the squirrel.\nKind(Squirrel) ::: The squirrel is kind.\n∀x ((Blue(x) → Likes(x, Cat)) ::: If someone is blue then they like the cat.\n∀x ((Kind(x) → Likes(x, Cat)) ::: If someone is kind then they like the cat.\n∀x ((Kind(x) ∧ ¬Red(x)) → Cold(x)) ::: If someone is kind and not red then they are cold.\n∀x (Likes(x, Cat) → Chases(Cat, Squirrel)) ::: If someone likes the cat then the cat chases the squirrel.\n∀x (Kind(Squirrel) → Likes(Squirrel, Cat)) ::: If the squirrel is kind then the squirrel likes the cat.\n∀x ((Chases(Cat, Squirrel) → Likes(Squirrel, Rabbit)) ::: If the cat chases the squirrel then the squirrel likes the rabbit.\nConclusion:\nLikes(Cat, Rabbit) ::: The cat likes the rabbit."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-817",
    "context": "Charlie is kind. Erin is furry. If someone is kind and quiet then they are furry. If someone is red then they are blue. If someone is furry then they are kind. If someone is kind then they are quiet. If someone is quiet and kind then they are big. Kind, blue people are furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not blue.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind(x) ::: x is kind.\nFurry(x) ::: x is furry.\nQuiet(x) ::: x is quiet.\nRed(x) ::: x is red.\nBlue(x) ::: x is blue.\nBig(x) ::: x is big.\nPremises:\nKind(Charlie) ::: Charlie is kind.\nFurry(Erin) ::: Erin is furry.\n∀x ((Kind(x) ∧ Quiet(x)) → Furry(x)) ::: If someone is kind and quiet then they are furry.\n∀x (Red(x) → Blue(x)) ::: If someone is red then they are blue.\n∀x (Furry(x) → Kind(x)) ::: If someone is furry then they are kind.\n∀x (Kind(x) → Quiet(x)) ::: If someone is kind then they are quiet.\n∀x ((Quiet(x) ∧ Kind(x)) → Big(x)) ::: If someone is quiet and kind then they are big.\n∀x ((Kind(x) ∧ Blue(x)) → Furry(x)) ::: Kind, blue people are furry.\nConclusion:\n¬Blue(Erin) ::: Erin is not blue."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-95",
    "context": "The cow chases the dog. The cow sees the dog. The dog chases the cow. If something chases the dog then it is green. If something is green then it sees the cow. If something sees the cow and the cow does not chase the dog then it does not chase the cow. If something chases the cow then it does not visit the dog. If something sees the cow and the cow chases the dog then the dog sees the cow. If something chases the cow and the cow chases the dog then it does not visit the cow. If something chases the cow and the cow does not visit the dog then the cow is not red. If the cow does not see the dog and the dog does not chase the cow then the cow is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog chases the cow.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nSees(x, y) ::: x sees y.\nGreen(x) ::: x is green.\nVisit(x, y) ::: x visits y.\nRed(x) ::: x is red.\nBig(x) ::: x is big.\nPremises:\nChases(Cow, Dog) ::: The cow chases the dog.\nSees(Cow, Dog) ::: The cow sees the dog.\nChases(Dog, Cow) ::: The dog chases the cow.\n∀x (Chases(x, Dog) → Green(x)) ::: If something chases the dog then it is green.\n∀x (Green(x) → Sees(x, Cow)) ::: If something is green then it sees the cow.\n∀x ((Sees(x, Cow) ∧ ¬Chases(Cow, Dog)) → ¬Chases(x, Cow)) ::: If something sees the cow and the cow does not chase the dog then it does not chase the cow.\n∀x (Chases(x, Cow) → ¬Visit(x, Dog)) ::: If something chases the cow then it does not visit the dog.\n∀x ((Sees(x, Cow) ∧ Chases(Cow, Dog)) → Sees(Dog, Cow)) ::: If something sees the cow and the cow chases the dog then the dog sees the cow.\n∀x ((Chases(x, Cow) ∧ Chases(Cow, Dog)) → ¬Visit(x, Cow)) ::: If something chases the cow and the cow chases the dog then it does not visit the cow.\n∀x ((Chases(x, Cow) ∧ ¬Visit(Cow, Dog)) → ¬Red(Cow)) ::: If something chases the cow and the cow does not visit the dog then the cow is not red.\n∀x ((¬Sees(Cow, Dog) ∧ ¬Chases(Dog, Cow)) → Big(Cow)) ::: If the cow does not see the dog and the dog does not chase the cow then the cow is big.\nConclusion:\nChases(Dog, Cow) ::: The dog chases the cow."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1561",
    "context": "Charlie is kind. Charlie is smart. Dave is kind. Dave is quiet. Dave is red. Fiona is kind. Fiona is nice. Fiona is smart. Harry is kind. Harry is nice. Harry is quiet. Harry is red. Harry is rough. Harry is smart. Harry is young. Quiet, nice things are rough. Young, quiet things are nice. Young, nice things are rough. Nice, red things are young. All rough things are young. All smart things are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not quiet.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nKind(x) ::: x is kind.\nSmart(x) ::: x is smart.\nQuiet(x) ::: x is quiet.\nRed(x) ::: x is red.\nNice(x) ::: x is nice.\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nPremises:\nKind(Charlie) ::: Charlie is kind.\nSmart(Charlie) ::: Charlie is smart.\nKind(Dave) ::: Dave is kind.\nQuiet(Dave) ::: Dave is quiet.\nRed(Dave) ::: Dave is red.\nKind(Fiona) ::: Fiona is kind.\nNice(Fiona) ::: Fiona is nice.\nSmart(Fiona) ::: Fiona is smart.\nKind(Harry) ::: Harry is kind.\nNice(Harry) ::: Harry is nice.\nQuiet(Harry) ::: Harry is quiet.\nRed(Harry) ::: Harry is red.\nRough(Harry) ::: Harry is rough.\nSmart(Harry) ::: Harry is smart.\nYoung(Harry) ::: Harry is young.\n∀x ((Quiet(x) ∧ Nice(x)) → Rough(x)) ::: Quiet, nice things are rough.\n∀x ((Young(x) ∧ Quiet(x)) → Nice(x)) ::: Young, quiet things are nice.\n∀x ((Young(x) ∧ Nice(x)) → Rough(x)) ::: Young, nice things are rough.\n∀x ((Nice(x) ∧ Red(x)) → Young(x)) ::: Nice, red things are young.\n∀x (Rough(x) → Young(x)) ::: All rough things are young.\n∀x (Smart(x) → Quiet(x)) ::: All smart things are quiet.\nConclusion:\n¬Quiet(Dave) ::: Dave is not quiet."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-838",
    "context": "The cat eats the lion. The cat is big. The cat needs the lion. The lion eats the cat. The lion is rough. The lion likes the cat. The lion needs the cat. If something is big then it likes the cat. All round things are red. Big things are round. If something is round and it needs the cat then it likes the cat. If something is rough then it likes the lion. If something needs the cat and the cat is round then it eats the cat. If the cat needs the lion and the lion needs the cat then the lion is young. If the cat eats the lion then the lion is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not eat the cat.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nBig(x) ::: x is big.\nNeeds(x, y) ::: x needs y.\nRough(x) ::: x is rough.\nLikes(x, y) ::: x likes y.\nRound(x) ::: x is round.\nRed(x) ::: x is red.\nYoung(x) ::: x is young.\nPremises:\nEats(Cat, Lion) ::: The cat eats the lion.\nBig(Cat) ::: The cat is big.\nNeeds(Cat, Lion) ::: The cat needs the lion.\nEats(Lion, Cat) ::: The lion eats the cat.\nRough(Lion) ::: The lion is rough.\nLikes(Lion, Cat) ::: The lion likes the cat.\nNeeds(Lion, Cat) ::: The lion needs the cat.\n∀x (Big(x) → Likes(x, Cat)) ::: If something is big then it likes the cat.\n∀x (Round(x) → Red(x)) ::: All round things are red.\n∀x (Big(x) → Round(x)) ::: Big things are round.\n∀x ((Round(x) ∧ Needs(x, Cat)) → Likes(x, Cat)) ::: If something is round and it needs the cat then it likes the cat.\n∀x (Rough(x) → Likes(x, Lion)) ::: If something is rough then it likes the lion.\n∀x ((Needs(x, Cat) ∧ Round(Cat)) → Eats(x, Cat)) ::: If something needs the cat and the cat is round then it eats the cat.\n∀x ((Needs(Cat, Lion) ∧ Needs(Lion, Cat)) → Young(Lion)) ::: If the cat needs the lion and the lion needs the cat then the lion is young.\n∀x (Eats(Cat, Lion) → Big(Lion)) ::: If the cat eats the lion then the lion is big.\nConclusion:\n¬Eats(Cat, Cat) ::: The cat does not eat the cat."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-183",
    "context": "The cow is nice. If something is round and nice then it is not rough. If the cow is round and the cow is rough then the cow is not nice. If the cow is nice then the cow is kind. All kind things are round. If something is nice and not round then it is cold. Kind, nice things are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is nice.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice(x) ::: x is nice.\nRound(x) ::: x is round.\nRough(x) ::: x is rough.\nKind(x) ::: x is kind.\nCold(x) ::: x is cold.\nPremises:\nNice(cow) ::: The cow is nice.\n∀x ((Round(x) ∧ Nice(x)) → ¬Rough(x)) ::: If something is round and nice then it is not rough.\n∀x ((Round(cow) ∧ Rough(cow)) → ¬Nice(cow)) ::: If the cow is round and the cow is rough then the cow is not nice.\n∀x (Nice(x) → Kind(x)) ::: If something is nice then it is kind.\n∀x (Kind(x) → Round(x)) ::: All kind things are round.\n∀x ((Nice(x) ∧ ¬Round(x)) → Cold(x)) ::: If something is nice and not round then it is cold.\n∀x ((Kind(x) ∧ Nice(x)) → Cold(x)) ::: Kind, nice things are cold.\nConclusion:\nNice(cow) ::: The cow is nice."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-40",
    "context": "The bald eagle sees the cow. The bear is cold. The cow sees the bear. The lion needs the bear. If someone sees the bear then they are blue. If someone likes the bear and they are blue then they like the lion. If someone needs the bald eagle then they see the bald eagle. If someone needs the cow and the cow needs the bear then the cow needs the lion. If someone needs the cow and they see the bald eagle then they are cold. If someone is nice then they see the bear. If someone is red then they need the bald eagle. If someone needs the bear then they are red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSees(x, y) ::: x sees y.\nCold(x) ::: x is cold.\nNeeds(x, y) ::: x needs y.\nBlue(x) ::: x is blue.\nLikes(x, y) ::: x likes y.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nPremises:\nSees(BaldEagle, Cow) ::: The bald eagle sees the cow.\nCold(Bear) ::: The bear is cold.\nSees(Cow, Bear) ::: The cow sees the bear.\nNeeds(Lion, Bear) ::: The lion needs the bear.\n∀x (Sees(x, Bear) → Blue(x)) ::: If someone sees the bear then they are blue.\n∀x ((Likes(x, Bear) ∧ Blue(x)) → Likes(x, Lion)) ::: If someone likes the bear and they are blue then they like the lion.\n∀x (Needs(x, BaldEagle) → Sees(x, BaldEagle)) ::: If someone needs the bald eagle then they see the bald eagle.\n∀x ((Needs(x, Cow) ∧ Needs(Cow, Bear)) → Needs(Cow, Lion)) ::: If someone needs the cow and the cow needs the bear then the cow needs the lion.\n∀x ((Needs(x, Cow) ∧ Sees(x, BaldEagle)) → Cold(x)) ::: If someone needs the cow and they see the bald eagle then they are cold.\n∀x (Nice(x) → Sees(x, Bear)) ::: If someone is nice then they see the bear.\n∀x (Red(x) → Needs(x, BaldEagle)) ::: If someone is red then they need the bald eagle.\n∀x (Needs(x, Bear) → Red(x)) ::: If someone needs the bear then they are red.\nConclusion:\n¬Cold(Bear) ::: The bear is not cold."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-237",
    "context": "The mouse is big. The mouse is blue. The mouse is round. The mouse likes the squirrel. The mouse needs the tiger. The mouse visits the tiger. The squirrel is round. The squirrel needs the mouse. The squirrel visits the tiger. The tiger is blue. The tiger is round. The tiger needs the squirrel. If someone needs the mouse then they like the mouse. If someone visits the mouse then the mouse is cold. If someone likes the mouse then the mouse visits the squirrel. If someone is blue and they need the squirrel then the squirrel visits the mouse. If someone needs the mouse then the mouse needs the tiger. If someone is cold and they like the squirrel then the squirrel needs the tiger.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse does not like the mouse.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nBlue(x) ::: x is blue.\nRound(x) ::: x is round.\nLikes(x, y) ::: x likes y.\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\nCold(x) ::: x is cold.\nPremises:\nBig(Mouse) ::: The mouse is big.\nBlue(Mouse) ::: The mouse is blue.\nRound(Mouse) ::: The mouse is round.\nLikes(Mouse, Squirrel) ::: The mouse likes the squirrel.\nNeeds(Mouse, Tiger) ::: The mouse needs the tiger.\nVisits(Mouse, Tiger) ::: The mouse visits the tiger.\nRound(Squirrel) ::: The squirrel is round.\nNeeds(Squirrel, Mouse) ::: The squirrel needs the mouse.\nVisits(Squirrel, Tiger) ::: The squirrel visits the tiger.\nBlue(Tiger) ::: The tiger is blue.\nRound(Tiger) ::: The tiger is round.\nNeeds(Tiger, Squirrel) ::: The tiger needs the squirrel.\n∀x (Needs(x, Mouse) → Likes(x, Mouse)) ::: If someone needs the mouse then they like the mouse.\n∀x (Visits(x, Mouse) → Cold(Mouse)) ::: If someone visits the mouse then the mouse is cold.\n∀x (Likes(x, Mouse) → Visits(x, Squirrel)) ::: If someone likes the mouse then the mouse visits the squirrel.\n∀x ((Blue(x) ∧ Needs(x, Squirrel)) → Visits(Squirrel, Mouse)) ::: If someone is blue and they need the squirrel then the squirrel visits the mouse.\n∀x (Needs(x, Mouse) → Needs(Mouse, Tiger)) ::: If someone needs the mouse then the mouse needs the tiger.\n∀x ((Cold(x) ∧ Likes(x, Squirrel)) → Needs(Squirrel, Tiger)) ::: If someone is cold and they like the squirrel then the squirrel needs the tiger.\nConclusion:\n¬Likes(Mouse, Mouse) ::: The mouse does not like the mouse."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1163",
    "context": "The bear likes the mouse. The mouse chases the bear. The rabbit visits the bear. If the mouse is rough and the mouse visits the rabbit then the mouse is nice. If someone visits the rabbit and the rabbit visits the bear then the rabbit is nice. If someone is big then they chase the bear. If someone likes the mouse then they visit the rabbit. If someone chases the mouse and they chase the rabbit then the rabbit chases the bear. All nice, young people are green. If someone likes the rabbit and the rabbit visits the bear then they visit the mouse. If someone is nice then they visit the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse chases the bear.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes(x, y) ::: x likes y.\nChases(x, y) ::: x chases y.\nVisits(x, y) ::: x visits y.\nRough(x) ::: x is rough.\nNice(x) ::: x is nice.\nBig(x) ::: x is big.\nGreen(x) ::: x is green.\nYoung(x) ::: x is young.\nPremises:\nLikes(bear, mouse) ::: The bear likes the mouse.\nChases(mouse, bear) ::: The mouse chases the bear.\nVisits(rabbit, bear) ::: The rabbit visits the bear.\n∀x ((Rough(x) ∧ Visits(x, rabbit)) → Nice(x)) ::: If the mouse is rough and the mouse visits the rabbit then the mouse is nice.\n∀x ((Visits(x, rabbit) ∧ Visits(rabbit, bear)) → Nice(rabbit)) ::: If someone visits the rabbit and the rabbit visits the bear then the rabbit is nice.\n∀x (Big(x) → Chases(x, bear)) ::: If someone is big then they chase the bear.\n∀x (Likes(x, mouse) → Visits(x, rabbit)) ::: If someone likes the mouse then they visit the rabbit.\n∀x ((Chases(x, mouse) ∧ Chases(x, rabbit)) → Chases(rabbit, bear)) ::: If someone chases the mouse and they chase the rabbit then the rabbit chases the bear.\n∀x ((Nice(x) ∧ Young(x)) → Green(x)) ::: All nice, young people are green.\n∀x ((Likes(x, rabbit) ∧ Visits(rabbit, bear)) → Visits(x, mouse)) ::: If someone likes the rabbit and the rabbit visits the bear then they visit the mouse.\n∀x (Nice(x) → Visits(x, mouse)) ::: If someone is nice then they visit the mouse.\nConclusion:\nChases(mouse, bear) ::: The mouse chases the bear."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1398",
    "context": "The cat is nice. The cat likes the dog. The cat visits the squirrel. The cow likes the cat. The cow sees the cat. The cow sees the dog. The dog likes the cat. The dog sees the squirrel. The dog visits the cat. The squirrel is green. The squirrel likes the dog. The squirrel visits the cat. All nice things are young. If something sees the dog then it is nice. If something likes the squirrel then the squirrel is big. If something visits the squirrel then it is young. If something sees the cat and it sees the squirrel then it visits the dog. If something is young then it likes the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel does not like the dog.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice(x) ::: x is nice.\nLikes(x, y) ::: x likes y.\nVisits(x, y) ::: x visits y.\nGreen(x) ::: x is green.\nBig(x) ::: x is big.\nYoung(x) ::: x is young.\nSees(x, y) ::: x sees y.\nConclusion:\n¬Likes(Squirrel, Dog) ::: The squirrel does not like the dog.\nPremises:\nNice(Cat) ::: The cat is nice.\nLikes(Cat, Dog) ::: The cat likes the dog.\nVisits(Cat, Squirrel) ::: The cat visits the squirrel.\nLikes(Cow, Cat) ::: The cow likes the cat.\nSees(Cow, Cat) ::: The cow sees the cat.\nSees(Cow, Dog) ::: The cow sees the dog.\nLikes(Dog, Cat) ::: The dog likes the cat.\nSees(Dog, Squirrel) ::: The dog sees the squirrel.\nVisits(Dog, Cat) ::: The dog visits the cat.\nGreen(Squirrel) ::: The squirrel is green.\nLikes(Squirrel, Dog) ::: The squirrel likes the dog.\nVisits(Squirrel, Cat) ::: The squirrel visits the cat.\n∀x (Nice(x) → Young(x)) ::: All nice things are young.\n∀x ((Sees(x, Dog)) → Nice(x)) ::: If something sees the dog then it is nice.\n∀x ((Likes(x, Squirrel)) → Big(Squirrel)) ::: If something likes the squirrel then the squirrel is big.\n∀x ((Visits(x, Squirrel)) → Young(x)) ::: If something visits the squirrel then it is young.\n∀x ((Sees(x, Cat) ∧ Sees(x, Squirrel)) → Visits(x, Dog)) ::: If something sees the cat and it sees the squirrel then it visits the dog.\n∀x (Young(x) → Likes(x, Cow)) ::: If something is young then it likes the cow."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-224",
    "context": "The bald eagle is cold. The bald eagle visits the rabbit. The dog chases the rabbit. The dog is cold. The dog visits the bald eagle. The rabbit visits the bald eagle. The tiger is big. If someone visits the tiger and the tiger needs the rabbit then they need the bald eagle. If someone visits the dog then the dog is big. If the bald eagle does not visit the rabbit then the rabbit is round. If someone visits the rabbit and the rabbit does not chase the tiger then the rabbit chases the bald eagle. If someone is big then they visit the dog. If someone chases the rabbit and they visit the rabbit then they are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not need the bald eagle.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nVisits(x, y) ::: x visits y.\nChases(x, y) ::: x chases y.\nBig(x) ::: x is big.\nNeeds(x, y) ::: x needs y.\nRound(x) ::: x is round.\n\nPremises:\nCold(bald eagle) ::: The bald eagle is cold.\nVisits(bald eagle, rabbit) ::: The bald eagle visits the rabbit.\nChases(dog, rabbit) ::: The dog chases the rabbit.\nCold(dog) ::: The dog is cold.\nVisits(dog, bald eagle) ::: The dog visits the bald eagle.\nVisits(rabbit, bald eagle) ::: The rabbit visits the bald eagle.\nBig(tiger) ::: The tiger is big.\n∀x ((Visits(x, tiger) ∧ Needs(tiger, rabbit)) → Needs(x, bald eagle)) ::: If someone visits the tiger and the tiger needs the rabbit then they need the bald eagle.\n∀x (Visits(x, dog) → Big(dog)) ::: If someone visits the dog then the dog is big.\n∀x (¬Visits(bald eagle, rabbit) → Round(rabbit)) ::: If the bald eagle does not visit the rabbit then the rabbit is round.\n∀x ((Visits(x, rabbit) ∧ ¬Chases(rabbit, tiger)) → Chases(rabbit, bald eagle)) ::: If someone visits the rabbit and the rabbit does not chase the tiger then the rabbit chases the bald eagle.\n∀x (Big(x) → Visits(x, dog)) ::: If someone is big then they visit the dog.\n∀x ((Chases(x, rabbit) ∧ Visits(x, rabbit)) → Round(x)) ::: If someone chases the rabbit and they visit the rabbit then they are round.\n\nConclusion:\n¬Needs(dog, bald eagle) ::: The dog does not need the bald eagle."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-331",
    "context": "Bob is not round. Erin is round. Gary is nice. If something is cold and not round then it is big. All round things are nice. If Gary is quiet and Gary is green then Gary is cold. Nice things are quiet. If Bob is big and Bob is green then Bob is not cold. If something is quiet then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Bob is not round.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound(x) ::: x is round.\nNice(x) ::: x is nice.\nCold(x) ::: x is cold.\nBig(x) ::: x is big.\nQuiet(x) ::: x is quiet.\nGreen(x) ::: x is green.\nPremises:\n¬Round(Bob) ::: Bob is not round.\nRound(Erin) ::: Erin is round.\nNice(Gary) ::: Gary is nice.\n∀x ((Cold(x) ∧ ¬Round(x)) → Big(x)) ::: If something is cold and not round then it is big.\n∀x (Round(x) → Nice(x)) ::: All round things are nice.\n∀x ((Quiet(Gary) ∧ Green(Gary)) → Cold(Gary)) ::: If Gary is quiet and Gary is green then Gary is cold.\n∀x (Nice(x) → Quiet(x)) ::: Nice things are quiet.\n∀x ((Big(x) ∧ Green(x)) → ¬Cold(x)) ::: If Bob is big and Bob is green then Bob is not cold.\n∀x (Quiet(x) → Cold(x)) ::: If something is quiet then it is cold.\nConclusion:\n¬Round(Bob) ::: Bob is not round."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-600",
    "context": "The rabbit eats the tiger. The squirrel is red. The tiger chases the squirrel. If the squirrel eats the rabbit then the rabbit likes the tiger. If something is red then it eats the rabbit. If something is cold and blue then it likes the tiger. If something likes the tiger then the tiger chases the rabbit. If something is red and blue then it chases the rabbit. If the squirrel is red and the tiger does not eat the squirrel then the squirrel does not like the rabbit. If something chases the rabbit then the rabbit chases the squirrel. If the tiger does not chase the rabbit and the tiger does not like the squirrel then the tiger does not chase the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The squirrel is not red.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nRed(x) ::: x is red.\nChases(x, y) ::: x chases y.\nLikes(x, y) ::: x likes y.\nCold(x) ::: x is cold.\nBlue(x) ::: x is blue.\nTiger(x) ::: x is a tiger.\nRabbit(x) ::: x is a rabbit.\nSquirrel(x) ::: x is a squirrel.\nPremises:\nEats(Rabbit, Tiger) ::: The rabbit eats the tiger.\nRed(Squirrel) ::: The squirrel is red.\nChases(Tiger, Squirrel) ::: The tiger chases the squirrel.\n∀x ((Squirrel(x) ∧ Eats(x, Rabbit)) → Likes(Rabbit, Tiger)) ::: If the squirrel eats the rabbit then the rabbit likes the tiger.\n∀x (Red(x) → Eats(x, Rabbit)) ::: If something is red then it eats the rabbit.\n∀x ((Cold(x) ∧ Blue(x)) → Likes(x, Tiger)) ::: If something is cold and blue then it likes the tiger.\n∀x (Likes(x, Tiger) → Chases(Tiger, Rabbit)) ::: If something likes the tiger then the tiger chases the rabbit.\n∀x ((Red(x) ∧ Blue(x)) → Chases(x, Rabbit)) ::: If something is red and blue then it chases the rabbit.\n∀x ((Red(Squirrel) ∧ ¬Eats(Tiger, Squirrel)) → ¬Likes(Squirrel, Rabbit)) ::: If the squirrel is red and the tiger does not eat the squirrel then the squirrel does not like the rabbit.\n∀x (Chases(x, Rabbit) → Chases(Rabbit, Squirrel)) ::: If something chases the rabbit then the rabbit chases the squirrel.\n∀x (¬Chases(Tiger, Rabbit) ∧ ¬Likes(Tiger, Squirrel) → ¬Chases(Tiger, Squirrel)) ::: If the tiger does not chase the rabbit and the tiger does not like the squirrel then the tiger does not chase the squirrel.\nConclusion:\n¬Red(Squirrel) ::: The squirrel is not red."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-88",
    "context": "The bear is red. The cow is not green. The lion is green. The mouse chases the cow. The mouse likes the bear. The mouse visits the bear. The mouse visits the lion. If someone chases the bear then the bear likes the cow. If the cow visits the mouse then the cow is cold. If someone is green and they visit the mouse then the mouse visits the lion. If someone chases the cow then the cow visits the mouse. If someone likes the bear and the bear is red then they visit the lion. If someone is cold then they visit the lion. If someone likes the cow and they chase the bear then the cow does not visit the lion. If someone likes the cow then the cow is big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not like the cow.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is red.\nGreen(x) ::: x is green.\nChases(x, y) ::: x chases y.\nLikes(x, y) ::: x likes y.\nVisits(x, y) ::: x visits y.\nCold(x) ::: x is cold.\nBig(x) ::: x is big.\nPremises:\nRed(bear) ::: The bear is red.\n¬Green(cow) ::: The cow is not green.\nGreen(lion) ::: The lion is green.\nChases(mouse, cow) ::: The mouse chases the cow.\nLikes(mouse, bear) ::: The mouse likes the bear.\nVisits(mouse, bear) ::: The mouse visits the bear.\nVisits(mouse, lion) ::: The mouse visits the lion.\n∀x ((Chases(x, bear)) → Likes(bear, cow)) ::: If someone chases the bear then the bear likes the cow.\n∀x ((Visits(cow, mouse)) → Cold(cow)) ::: If the cow visits the mouse then the cow is cold.\n∀x ((Green(x) ∧ Visits(x, mouse)) → Visits(mouse, lion)) ::: If someone is green and they visit the mouse then the mouse visits the lion.\n∀x ((Chases(x, cow)) → Visits(cow, mouse)) ::: If someone chases the cow then the cow visits the mouse.\n∀x ((Likes(x, bear) ∧ Red(bear)) → Visits(bear, lion)) ::: If someone likes the bear and the bear is red then they visit the lion.\n∀x (Cold(x) → Visits(x, lion)) ::: If someone is cold then they visit the lion.\n∀x ((Likes(x, cow) ∧ Chases(x, bear)) → ¬Visits(cow, lion)) ::: If someone likes the cow and they chase the bear then the cow does not visit the lion.\n∀x (Likes(x, cow) → Big(cow)) ::: If someone likes the cow then the cow is big.\nConclusion:\n¬Likes(bear, cow) ::: The bear does not like the cow."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-275",
    "context": "The squirrel visits the tiger. The tiger visits the squirrel. If something sees the tiger then the tiger is green. If something eats the squirrel then the squirrel sees the tiger. If something visits the squirrel and it eats the tiger then it sees the tiger. If something is cold then it visits the squirrel. If the squirrel sees the tiger then the tiger is nice. If something visits the tiger then the tiger eats the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger visits the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisits(x, y) ::: x visits y.\nSees(x, y) ::: x sees y.\nEats(x, y) ::: x eats y.\nGreen(x) ::: x is green.\nCold(x) ::: x is cold.\nNice(x) ::: x is nice.\nPremises:\nVisits(squirrel, tiger) ::: The squirrel visits the tiger.\nVisits(tiger, squirrel) ::: The tiger visits the squirrel.\n∀x (Sees(x, tiger) → Green(tiger)) ::: If something sees the tiger then the tiger is green.\n∀x (Eats(x, squirrel) → Sees(squirrel, tiger)) ::: If something eats the squirrel then the squirrel sees the tiger.\n∀x ((Visits(x, squirrel) ∧ Eats(x, tiger)) → Sees(squirrel, tiger)) ::: If something visits the squirrel and it eats the tiger then it sees the tiger.\n∀x (Cold(x) → Visits(x, squirrel)) ::: If something is cold then it visits the squirrel.\n∀x (Sees(squirrel, tiger) → Nice(tiger)) ::: If the squirrel sees the tiger then the tiger is nice.\n∀x (Visits(x, tiger) → Eats(tiger, squirrel)) ::: If something visits the tiger then the tiger eats the squirrel.\nConclusion:\nVisits(tiger, squirrel) ::: The tiger visits the squirrel."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-344",
    "context": "Bob is green. Bob is nice. Charlie is red. Charlie is white. Dave is green. Dave is nice. Dave is smart. Dave is white. Gary is green. Gary is not young. Smart things are nice. If Dave is white and Dave is red then Dave is furry. If Bob is green and Bob is nice then Bob is not young. If something is green then it is red. All white, green things are smart. All furry things are not young. If something is nice and not smart then it is furry. If Gary is smart and Gary is furry then Gary is not red.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not green.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nWhite(x) ::: x is white.\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nFurry(x) ::: x is furry.\nPremises:\nGreen(Bob) ::: Bob is green.\nNice(Bob) ::: Bob is nice.\nRed(Charlie) ::: Charlie is red.\nWhite(Charlie) ::: Charlie is white.\nGreen(Dave) ::: Dave is green.\nNice(Dave) ::: Dave is nice.\nSmart(Dave) ::: Dave is smart.\nWhite(Dave) ::: Dave is white.\nGreen(Gary) ::: Gary is green.\n¬Young(Gary) ::: Gary is not young.\n∀x ((Smart(x)) → Nice(x)) ::: Smart things are nice.\n∀x ((White(Dave) ∧ Red(Dave)) → Furry(Dave)) ::: If Dave is white and Dave is red then Dave is furry.\n∀x ((Green(Bob) ∧ Nice(Bob)) → ¬Young(Bob)) ::: If Bob is green and Bob is nice then Bob is not young.\n∀x (Green(x) → Red(x)) ::: If something is green then it is red.\n∀x ((White(x) ∧ Green(x)) → Smart(x)) ::: All white, green things are smart.\n∀x (Furry(x) → ¬Young(x)) ::: All furry things are not young.\n∀x ((Nice(x) ∧ ¬Smart(x)) → Furry(x)) ::: If something is nice and not smart then it is furry.\n∀x ((Smart(Gary) ∧ Furry(Gary)) → ¬Red(Gary)) ::: If Gary is smart and Gary is furry then Gary is not red.\nConclusion:\n¬Green(Dave) ::: Dave is not green."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-879",
    "context": "Anne is red. Charlie is round. Erin is white. Gary is white. If Charlie is quiet then Charlie is round. Round things are quiet. Round, white things are not quiet. If something is smart and cold then it is round. Quiet, red things are round. If something is cold and not red then it is blue. All quiet things are blue. All blue things are smart.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Erin is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nWhite(x) ::: x is white.\nQuiet(x) ::: x is quiet.\nSmart(x) ::: x is smart.\nCold(x) ::: x is cold.\nBlue(x) ::: x is blue.\nPremises:\nRed(Anne) ::: Anne is red.\nRound(Charlie) ::: Charlie is round.\nWhite(Erin) ::: Erin is white.\nWhite(Gary) ::: Gary is white.\n∀x (Quiet(Charlie) → Round(Charlie)) ::: If Charlie is quiet then Charlie is round.\n∀x (Round(x) → Quiet(x)) ::: Round things are quiet.\n∀x ((Round(x) ∧ White(x)) → ¬Quiet(x)) ::: Round, white things are not quiet.\n∀x ((Smart(x) ∧ Cold(x)) → Round(x)) ::: If something is smart and cold then it is round.\n∀x ((Quiet(x) ∧ Red(x)) → Round(x)) ::: Quiet, red things are round.\n∀x ((Cold(x) ∧ ¬Red(x)) → Blue(x)) ::: If something is cold and not red then it is blue.\n∀x (Quiet(x) → Blue(x)) ::: All quiet things are blue.\n∀x (Blue(x) → Smart(x)) ::: All blue things are smart.\nConclusion:\n¬Round(Erin) ::: Erin is not round."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1288",
    "context": "The bald eagle does not visit the dog. The dog is red. The dog is not round. The dog needs the squirrel. The dog sees the lion. The dog visits the bald eagle. The dog does not visit the squirrel. The lion sees the bald eagle. The squirrel visits the bald eagle. The squirrel visits the lion. If something visits the bald eagle then the bald eagle visits the lion. If something sees the lion then it needs the bald eagle. If the squirrel sees the bald eagle and the bald eagle is blue then the squirrel is not blue. If something sees the bald eagle and it visits the lion then the bald eagle does not need the lion. If something visits the dog then it sees the dog. If something needs the squirrel then the squirrel visits the dog. If something visits the lion then it is not red. If something sees the dog then it needs the squirrel.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion sees the bald eagle.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nVisit(x, y) ::: x visits y.\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nNeed(x, y) ::: x needs y.\nSee(x, y) ::: x sees y.\nBlue(x) ::: x is blue.\nNotBlue(x) ::: x is not blue.\n∀x (BaldEagle(x) → ¬Visit(x, Dog)) ::: The bald eagle does not visit the dog.\nRed(Dog) ::: The dog is red.\n¬Round(Dog) ::: The dog is not round.\nNeed(Dog, Squirrel) ::: The dog needs the squirrel.\nSee(Dog, Lion) ::: The dog sees the lion.\nVisit(Dog, BaldEagle) ::: The dog visits the bald eagle.\n¬Visit(Dog, Squirrel) ::: The dog does not visit the squirrel.\nSee(Lion, BaldEagle) ::: The lion sees the bald eagle.\nVisit(Squirrel, BaldEagle) ::: The squirrel visits the bald eagle.\nVisit(Squirrel, Lion) ::: The squirrel visits the lion.\n∀x (Visit(x, BaldEagle) → Visit(BaldEagle, Lion)) ::: If something visits the bald eagle then the bald eagle visits the lion.\n∀x (See(x, Lion) → Need(x, BaldEagle)) ::: If something sees the lion then it needs the bald eagle.\n∀x ((See(x, BaldEagle) ∧ Blue(BaldEagle)) → NotBlue(x)) ::: If the squirrel sees the bald eagle and the bald eagle is blue then the squirrel is not blue.\n∀x ((See(x, BaldEagle) ∧ Visit(x, Lion)) → ¬Need(BaldEagle, Lion)) ::: If something sees the bald eagle and it visits the lion then the bald eagle does not need the lion.\n∀x (Visit(x, Dog) → See(x, Dog)) ::: If something visits the dog then it sees the dog.\n∀x (Need(x, Squirrel) → Visit(Squirrel, Dog)) ::: If something needs the squirrel then the squirrel visits the dog.\n∀x (Visit(x, Lion) → ¬Red(x)) ::: If something visits the lion then it is not red.\n∀x (See(x, Dog) → Need(x, Squirrel)) ::: If something sees the dog then it needs the squirrel.\nConclusion:\nSee(Lion, BaldEagle) ::: The lion sees the bald eagle."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-873",
    "context": "The cow is round. The lion is kind. The mouse visits the tiger. The tiger likes the mouse. If someone is cold then they are not rough. If the lion visits the tiger and the lion likes the tiger then the lion likes the cow. If someone is round then they visit the mouse. If someone likes the lion and they are not big then the lion is not cold. If someone visits the mouse then the mouse is round. If someone is cold and they do not like the tiger then they visit the lion. If someone likes the cow and they are not big then the cow visits the mouse. If someone sees the lion and they do not visit the mouse then the lion sees the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow is not round.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nRound(x) ::: x is round.\nKind(x) ::: x is kind.\nVisits(x, y) ::: x visits y.\nLikes(x, y) ::: x likes y.\nCold(x) ::: x is cold.\nRough(x) ::: x is rough.\nBig(x) ::: x is big.\nSees(x, y) ::: x sees y.\nPremises:\nRound(cow) ::: The cow is round.\nKind(lion) ::: The lion is kind.\nVisits(mouse, tiger) ::: The mouse visits the tiger.\nLikes(tiger, mouse) ::: The tiger likes the mouse.\n∀x (Cold(x) → ¬Rough(x)) ::: If someone is cold then they are not rough.\n∀x ((Visits(lion, tiger) ∧ Likes(lion, tiger)) → Likes(lion, cow)) ::: If the lion visits the tiger and the lion likes the tiger then the lion likes the cow.\n∀x (Round(x) → Visits(x, mouse)) ::: If someone is round then they visit the mouse.\n∀x ((Likes(x, lion) ∧ ¬Big(x)) → ¬Cold(lion)) ::: If someone likes the lion and they are not big then the lion is not cold.\n∀x (Visits(x, mouse) → Round(mouse)) ::: If someone visits the mouse then the mouse is round.\n∀x ((Cold(x) ∧ ¬Likes(x, tiger)) → Visits(x, lion)) ::: If someone is cold and they do not like the tiger then they visit the lion.\n∀x ((Likes(x, cow) ∧ ¬Big(x)) → Visits(cow, mouse)) ::: If someone likes the cow and they are not big then the cow visits the mouse.\n∀x ((Sees(x, lion) ∧ ¬Visits(x, mouse)) → Sees(lion, cow)) ::: If someone sees the lion and they do not visit the mouse then the lion sees the cow.\nConclusion:\n¬Round(cow) ::: The cow is not round."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-778",
    "context": "The cat eats the mouse. The cat likes the mouse. The mouse likes the cat. If someone is cold then they like the mouse. If someone is round then they eat the cat. If someone likes the mouse then the mouse is cold. If someone likes the mouse and they are big then the mouse visits the cat. If someone eats the mouse then they are round. If the mouse visits the cat and the cat is not young then the cat is round. If someone eats the cat then they visit the cat. If the mouse is round then the mouse likes the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nLikes(x, y) ::: x likes y.\nCold(x) ::: x is cold.\nRound(x) ::: x is round.\nBig(x) ::: x is big.\nVisits(x, y) ::: x visits y.\nYoung(x) ::: x is young.\nPremises:\nEats(Cat, Mouse) ::: The cat eats the mouse.\nLikes(Cat, Mouse) ::: The cat likes the mouse.\nLikes(Mouse, Cat) ::: The mouse likes the cat.\n∀x (Cold(x) → Likes(x, Mouse)) ::: If someone is cold then they like the mouse.\n∀x (Round(x) → Eats(x, Cat)) ::: If someone is round then they eat the cat.\n∀x (Likes(x, Mouse) → Cold(Mouse)) ::: If someone likes the mouse then the mouse is cold.\n∀x ((Likes(x, Mouse) ∧ Big(x)) → Visits(Mouse, Cat)) ::: If someone likes the mouse and they are big then the mouse visits the cat.\n∀x (Eats(x, Mouse) → Round(x)) ::: If someone eats the mouse then they are round.\n∀x ((Visits(Mouse, Cat) ∧ ¬Young(Cat)) → Round(Cat)) ::: If the mouse visits the cat and the cat is not young then the cat is round.\n∀x (Eats(x, Cat) → Visits(x, Cat)) ::: If someone eats the cat then they visit the cat.\n∀x (Round(Mouse) → Likes(Mouse, Cat)) ::: If the mouse is round then the mouse likes the cat.\nConclusion:\n¬Round(Mouse) ::: The mouse is not round."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1402",
    "context": "The bear is cold. The bear is nice. The bear sees the dog. The bear sees the mouse. The dog chases the mouse. The dog is cold. The dog is nice. The mouse chases the dog. The mouse chases the rabbit. The rabbit chases the dog. The rabbit likes the bear. The rabbit likes the mouse. If the rabbit is nice and the rabbit likes the mouse then the mouse likes the rabbit. If someone sees the mouse and the mouse is kind then the mouse is green. If the mouse likes the rabbit and the mouse likes the dog then the mouse chases the dog. If the rabbit likes the mouse and the rabbit is green then the rabbit is nice. If the rabbit is rough and the rabbit chases the bear then the rabbit chases the dog. If someone chases the rabbit then they see the dog. If someone chases the bear then they like the dog. If someone likes the bear then they are green.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear sees the dog.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nNice(x) ::: x is nice.\nSees(x, y) ::: x sees y.\nChases(x, y) ::: x chases y.\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nLikes(x, y) ::: x likes y.\nRough(x) ::: x is rough.\nPremises:\nCold(bear) ::: The bear is cold.\nNice(bear) ::: The bear is nice.\nSees(bear, dog) ::: The bear sees the dog.\nSees(bear, mouse) ::: The bear sees the mouse.\nChases(dog, mouse) ::: The dog chases the mouse.\nCold(dog) ::: The dog is cold.\nNice(dog) ::: The dog is nice.\nChases(mouse, dog) ::: The mouse chases the dog.\nChases(mouse, rabbit) ::: The mouse chases the rabbit.\nChases(rabbit, dog) ::: The rabbit chases the dog.\nLikes(rabbit, bear) ::: The rabbit likes the bear.\nLikes(rabbit, mouse) ::: The rabbit likes the mouse.\n∀x ((Nice(rabbit) ∧ Likes(rabbit, mouse)) → Likes(mouse, rabbit)) ::: If the rabbit is nice and the rabbit likes the mouse then the mouse likes the rabbit.\n∀x ((Sees(x, mouse) ∧ Kind(mouse)) → Green(mouse)) ::: If someone sees the mouse and the mouse is kind then the mouse is green.\n∀x ((Likes(x, rabbit) ∧ Likes(x, dog)) → Chases(mouse, dog)) ::: If the mouse likes the rabbit and the mouse likes the dog then the mouse chases the dog.\n∀x ((Likes(rabbit, mouse) ∧ Green(rabbit)) → Nice(rabbit)) ::: If the rabbit likes the mouse and the rabbit is green then the rabbit is nice.\n∀x ((Rough(rabbit) ∧ Chases(rabbit, bear)) → Chases(rabbit, dog)) ::: If the rabbit is rough and the rabbit chases the bear then the rabbit chases the dog.\n∀x (Chases(x, rabbit) → Sees(x, dog)) ::: If someone chases the rabbit then they see the dog.\n∀x (Chases(x, bear) → Likes(x, dog)) ::: If someone chases the bear then they like the dog.\n∀x (Likes(x, bear) → Green(x)) ::: If someone likes the bear then they are green.\nConclusion:\nSees(bear, dog) ::: The bear sees the dog."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1874",
    "context": "Anne is nice. Charlie is big. Dave is rough. Erin is kind. If someone is quiet and cold then they are nice. Nice, blue people are kind. Kind people are cold. All big people are rough. All cold people are quiet. All rough, cold people are nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is not rough.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice(x) ::: x is nice.\nBig(x) ::: x is big.\nRough(x) ::: x is rough.\nKind(x) ::: x is kind.\nQuiet(x) ::: x is quiet.\nCold(x) ::: x is cold.\nBlue(x) ::: x is blue.\nPremises:\nNice(Anne) ::: Anne is nice.\nBig(Charlie) ::: Charlie is big.\nRough(Dave) ::: Dave is rough.\nKind(Erin) ::: Erin is kind.\n∀x ((Quiet(x) ∧ Cold(x)) → Nice(x)) ::: If someone is quiet and cold then they are nice.\n∀x ((Nice(x) ∧ Blue(x)) → Kind(x)) ::: Nice, blue people are kind.\n∀x (Kind(x) → Cold(x)) ::: Kind people are cold.\n∀x (Big(x) → Rough(x)) ::: All big people are rough.\n∀x (Cold(x) → Quiet(x)) ::: All cold people are quiet.\n∀x ((Rough(x) ∧ Cold(x)) → Nice(x)) ::: All rough, cold people are nice.\nConclusion:\n¬Rough(Dave) ::: Dave is not rough."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-694",
    "context": "Gary is quiet. Harry is cold. All red, quiet people are nice. If someone is nice and rough then they are round. If Harry is red then Harry is quiet. If someone is cold then they are nice. All nice, cold people are red. All rough, red people are cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Harry is not round.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet(x) ::: x is quiet.\nCold(x) ::: x is cold.\nNice(x) ::: x is nice.\nRound(x) ::: x is round.\nRed(x) ::: x is red.\nRough(x) ::: x is rough.\nPremises:\nQuiet(Gary) ::: Gary is quiet.\nCold(Harry) ::: Harry is cold.\n∀x ((Red(x) ∧ Quiet(x)) → Nice(x)) ::: All red, quiet people are nice.\n∀x ((Nice(x) ∧ Rough(x)) → Round(x)) ::: If someone is nice and rough then they are round.\n∀x (Red(Harry) → Quiet(Harry)) ::: If Harry is red then Harry is quiet.\n∀x (Cold(x) → Nice(x)) ::: If someone is cold then they are nice.\n∀x ((Nice(x) ∧ Cold(x)) → Red(x)) ::: All nice, cold people are red.\n∀x ((Rough(x) ∧ Red(x)) → Cold(x)) ::: All rough, red people are cold.\nConclusion:\n¬Round(Harry) ::: Harry is not round."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-468",
    "context": "The bear chases the cow. The bear chases the dog. The bear chases the lion. The bear sees the lion. The cow is big. The cow does not see the bear. The cow visits the lion. The dog chases the cow. The dog chases the lion. The dog does not visit the lion. The lion chases the bear. The lion does not chase the cow. If the cow is round then the cow does not see the bear. If something sees the lion then the lion is green. If something visits the lion and the lion chases the bear then the lion does not see the cow. If something is green then it sees the bear. If something visits the cow then the cow does not visit the bear. If something is green then it visits the bear. If something is green then it visits the cow. If something sees the cow and it is not kind then it is not blue.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear chases the lion.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nSees(x, y) ::: x sees y.\nVisits(x, y) ::: x visits y.\nBig(x) ::: x is big.\nRound(x) ::: x is round.\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nBlue(x) ::: x is blue.\nPremises:\nChases(bear, cow) ::: The bear chases the cow.\nChases(bear, dog) ::: The bear chases the dog.\nChases(bear, lion) ::: The bear chases the lion.\nSees(bear, lion) ::: The bear sees the lion.\nBig(cow) ::: The cow is big.\n¬Sees(cow, bear) ::: The cow does not see the bear.\nVisits(cow, lion) ::: The cow visits the lion.\nChases(dog, cow) ::: The dog chases the cow.\nChases(dog, lion) ::: The dog chases the lion.\n¬Visits(dog, lion) ::: The dog does not visit the lion.\nChases(lion, bear) ::: The lion chases the bear.\n¬Chases(lion, cow) ::: The lion does not chase the cow.\n∀x ((Round(x) → ¬Sees(x, bear))) ::: If the cow is round then the cow does not see the bear.\n∀x ((Sees(x, lion) → Green(lion))) ::: If something sees the lion then the lion is green.\n∀x ((Visits(x, lion) ∧ Chases(lion, bear)) → ¬Sees(lion, cow)) ::: If something visits the lion and the lion chases the bear then the lion does not see the cow.\n∀x (Green(x) → Sees(x, bear)) ::: If something is green then it sees the bear.\n∀x ((Visits(x, cow) → ¬Visits(x, bear))) ::: If something visits the cow then the cow does not visit the bear.\n∀x (Green(x) → Visits(x, bear)) ::: If something is green then it visits the bear.\n∀x (Green(x) → Visits(x, cow)) ::: If something is green then it visits the cow.\n∀x ((Sees(x, cow) ∧ ¬Kind(x)) → ¬Blue(x)) ::: If something sees the cow and it is not kind then it is not blue.\nConclusion:\nChases(bear, lion) ::: The bear chases the lion."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1262",
    "context": "The cow chases the mouse. The dog chases the cow. The mouse is not blue. The mouse is not kind. The mouse is not nice. The mouse needs the cow. The mouse visits the cow. If someone visits the mouse then they do not need the mouse. If the mouse needs the cow then the mouse visits the dog. If the cow is young and the cow visits the mouse then the cow needs the dog. If the mouse is young then the mouse is red. If someone visits the cow then the cow is young. If someone needs the dog then they do not chase the cow. If someone visits the cow and they visit the dog then they need the dog. If someone is kind and they do not need the dog then they chase the mouse.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The mouse is kind.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nChases(x, y) ::: x chases y.\nNeeds(x, y) ::: x needs y.\nVisits(x, y) ::: x visits y.\nBlue(x) ::: x is blue.\nKind(x) ::: x is kind.\nNice(x) ::: x is nice.\nYoung(x) ::: x is young.\nRed(x) ::: x is red.\nPremises:\nChases(cow, mouse) ::: The cow chases the mouse.\nChases(dog, cow) ::: The dog chases the cow.\n¬Blue(mouse) ::: The mouse is not blue.\n¬Kind(mouse) ::: The mouse is not kind.\n¬Nice(mouse) ::: The mouse is not nice.\nNeeds(mouse, cow) ::: The mouse needs the cow.\nVisits(mouse, cow) ::: The mouse visits the cow.\n∀x (Visits(x, mouse) → ¬Needs(x, mouse)) ::: If someone visits the mouse then they do not need the mouse.\n∀x (Needs(mouse, cow) → Visits(mouse, dog)) ::: If the mouse needs the cow then the mouse visits the dog.\n∀x ((Young(cow) ∧ Visits(cow, mouse)) → Needs(cow, dog)) ::: If the cow is young and the cow visits the mouse then the cow needs the dog.\n∀x (Young(mouse) → Red(mouse)) ::: If the mouse is young then the mouse is red.\n∀x (Visits(x, cow) → Young(cow)) ::: If someone visits the cow then the cow is young.\n∀x (Needs(x, dog) → ¬Chases(x, cow)) ::: If someone needs the dog then they do not chase the cow.\n∀x ((Visits(x, cow) ∧ Visits(x, dog)) → Needs(x, dog)) ::: If someone visits the cow and they visit the dog then they need the dog.\n∀x ((Kind(x) ∧ ¬Needs(x, dog)) → Chases(x, mouse)) ::: If someone is kind and they do not need the dog then they chase the mouse.\nConclusion:\nKind(mouse) ::: The mouse is kind."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1037",
    "context": "Bob is nice. Bob is young. Fiona is big. Fiona is furry. Fiona is nice. Fiona is red. Gary is red. Harry is furry. Harry is round. Harry is young. All young things are round. If something is cold then it is big. All nice, red things are round. If something is nice then it is big. All furry, red things are round. If something is nice and furry then it is red. If something is big then it is furry. Red, nice things are round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not big.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNice(x) ::: x is nice.\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nFurry(x) ::: x is furry.\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nCold(x) ::: x is cold.\nPremises:\nNice(Bob) ::: Bob is nice.\nYoung(Bob) ::: Bob is young.\nBig(Fiona) ::: Fiona is big.\nFurry(Fiona) ::: Fiona is furry.\nNice(Fiona) ::: Fiona is nice.\nRed(Fiona) ::: Fiona is red.\nRed(Gary) ::: Gary is red.\nFurry(Harry) ::: Harry is furry.\nRound(Harry) ::: Harry is round.\nYoung(Harry) ::: Harry is young.\n∀x (Young(x) → Round(x)) ::: All young things are round.\n∀x ((Cold(x) → Big(x))) ::: If something is cold then it is big.\n∀x ((Nice(x) ∧ Red(x)) → Round(x)) ::: All nice, red things are round.\n∀x ((Nice(x) → Big(x))) ::: If something is nice then it is big.\n∀x ((Furry(x) ∧ Red(x)) → Round(x)) ::: All furry, red things are round.\n∀x ((Nice(x) ∧ Furry(x)) → Red(x)) ::: If something is nice and furry then it is red.\n∀x ((Big(x) → Furry(x))) ::: If something is big then it is furry.\n∀x ((Red(x) ∧ Nice(x)) → Round(x)) ::: Red, nice things are round.\nConclusion:\n¬Big(Gary) ::: Gary is not big."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-846",
    "context": "Fiona is green. Fiona is quiet. Fiona is young. Gary is green. Gary is nice. Gary is quiet. Gary is red. Gary is round. Gary is white. Gary is young. Harry is green. Harry is nice. Harry is quiet. Harry is red. Harry is round. Harry is young. If Fiona is young and Fiona is quiet then Fiona is green. All green, young people are white. White people are red. If someone is green and nice then they are quiet. If Fiona is red and Fiona is green then Fiona is young. If someone is red then they are round. If someone is nice and white then they are red. If Harry is nice then Harry is round.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is white.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nQuiet(x) ::: x is quiet.\nYoung(x) ::: x is young.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nWhite(x) ::: x is white.\nPremises:\nGreen(Fiona) ::: Fiona is green.\nQuiet(Fiona) ::: Fiona is quiet.\nYoung(Fiona) ::: Fiona is young.\nGreen(Gary) ::: Gary is green.\nNice(Gary) ::: Gary is nice.\nQuiet(Gary) ::: Gary is quiet.\nRed(Gary) ::: Gary is red.\nRound(Gary) ::: Gary is round.\nWhite(Gary) ::: Gary is white.\nYoung(Gary) ::: Gary is young.\nGreen(Harry) ::: Harry is green.\nNice(Harry) ::: Harry is nice.\nQuiet(Harry) ::: Harry is quiet.\nRed(Harry) ::: Harry is red.\nRound(Harry) ::: Harry is round.\nYoung(Harry) ::: Harry is young.\n∀x ((Young(x) ∧ Quiet(x)) → Green(x)) ::: If Fiona is young and quiet then Fiona is green.\n∀x ((Green(x) ∧ Young(x)) → White(x)) ::: All green, young people are white.\n∀x (White(x) → Red(x)) ::: White people are red.\n∀x ((Green(x) ∧ Nice(x)) → Quiet(x)) ::: If someone is green and nice then they are quiet.\n∀x ((Red(x) ∧ Green(x)) → Young(x)) ::: If Fiona is red and green then Fiona is young.\n∀x (Red(x) → Round(x)) ::: If someone is red then they are round.\n∀x ((Nice(x) ∧ White(x)) → Red(x)) ::: If someone is nice and white then they are red.\n∀x (Nice(Harry) → Round(Harry)) ::: If Harry is nice then Harry is round.\nConclusion:\nWhite(Gary) ::: Gary is white."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1474",
    "context": "The cow is green. The cow likes the lion. The cow needs the dog. The cow needs the lion. The dog eats the lion. The dog is not cold. The dog is kind. The dog likes the cow. The dog likes the lion. The dog needs the lion. The lion eats the dog. The lion needs the dog. If something needs the cow then the cow likes the dog. If something eats the lion then it is round. If something likes the cow then the cow is cold. If something eats the lion then the lion is not kind. If something likes the dog then the dog does not need the cow. If something is green and it does not need the dog then the dog does not like the cow. If the lion is cold and the lion likes the dog then the lion does not eat the cow. If something needs the dog and the dog eats the lion then it needs the cow.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not like the lion.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nGreen(x) ::: x is green.\nLikes(x, y) ::: x likes y.\nNeeds(x, y) ::: x needs y.\nEats(x, y) ::: x eats y.\nCold(x) ::: x is cold.\nKind(x) ::: x is kind.\nRound(x) ::: x is round.\nPremises:\nGreen(cow) ::: The cow is green.\nLikes(cow, lion) ::: The cow likes the lion.\nNeeds(cow, dog) ::: The cow needs the dog.\nNeeds(cow, lion) ::: The cow needs the lion.\nEats(dog, lion) ::: The dog eats the lion.\n¬Cold(dog) ::: The dog is not cold.\nKind(dog) ::: The dog is kind.\nLikes(dog, cow) ::: The dog likes the cow.\nLikes(dog, lion) ::: The dog likes the lion.\nNeeds(dog, lion) ::: The dog needs the lion.\nEats(lion, dog) ::: The lion eats the dog.\nNeeds(lion, dog) ::: The lion needs the dog.\n∀x ((Needs(x, cow)) → Likes(cow, dog)) ::: If something needs the cow then the cow likes the dog.\n∀x ((Eats(x, lion)) → Round(x)) ::: If something eats the lion then it is round.\n∀x ((Likes(x, cow)) → Cold(cow)) ::: If something likes the cow then the cow is cold.\n∀x ((Eats(x, lion)) → ¬Kind(lion)) ::: If something eats the lion then the lion is not kind.\n∀x ((Likes(x, dog)) → ¬Needs(dog, cow)) ::: If something likes the dog then the dog does not need the cow.\n∀x ((Green(x) ∧ ¬Needs(x, dog)) → ¬Likes(dog, cow)) ::: If something is green and it does not need the dog then the dog does not like the cow.\n∀x ((Cold(lion) ∧ Likes(lion, dog)) → ¬Eats(lion, cow)) ::: If the lion is cold and the lion likes the dog then the lion does not eat the cow.\n∀x ((Needs(x, dog) ∧ Eats(dog, lion)) → Needs(cow, x)) ::: If something needs the dog and the dog eats the lion then it needs the cow.\nConclusion:\n¬Likes(dog, lion) ::: The dog does not like the lion."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-940",
    "context": "Charlie is smart. Round people are young. All smart people are round. If someone is young then they are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Charlie is not white.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nRound(x) ::: x is round.\nQuiet(x) ::: x is quiet.\nWhite(x) ::: x is white.\nPremises:\nSmart(Charlie) ::: Charlie is smart.\n∀x (Round(x) → Young(x)) ::: Round people are young.\n∀x (Smart(x) → Round(x)) ::: All smart people are round.\n∀x (Young(x) → Quiet(x)) ::: If someone is young then they are quiet.\nConclusion:\n¬White(Charlie) ::: Charlie is not white."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-823",
    "context": "The bald eagle eats the dog. The bald eagle is not young. The cow does not chase the bald eagle. The cow chases the tiger. The cow does not eat the dog. The cow is cold. The cow is young. The cow does not need the dog. The dog needs the bald eagle. The tiger chases the cow. The tiger chases the dog. The tiger does not eat the cow. The tiger is red. The tiger is young. The tiger needs the bald eagle. The tiger needs the cow. If the tiger does not chase the cow then the tiger chases the bald eagle. If something needs the tiger then it chases the tiger. If something is young then it needs the cow. If the dog chases the tiger then the tiger is cold. If something eats the dog then the dog needs the tiger. If the cow eats the tiger and the cow chases the bald eagle then the bald eagle needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cow chases the tiger.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nYoung(x) ::: x is young.\nChases(x, y) ::: x chases y.\nCold(x) ::: x is cold.\nNeeds(x, y) ::: x needs y.\nRed(x) ::: x is red.\nPremises:\nEats(BaldEagle, Dog) ::: The bald eagle eats the dog.\n¬Young(BaldEagle) ::: The bald eagle is not young.\n¬Chases(Cow, BaldEagle) ::: The cow does not chase the bald eagle.\nChases(Cow, Tiger) ::: The cow chases the tiger.\n¬Eats(Cow, Dog) ::: The cow does not eat the dog.\nCold(Cow) ::: The cow is cold.\nYoung(Cow) ::: The cow is young.\n¬Needs(Cow, Dog) ::: The cow does not need the dog.\nNeeds(Dog, BaldEagle) ::: The dog needs the bald eagle.\nChases(Tiger, Cow) ::: The tiger chases the cow.\nChases(Tiger, Dog) ::: The tiger chases the dog.\n¬Eats(Tiger, Cow) ::: The tiger does not eat the cow.\nRed(Tiger) ::: The tiger is red.\nYoung(Tiger) ::: The tiger is young.\nNeeds(Tiger, BaldEagle) ::: The tiger needs the bald eagle.\nNeeds(Tiger, Cow) ::: The tiger needs the cow.\n∀x (¬Chases(Tiger, Cow) → Chases(Tiger, BaldEagle)) ::: If the tiger does not chase the cow then the tiger chases the bald eagle.\n∀x (Needs(x, Tiger) → Chases(Tiger, x)) ::: If something needs the tiger then it chases the tiger.\n∀x (Young(x) → Needs(x, Cow)) ::: If something is young then it needs the cow.\n∀x (Chases(Dog, Tiger) → Cold(Tiger)) ::: If the dog chases the tiger then the tiger is cold.\n∀x (Eats(x, Dog) → Needs(Dog, x)) ::: If something eats the dog then the dog needs the tiger.\n∀x ((Eats(Cow, Tiger) ∧ Chases(Cow, BaldEagle)) → Needs(BaldEagle, Dog)) ::: If the cow eats the tiger and the cow chases the bald eagle then the bald eagle needs the dog.\nConclusion:\nChases(Cow, Tiger) ::: The cow chases the tiger."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-22",
    "context": "The cat eats the dog. The cat is big. The cat is cold. The cat is kind. The cat is red. The cat likes the dog. The cat needs the dog. The dog eats the cat. The dog is cold. The dog is kind. If something likes the dog then it needs the dog. If something is big and it needs the cat then it likes the dog. If something eats the cat then it is rough. If something is rough and it eats the cat then it likes the dog. If something eats the cat then the cat likes the dog. If something eats the cat then it is cold. If something likes the dog and it is rough then it likes the cat. If something is cold and rough then it likes the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat is not cold.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nKind(x) ::: x is kind.\nRed(x) ::: x is red.\nLikes(x, y) ::: x likes y.\nNeeds(x, y) ::: x needs y.\nRough(x) ::: x is rough.\nPremises:\nEats(Cat, Dog) ::: The cat eats the dog.\nBig(Cat) ::: The cat is big.\nCold(Cat) ::: The cat is cold.\nKind(Cat) ::: The cat is kind.\nRed(Cat) ::: The cat is red.\nLikes(Cat, Dog) ::: The cat likes the dog.\nNeeds(Cat, Dog) ::: The cat needs the dog.\nEats(Dog, Cat) ::: The dog eats the cat.\nCold(Dog) ::: The dog is cold.\nKind(Dog) ::: The dog is kind.\n∀x ∀y ((Likes(x, y)) → Needs(x, y)) ::: If something likes the dog then it needs the dog.\n∀x ((Big(x) ∧ Needs(x, Cat)) → Likes(x, Dog)) ::: If something is big and it needs the cat then it likes the dog.\n∀x ((Eats(x, Cat)) → Rough(x)) ::: If something eats the cat then it is rough.\n∀x ((Rough(x) ∧ Eats(x, Cat)) → Likes(x, Dog)) ::: If something is rough and it eats the cat then it likes the dog.\n∀x ((Eats(x, Cat)) → Likes(Cat, Dog)) ::: If something eats the cat then the cat likes the dog.\n∀x ((Eats(x, Cat)) → Cold(x)) ::: If something eats the cat then it is cold.\n∀x ((Likes(x, Dog) ∧ Rough(x)) → Likes(x, Cat)) ::: If something likes the dog and it is rough then it likes the cat.\n∀x ((Cold(x) ∧ Rough(x)) → Likes(x, Cat)) ::: If something is cold and rough then it likes the cat.\nConclusion:\n¬Cold(Cat) ::: The cat is not cold."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1342",
    "context": "The cat is cold. The cat is rough. The cat likes the lion. The cat sees the lion. The cat visits the lion. The lion is blue. The lion is cold. The lion is green. The lion is rough. The lion likes the cat. The lion sees the cat. The lion visits the cat. If something visits the cat then the cat likes the lion. If something visits the lion then it is nice. If something is rough then it likes the lion. If something sees the lion and the lion sees the cat then the cat is blue. If something likes the lion then it visits the lion. If the cat sees the lion then the lion likes the cat.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The lion does not see the lion.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nRough(x) ::: x is rough.\nLikes(x, y) ::: x likes y.\nSees(x, y) ::: x sees y.\nVisits(x, y) ::: x visits y.\nBlue(x) ::: x is blue.\nGreen(x) ::: x is green.\nNice(x) ::: x is nice.\nPremises:\nCold(cat) ::: The cat is cold.\nRough(cat) ::: The cat is rough.\nLikes(cat, lion) ::: The cat likes the lion.\nSees(cat, lion) ::: The cat sees the lion.\nVisits(cat, lion) ::: The cat visits the lion.\nBlue(lion) ::: The lion is blue.\nCold(lion) ::: The lion is cold.\nGreen(lion) ::: The lion is green.\nRough(lion) ::: The lion is rough.\nLikes(lion, cat) ::: The lion likes the cat.\nSees(lion, cat) ::: The lion sees the cat.\nVisits(lion, cat) ::: The lion visits the cat.\n∀x ((Visits(x, cat)) → Likes(cat, lion)) ::: If something visits the cat then the cat likes the lion.\n∀x ((Visits(x, lion)) → Nice(x)) ::: If something visits the lion then it is nice.\n∀x ((Rough(x)) → Likes(x, lion)) ::: If something is rough then it likes the lion.\n∀x ((Sees(x, lion) ∧ Sees(lion, cat)) → Blue(cat)) ::: If something sees the lion and the lion sees the cat then the cat is blue.\n∀x (Likes(x, lion) → Visits(x, lion)) ::: If something likes the lion then it visits the lion.\n∀x (Sees(cat, lion) → Likes(lion, cat)) ::: If the cat sees the lion then the lion likes the cat.\nConclusion:\n¬Sees(lion, lion) ::: The lion does not see the lion."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1512",
    "context": "The cow eats the lion. The cow is round. The cow visits the tiger. The lion eats the cow. The lion is nice. The squirrel is cold. The tiger is green. If something sees the cow then the cow sees the lion. If something eats the cow then the cow is green. If the lion sees the squirrel then the lion is green. If something visits the cow then it is nice. If the cow visits the squirrel and the cow sees the squirrel then the cow sees the lion. If something sees the cow then the cow is round. If the cow is cold then the cow sees the lion. If something is green then it is cold.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The tiger is green.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nRound(x) ::: x is round.\nVisits(x, y) ::: x visits y.\nNice(x) ::: x is nice.\nCold(x) ::: x is cold.\nGreen(x) ::: x is green.\nSees(x, y) ::: x sees y.\n\nPremises:\nEats(Cow, Lion) ::: The cow eats the lion.\nRound(Cow) ::: The cow is round.\nVisits(Cow, Tiger) ::: The cow visits the tiger.\nEats(Lion, Cow) ::: The lion eats the cow.\nNice(Lion) ::: The lion is nice.\nCold(Squirrel) ::: The squirrel is cold.\nGreen(Tiger) ::: The tiger is green.\n∀x ((Sees(x, Cow)) → (Sees(Cow, Lion))) ::: If something sees the cow then the cow sees the lion.\n∀x ((Eats(x, Cow)) → Green(Cow)) ::: If something eats the cow then the cow is green.\n∀x ((Sees(Lion, Squirrel)) → Green(Lion)) ::: If the lion sees the squirrel then the lion is green.\n∀x ((Visits(x, Cow)) → Nice(x)) ::: If something visits the cow then it is nice.\n∀x ((Visits(Cow, Squirrel) ∧ Sees(Cow, Squirrel)) → Sees(Cow, Lion)) ::: If the cow visits the squirrel and the cow sees the squirrel then the cow sees the lion.\n∀x ((Sees(x, Cow)) → Round(Cow)) ::: If something sees the cow then the cow is round.\n∀x ((Cold(Cow)) → Sees(Cow, Lion)) ::: If the cow is cold then the cow sees the lion.\n∀x ((Green(x)) → Cold(x)) ::: If something is green then it is cold.\n\nConclusion:\nGreen(Tiger) ::: The tiger is green."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-895",
    "context": "The cat likes the tiger. The rabbit eats the cat. The tiger likes the cat. If the tiger is kind and the tiger is nice then the tiger does not like the rabbit. If someone needs the tiger then the tiger likes the rabbit. If the cat eats the rabbit then the rabbit is blue. If someone likes the rabbit then they are nice. If the tiger does not like the cat and the tiger is not kind then the cat eats the rabbit. If someone likes the rabbit and they do not like the tiger then they need the cat. If someone eats the cat then they need the tiger. If someone eats the tiger and they do not like the rabbit then the tiger does not need the rabbit.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The cat does not like the tiger.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nLikes(x, y) ::: x likes y.\nEats(x, y) ::: x eats y.\nKind(x) ::: x is kind.\nNice(x) ::: x is nice.\nNeeds(x, y) ::: x needs y.\nBlue(x) ::: x is blue.\n\nPremises:\nLikes(cat, tiger) ::: The cat likes the tiger.\nEats(rabbit, cat) ::: The rabbit eats the cat.\nLikes(tiger, cat) ::: The tiger likes the cat.\n∀x ((Kind(x) ∧ Nice(x)) → ¬Likes(x, rabbit)) ::: If the tiger is kind and nice then the tiger does not like the rabbit.\n∀x (Needs(x, tiger) → Likes(x, rabbit)) ::: If someone needs the tiger then the tiger likes the rabbit.\n∀x (Eats(cat, rabbit) → Blue(rabbit)) ::: If the cat eats the rabbit then the rabbit is blue.\n∀x (Likes(x, rabbit) → Nice(x)) ::: If someone likes the rabbit then they are nice.\n∀x (¬Likes(tiger, cat) ∧ ¬Kind(tiger) → Eats(cat, rabbit)) ::: If the tiger does not like the cat and is not kind then the cat eats the rabbit.\n∀x (Likes(x, rabbit) ∧ ¬Likes(x, tiger) → Needs(cat, x)) ::: If someone likes the rabbit and does not like the tiger then they need the cat.\n∀x (Eats(cat, x) → Needs(x, tiger)) ::: If someone eats the cat then they need the tiger.\n∀x (Eats(tiger, x) ∧ ¬Likes(x, rabbit) → ¬Needs(tiger, rabbit)) ::: If someone eats the tiger and does not like the rabbit then the tiger does not need the rabbit.\n\nConclusion:\n¬Likes(cat, tiger) ::: The cat does not like the tiger."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1157",
    "context": "The dog is cold. If the dog is rough then the dog is young. All rough, big things are young. If something is big then it is not rough. All kind things are rough. If something is young and not big then it is rough. If something is kind then it is cold. All cold things are kind. If something is rough and not big then it is kind.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The dog does not need the dog.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nRough(x) ::: x is rough.\nYoung(x) ::: x is young.\nBig(x) ::: x is big.\nKind(x) ::: x is kind.\nPremises:\nCold(dog) ::: The dog is cold.\n∀x ((Rough(x) → Young(x)) ::: If the dog is rough then the dog is young.\n∀x ((Rough(x) ∧ Big(x)) → Young(x)) ::: All rough, big things are young.\n∀x ((Big(x) → ¬Rough(x))) ::: If something is big then it is not rough.\n∀x (Kind(x) → Rough(x)) ::: All kind things are rough.\n∀x ((Young(x) ∧ ¬Big(x)) → Rough(x)) ::: If something is young and not big then it is rough.\n∀x (Kind(x) → Cold(x)) ::: If something is kind then it is cold.\n∀x (Cold(x) → Kind(x)) ::: All cold things are kind.\n∀x ((Rough(x) ∧ ¬Big(x)) → Kind(x)) ::: If something is rough and not big then it is kind.\nConclusion:\n¬Cold(dog) ::: The dog does not need the dog."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1507",
    "context": "Fiona is big. Fiona is red. Fiona is round. Harry is big. Harry is furry. Harry is round. Harry is young. All round, young things are red. If something is young then it is furry. If Fiona is red then Fiona is big. If Fiona is young then Fiona is furry. All furry, round things are smart. All big, furry things are young. If something is round then it is young. If something is young then it is furry.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is red.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nRed(x) ::: x is red.\nRound(x) ::: x is round.\nFurry(x) ::: x is furry.\nYoung(x) ::: x is young.\nSmart(x) ::: x is smart.\nPremises:\nBig(Fiona) ::: Fiona is big.\nRed(Fiona) ::: Fiona is red.\nRound(Fiona) ::: Fiona is round.\nBig(Harry) ::: Harry is big.\nFurry(Harry) ::: Harry is furry.\nRound(Harry) ::: Harry is round.\nYoung(Harry) ::: Harry is young.\n∀x ((Round(x) ∧ Young(x)) → Red(x)) ::: All round, young things are red.\n∀x (Young(x) → Furry(x)) ::: If something is young then it is furry.\n∀x (Red(x) → Big(x)) ::: If Fiona is red then Fiona is big.\n∀x (Young(x) → Furry(x)) ::: If Fiona is young then Fiona is furry.\n∀x ((Furry(x) ∧ Round(x)) → Smart(x)) ::: All furry, round things are smart.\n∀x ((Big(x) ∧ Furry(x)) → Young(x)) ::: All big, furry things are young.\n∀x ((Round(x) → Young(x)) ::: If something is round then it is young.\n∀x ((Young(x) → Furry(x)) ::: If something is young then it is furry.\nConclusion:\nRed(Fiona) ::: Fiona is red."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-567",
    "context": "Anne is quiet. Anne is smart. Anne is not young. Fiona is nice. Fiona is quiet. Fiona is red. Fiona is rough. Fiona is young. Gary is smart. Gary is white. Rough, white people are red. All white people are nice. Smart people are white. All smart people are quiet. If Fiona is smart and Fiona is nice then Fiona is not young. If Anne is smart and Anne is nice then Anne is not rough. If Gary is white and Gary is young then Gary is quiet. If someone is smart and not rough then they are not young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Gary is not smart.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nQuiet(x) ::: x is quiet.\nSmart(x) ::: x is smart.\nYoung(x) ::: x is young.\nNice(x) ::: x is nice.\nRed(x) ::: x is red.\nRough(x) ::: x is rough.\nWhite(x) ::: x is white.\n∀x (Quiet(x) → Smart(x)) ::: If someone is quiet then they are smart.\n∀x (Smart(x) → White(x)) ::: Smart people are white.\n∀x (White(x) → Nice(x)) ::: All white people are nice.\n∀x ((Smart(x) ∧ Nice(x)) → ¬Young(x)) ::: If someone is smart and nice then they are not young.\n∀x ((Smart(x) ∧ Nice(x)) → ¬Rough(x)) ::: If someone is smart and nice then they are not rough.\n∀x ((White(x) ∧ Young(x)) → Quiet(x)) ::: If someone is white and young then they are quiet.\n∀x ((Smart(x) ∧ ¬Rough(x)) → ¬Young(x)) ::: If someone is smart and not rough then they are not young.\nPremises:\nQuiet(Anne) ::: Anne is quiet.\nSmart(Anne) ::: Anne is smart.\n¬Young(Anne) ::: Anne is not young.\nNice(Fiona) ::: Fiona is nice.\nQuiet(Fiona) ::: Fiona is quiet.\nRed(Fiona) ::: Fiona is red.\nRough(Fiona) ::: Fiona is rough.\nYoung(Fiona) ::: Fiona is young.\nSmart(Gary) ::: Gary is smart.\nWhite(Gary) ::: Gary is white.\n∀x ((Rough(x) ∧ White(x)) → Red(x)) ::: Rough, white people are red.\n∀x (White(x) → Nice(x)) ::: All white people are nice.\n∀x (Smart(x) → White(x)) ::: Smart people are white.\n∀x (Smart(x) → Quiet(x)) ::: All smart people are quiet.\n∀x ((Smart(x) ∧ Nice(x)) → ¬Young(x)) ::: If someone is smart and nice then they are not young.\n∀x ((Smart(x) ∧ Nice(x)) → ¬Rough(x)) ::: If someone is smart and nice then they are not rough.\n∀x ((White(x) ∧ Young(x)) → Quiet(x)) ::: If someone is white and young then they are quiet.\n∀x ((Smart(x) ∧ ¬Rough(x)) → ¬Young(x)) ::: If someone is smart and not rough then they are not young.\nConclusion:\n¬Smart(Gary) ::: Gary is not smart."
    ]
  },
  {
    "id": "ProofWriter_AttNeg-OWA-D3-1472",
    "context": "Anne is cold. Anne is round. Bob is nice. Bob is young. Gary is quiet. Gary is not round. Gary is young. If Anne is nice and Anne is cold then Anne is rough. Quiet, cold things are not kind. Round things are kind. If something is young and not round then it is rough. Nice things are quiet. If something is kind then it is cold. If something is young and rough then it is cold. Nice things are young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Anne is not quiet.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nCold(x) ::: x is cold.\nRound(x) ::: x is round.\nNice(x) ::: x is nice.\nYoung(x) ::: x is young.\nQuiet(x) ::: x is quiet.\nNotRound(x) ::: x is not round.\nRough(x) ::: x is rough.\nKind(x) ::: x is kind.\nPremises:\nCold(Anne) ::: Anne is cold.\nRound(Anne) ::: Anne is round.\nNice(Bob) ::: Bob is nice.\nYoung(Bob) ::: Bob is young.\nQuiet(Gary) ::: Gary is quiet.\nNotRound(Gary) ::: Gary is not round.\nYoung(Gary) ::: Gary is young.\n∀x ((Nice(x) ∧ Cold(x)) → Rough(x)) ::: If Anne is nice and Anne is cold then Anne is rough.\n∀x ((Quiet(x) ∧ Cold(x)) → ¬Kind(x)) ::: Quiet, cold things are not kind.\n∀x (Round(x) → Kind(x)) ::: Round things are kind.\n∀x ((Young(x) ∧ NotRound(x)) → Rough(x)) ::: If something is young and not round then it is rough.\n∀x (Nice(x) → Quiet(x)) ::: Nice things are quiet.\n∀x (Kind(x) → Cold(x)) ::: If something is kind then it is cold.\n∀x ((Young(x) ∧ Rough(x)) → Cold(x)) ::: If something is young and rough then it is cold.\n∀x (Nice(x) → Young(x)) ::: Nice things are young.\nConclusion:\n¬Quiet(Anne) ::: Anne is not quiet."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-134",
    "context": "Charlie is furry. Charlie is quiet. Charlie is rough. Charlie is round. Charlie is white. Dave is big. Dave is furry. Dave is quiet. Dave is white. Erin is big. Erin is furry. Erin is quiet. Erin is red. Erin is rough. Gary is big. If Gary is big then Gary is round. If someone is round then they are furry. If someone is round and furry then they are quiet.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Dave is furry.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nFurry(x) ::: x is furry.\nQuiet(x) ::: x is quiet.\nRough(x) ::: x is rough.\nRound(x) ::: x is round.\nWhite(x) ::: x is white.\nBig(x) ::: x is big.\nRed(x) ::: x is red.\nPremises:\nFurry(Charlie) ::: Charlie is furry.\nQuiet(Charlie) ::: Charlie is quiet.\nRough(Charlie) ::: Charlie is rough.\nRound(Charlie) ::: Charlie is round.\nWhite(Charlie) ::: Charlie is white.\nBig(Dave) ::: Dave is big.\nFurry(Dave) ::: Dave is furry.\nQuiet(Dave) ::: Dave is quiet.\nWhite(Dave) ::: Dave is white.\nBig(Erin) ::: Erin is big.\nFurry(Erin) ::: Erin is furry.\nQuiet(Erin) ::: Erin is quiet.\nRed(Erin) ::: Erin is red.\nRough(Erin) ::: Erin is rough.\nBig(Gary) ::: Gary is big.\n∀x ((Big(x) → Round(x)) ::: If Gary is big then Gary is round.\n∀x ((Round(x) → Furry(x)) ::: If someone is round then they are furry.\n∀x ((Round(x) ∧ Furry(x)) → Quiet(x)) ::: If someone is round and furry then they are quiet.\nConclusion:\nFurry(Dave) ::: Dave is furry."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-825",
    "context": "The bear eats the cat. The cat likes the bear. The dog sees the bear. If something is rough then it is round. If something is nice then it likes the dog. If something likes the bear then it sees the dog. If the cat is nice then the cat sees the dog. If something likes the bear then it eats the cat. If something sees the dog then the dog likes the cat. If something sees the bear and the bear sees the dog then the bear likes the dog. If something likes the cat then the cat is nice.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The bear does not eat the cat.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nEats(x, y) ::: x eats y.\nLikes(x, y) ::: x likes y.\nSees(x, y) ::: x sees y.\nRough(x) ::: x is rough.\nRound(x) ::: x is round.\nNice(x) ::: x is nice.\nDog(x) ::: x is a dog.\nCat(x) ::: x is a cat.\nBear(x) ::: x is a bear.\nPremises:\nEats(Bear, Cat) ::: The bear eats the cat.\nLikes(Cat, Bear) ::: The cat likes the bear.\nSees(Dog, Bear) ::: The dog sees the bear.\n∀x (Rough(x) → Round(x)) ::: If something is rough then it is round.\n∀x (Nice(x) → Likes(x, Dog)) ::: If something is nice then it likes the dog.\n∀x (Likes(x, Bear) → Sees(x, Dog)) ::: If something likes the bear then it sees the dog.\n∀x (Nice(Cat) → Sees(Cat, Dog)) ::: If the cat is nice then the cat sees the dog.\n∀x (Likes(x, Bear) → Eats(x, Cat)) ::: If something likes the bear then it eats the cat.\n∀x (Sees(x, Dog) → Likes(Dog, Cat)) ::: If something sees the dog then the dog likes the cat.\n∀x ((Sees(x, Bear) ∧ Sees(Bear, Dog)) → Likes(Bear, Dog)) ::: If something sees the bear and the bear sees the dog then the bear likes the dog.\n∀x (Likes(x, Cat) → Nice(Cat)) ::: If something likes the cat then the cat is nice.\nConclusion:\n¬Eats(Bear, Cat) ::: The bear does not eat the cat."
    ]
  },
  {
    "id": "ProofWriter_AttNoneg-OWA-D3-1559",
    "context": "Erin is big. Erin is cold. Erin is nice. Erin is young. Fiona is big. Fiona is nice. Gary is big. Gary is blue. Gary is cold. Gary is nice. Harry is big. Harry is blue. Harry is green. Harry is kind. Harry is nice. Harry is young. If something is nice then it is big. If something is nice then it is blue. If Erin is young and Erin is big then Erin is cold. All young, nice things are green. If Harry is green and Harry is young then Harry is nice. If something is blue then it is young.",
    "question": "Based on the above information, is the following statement true, false, or unknown? Fiona is not cold.",
    "answer": "C",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBig(x) ::: x is big.\nCold(x) ::: x is cold.\nNice(x) ::: x is nice.\nYoung(x) ::: x is young.\nBlue(x) ::: x is blue.\nGreen(x) ::: x is green.\nKind(x) ::: x is kind.\nPremises:\nBig(Erin) ::: Erin is big.\nCold(Erin) ::: Erin is cold.\nNice(Erin) ::: Erin is nice.\nYoung(Erin) ::: Erin is young.\nBig(Fiona) ::: Fiona is big.\nNice(Fiona) ::: Fiona is nice.\nBig(Gary) ::: Gary is big.\nBlue(Gary) ::: Gary is blue.\nCold(Gary) ::: Gary is cold.\nNice(Gary) ::: Gary is nice.\nBig(Harry) ::: Harry is big.\nBlue(Harry) ::: Harry is blue.\nGreen(Harry) ::: Harry is green.\nKind(Harry) ::: Harry is kind.\nNice(Harry) ::: Harry is nice.\nYoung(Harry) ::: Harry is young.\n∀x (Nice(x) → Big(x)) ::: If something is nice then it is big.\n∀x (Nice(x) → Blue(x)) ::: If something is nice then it is blue.\n∀x ((Young(x) ∧ Big(x)) → Cold(x)) ::: If Erin is young and Erin is big then Erin is cold.\n∀x ((Young(x) ∧ Nice(x)) → Green(x)) ::: All young, nice things are green.\n∀x ((Green(x) ∧ Young(x)) → Nice(x)) ::: If Harry is green and Harry is young then Harry is nice.\n∀x (Blue(x) → Young(x)) ::: If something is blue then it is young.\nConclusion:\n¬Cold(Fiona) ::: Fiona is not cold."
    ]
  },
  {
    "id": "ProofWriter_RelNoneg-OWA-D3-1050",
    "context": "The mouse needs the rabbit. The rabbit eats the squirrel. The squirrel likes the rabbit. If someone likes the rabbit then they eat the mouse. If someone likes the mouse then the mouse needs the squirrel. If someone is kind and they like the squirrel then they are big. If someone is kind and red then they eat the rabbit. If someone eats the mouse then the mouse likes the rabbit. If someone eats the squirrel then they are big.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit eats the squirrel.",
    "answer": "A",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nNeeds(x, y) ::: x needs y.\nEats(x, y) ::: x eats y.\nLikes(x, y) ::: x likes y.\nKind(x) ::: x is kind.\nRed(x) ::: x is red.\nBig(x) ::: x is big.\nMouse(x) ::: x is a mouse.\nRabbit(x) ::: x is a rabbit.\nSquirrel(x) ::: x is a squirrel.\nPremises:\nNeeds(Mouse, Rabbit) ::: The mouse needs the rabbit.\nEats(Rabbit, Squirrel) ::: The rabbit eats the squirrel.\nLikes(Squirrel, Rabbit) ::: The squirrel likes the rabbit.\n∀x (Likes(x, Rabbit) → Eats(x, Mouse)) ::: If someone likes the rabbit then they eat the mouse.\n∀x (Likes(x, Mouse) → Needs(Mouse, Squirrel)) ::: If someone likes the mouse then the mouse needs the squirrel.\n∀x ((Kind(x) ∧ Likes(x, Squirrel)) → Big(x)) ::: If someone is kind and they like the squirrel then they are big.\n∀x ((Kind(x) ∧ Red(x)) → Eats(x, Rabbit)) ::: If someone is kind and red then they eat the rabbit.\n∀x (Eats(x, Mouse) → Likes(Mouse, Rabbit)) ::: If someone eats the mouse then the mouse likes the rabbit.\n∀x (Eats(x, Squirrel) → Big(x)) ::: If someone eats the squirrel then they are big.\nConclusion:\nEats(Rabbit, Squirrel) ::: The rabbit eats the squirrel."
    ]
  },
  {
    "id": "ProofWriter_RelNeg-OWA-D3-1568",
    "context": "The dog is blue. The dog is not red. The dog likes the squirrel. The dog likes the tiger. The dog does not need the rabbit. The dog needs the tiger. The rabbit is cold. The rabbit is nice. The rabbit is red. The rabbit sees the tiger. The squirrel is blue. The squirrel is red. The tiger is red. The tiger likes the dog. The tiger likes the squirrel. The tiger does not see the dog. If something is kind and nice then it sees the rabbit. If something sees the squirrel and the squirrel is red then the squirrel likes the dog. If something is blue and it likes the dog then the dog needs the rabbit. If something sees the tiger and it is red then it needs the squirrel. If something sees the rabbit and the rabbit is red then it needs the rabbit. If something needs the squirrel and it is red then it is kind. If the squirrel is kind and the squirrel is nice then the squirrel does not see the dog. If the rabbit does not need the squirrel then the squirrel needs the dog.",
    "question": "Based on the above information, is the following statement true, false, or unknown? The rabbit is not nice.",
    "answer": "B",
    "options": [
      "A) True",
      "B) False",
      "C) Unknown"
    ],
    "raw_logic_programs": [
      "Predicates:\nBlue(x) ::: x is blue.\nRed(x) ::: x is red.\nLikes(x, y) ::: x likes y.\nNeeds(x, y) ::: x needs y.\nCold(x) ::: x is cold.\nNice(x) ::: x is nice.\nSees(x, y) ::: x sees y.\nKind(x) ::: x is kind.\nPremises:\nBlue(Dog) ::: The dog is blue.\n¬Red(Dog) ::: The dog is not red.\nLikes(Dog, Squirrel) ::: The dog likes the squirrel.\nLikes(Dog, Tiger) ::: The dog likes the tiger.\n¬Needs(Dog, Rabbit) ::: The dog does not need the rabbit.\nNeeds(Dog, Tiger) ::: The dog needs the tiger.\nCold(Rabbit) ::: The rabbit is cold.\nNice(Rabbit) ::: The rabbit is nice.\nRed(Rabbit) ::: The rabbit is red.\nSees(Rabbit, Tiger) ::: The rabbit sees the tiger.\nBlue(Squirrel) ::: The squirrel is blue.\nRed(Squirrel) ::: The squirrel is red.\nRed(Tiger) ::: The tiger is red.\nLikes(Tiger, Dog) ::: The tiger likes the dog.\nLikes(Tiger, Squirrel) ::: The tiger likes the squirrel.\n¬Sees(Tiger, Dog) ::: The tiger does not see the dog.\n∀x ((Kind(x) ∧ Nice(x)) → Sees(x, Rabbit)) ::: If something is kind and nice then it sees the rabbit.\n∀x ((Sees(x, Squirrel) ∧ Red(Squirrel)) → Likes(Squirrel, Dog)) ::: If something sees the squirrel and the squirrel is red then the squirrel likes the dog.\n∀x ((Blue(x) ∧ Likes(x, Dog)) → Needs(Dog, Rabbit)) ::: If something is blue and it likes the dog then the dog needs the rabbit.\n∀x ((Sees(x, Tiger) ∧ Red(Tiger)) → Needs(Squirrel, x)) ::: If something sees the tiger and it is red then it needs the squirrel.\n∀x ((Sees(x, Rabbit) ∧ Red(Rabbit)) → Needs(x, Rabbit)) ::: If something sees the rabbit and the rabbit is red then it needs the rabbit.\n∀x ((Needs(x, Squirrel) ∧ Red(Squirrel)) → Kind(x)) ::: If something needs the squirrel and it is red then it is kind.\n∀x ((Kind(Squirrel) ∧ Nice(Squirrel)) → ¬Sees(Squirrel, Dog)) ::: If the squirrel is kind and the squirrel is nice then the squirrel does not see the dog.\n∀x (¬Needs(Rabbit, Squirrel) → Needs(Squirrel, Dog)) ::: If the rabbit does not need the squirrel then the squirrel needs the dog.\nConclusion:\n¬Nice(Rabbit) ::: The rabbit is not nice."
    ]
  }
]